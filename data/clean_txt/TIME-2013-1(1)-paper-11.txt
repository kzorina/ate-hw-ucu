2013 20th International Symposium on Temporal Representation and Reasoning  A Labeled Deduction System for the Logic UB  Carlos Caleiro  SQIG - Instituto de TelecomunicacĚ§oĚes  Dep. Mathematics, IST - TU Lisbon, Portugal  ccal@math.ist.utl.pt  Luca ViganoĚ  Marco Volpe  Dipartimento di Informatica  UniversitaĚ di Verona, Italy  {luca.vigano, marco.volpe}@univr.it  sorts of labels allows for deďŹning well-behaved rules for the  composed temporal operators of Peircean logics.  Consider, for instance, the path quantiďŹers â and â, and  the linear-time operator . By introducing not only the labels  x, y, . . . for time instants but also the labels R1 , R2 , . . . for  representing accessibility relations along the diďŹerent paths,  and by properly tuning the freshness conditions on such  labels, we can, e.g., deďŹne the following rules for the Peircean  operators â and â, which follow the same patterns as the  ones seen above for the logic K:  AbstractâWe propose an approach for deďŹning labeled  natural deduction systems for the class of Peircean branching  temporal logics, seen as logics in their own right rather than as  sublogics of Ockhamist systems. In particular, we give a system  for the logic UB, i.e., the until-free fragment of CTL, and show  that it is sound and complete. We also study normalization and  discuss how derivations may reduce to a normal form using an  appropriate management of proof contexts. Finally, we brieďŹy  discuss how to extend our system in order to capture full CTL.  Keywords-Labeled deduction; branching temporal logics;  natural deduction.  [xR1 y]  ..  ..  y:A  âI  x : âA  I. Introduction  In labeled deduction systems for modal and other nonclassical logics (e.g., [3], [13], [15]), labels are typically used  to denote worlds in the underlying Kripke-style semantics.  For example, the following introduction and elimination rules  for the modal operators are deďŹned in [13], [15] for the modal  logic K:  [xRy]  ..  ..  y:A  I  x : A  x : A xRy  E  y:A  y : A xRy  I  x : A  z:B  [y : A]  ..  ..  z:B  E  where x, y are labels, R denotes the accessibility relation, and,  in I, y is required to be fresh, i.e., it must be diďŹerent from  x and not occur in any assumption on which y : A depends  other than the discharged assumption xRy. Analogously, y  must be fresh in E.  If we consider a logic whose models are deďŹned by using  more than one accessibility relation and whose language  allows for quantifying over relations, then it seems convenient  to introduce a second sort of labels for denoting such relations.  This is the case of branching temporal logics. Depending on  the underlying language, we distinguish between Ockhamist  branching temporal logics, where any combination of lineartime operators and path quantiďŹers is allowed, and Peircean  branching temporal logics, where the only temporal operators  admitted are those obtained as a combination of one single  linear-time operator immediately preceded by one single  path quantiďŹer. In this paper, we will show that having two  1530-1311/13 $26.00 ÂŠ 2013 IEEE  1550-1311/13  DOI 10.1109/TIME.2013.14  x : âA  x r(x, A) y  âE  y:A  [xR1 y]  ..  ..  y : A xR1 z  âI  x : âA  with y and R1 fresh in âI, and y fresh in âI (but not R1 ).  In the rule âE, the nesting of a âuniversalâ modality  inside an âexistentialâ quantiďŹer does not allow for designing  a rule that follows the standard pattern of a E. In our  approach, we tackle this problem by introducing Skolem  functions for the accessibility relations: in particular, in this  case, we use a Skolem function r(x, A) to name a path  starting from x and such that A holds in all the points along  that path.  Based on this novel idea of âSkolemized accessibility  relationsâ, in this paper, we build a sound and complete  labeled deduction system for the Peircean logic UB, i.e., the  until-free fragment of CTL. As a further contribution, we  also study normalization and discuss how derivations in our  system may reduce to a normal form using an appropriate  management of so-called proof contexts. Finally, we brieďŹy  discuss how to extend our system to the class of Peircean  branching temporal logics, and focus in particular on the  extension required in order to capture full CTL.  We proceed as follows. In Section II, we recall the details  of UB. In Section III, we formalize our deduction system,  which we show to be sound and complete in Section IV.  Section V is dedicated to the study of normalization. In  Section VI, we discuss how to extend the approach to the full  CTL language and then, in Section VII, we draw conclusions  and point towards future work.  [xRy]  x : A  x : âA xR1 y  âE  y:A  38  45  II. The Logic UB  of inference. Soundness and weak completeness of this  axiomatization have been proven in [1].  We introduce the logic UB, i.e., the until-free fragment of  CTL, by brieďŹy presenting its syntax and semantics, along  with a Hilbert-style axiomatization; see [1] for further details.  III. The System N(UB)  A. Syntax and Semantics of N(UB)  DeďŹnition 1 Given a set P of propositional symbols, the set  of (well-formed) UB formulas is deďŹned by the grammar  In order to formalize our labeled deduction system N(UB),  we extend the syntax and semantics of UB as follows.  First of all, we extend the syntax by introducing labels  that represent states and paths in the underlying semantics.  More speciďŹcally, let us assume given two ďŹxed denumerable  sets of labels LS and LB . Intuitively, the labels x, y, z, . . . in  LS refer to states and the labels , 1 , 2 , . . . in LB refer  to path relations.  We also introduce a third kind of labels. We deďŹne L+B =  LB âŞ {r(x, A) | x â LS ,  â {, }, A is a UB formula},  where we will write r(x, A) to denote labels in L+B \ LB ,  which refer to accessibility relations corresponding to distinct  paths of computation. Further, we will write R, R1 , R2 , . . .  to denote generic elements of L+B .  We can then deďŹne the formulas of N(UB): if x, y â LS ,  R â L+B and A is a UB formula, then  â  â˘ xRy and xR y are relational well-formed formulas  (relational formulas or rwďŹs for short), where the  superscript â denotes the reďŹexive and transitive closure,  and  â˘ x : A is a labeled well-formed formula (labeled formula  or lwďŹ for short).  In order to give a semantics for our labeled system, we  thus need to deďŹne explicitly an interpretation of the labels.  A ::= p |âĽ| A â A | âA | âA | âA ,  where p â P. Other propositional connectives and temporal  operators can be deďŹned as abbreviations in the usual way.  DeďŹnition 2 A UB model is a triple M = (S, R, V) such  that S is a set of states; R â S Ă S is a serial binary relation,  i.e., for all s â S, there exists t â S such that R(s, t), also  denoted as sRt; and V : S â 2P is a valuation function  assigning a subset of P to each state in S.  When sRt holds, we say that t is an immediate successor  of s. An R-path is a sequence of states (s0 , s1 , . . . , sn ) such  that si Rsi+1 for 0 â¤ i â¤ n â 1. An s-branch b is an inďŹnite  R-path b = (s0 , s1 , . . .) such that s = s0 . We write Rb to  denote the restriction of R to a given s-branch b, i.e., tRb t  iďŹ t = si and t = si+1 for some i, and denote with RB the  set of all such Rb . We denote with Râ (respectively, Rbâ ) the  reďŹexive and transitive closure of R (respectively, Rb ).  Given a UB model M and a state s â S, truth for a formula  A is the relation |=M,s deďŹned inductively as follows:  M,s âĽ  |=M,s p  |=M,s A â B  |=M,s âA  |=M,s âA  iďŹ  iďŹ  iďŹ  iďŹ  |=M,s âA  iďŹ  p â V(s)  |=M,s A implies |=M,s B  for all t, sRâ t implies |=M,t A  there exists an s-branch b such that  for all t, sRbâ t implies |=M,t A  there exists t such that sRt and |=M,t A  DeďŹnition 3 Let L = LS âŞ L+B and let M be a UB model  (S, R, V). An interpretation is a function I : L â S âŞ RB  such that:  â˘ for all x â LS , I(x) â S;  +  â˘ for all R â L B , I(R) â RB ;  +  â˘ if r(x, A) â L B \ L B , then  â I(r(x, A)) = Rb for some I(x)-branch b;  â if |=M,I(x) âA, then for all t â S:  â if  = , then I(x)I(r(x, A)) t implies |=M,t A;  â if  = , then I(x)I(r(x, A))â t implies |=M,t A;  Such a deďŹnition can be extended in a standard way to the  notions of satisďŹability by a model M, denoted by |=M , and  validity for all models, denoted by |=.  The Hilbert-style axiomatization H(UB) for the logic UB,  taken from [1], consists of the following set of axioms:  (CL)  (A1)  (A2)  (A3)  (A4)  (E1)  (E2)  (E3)  (E4)  Any tautology instance of classical propositional logic  â(A â B) â (âA â âB)  â(A â B) â (âA â âB)  âA â (âA â§ ââA)  â(A â âA) â (A â âA)  â(A â B) â (âA â âB)  âA â (A â§ ââA)  âA â âA  â(A â âA) â (A â âA)  The notion of interpretation allows us to extend the truth  relation of DeďŹnition 2 to labeled formulas, as well as deďŹne  truth of relational formulas.  DeďŹnition 4 Given a UB model M = (S, R, V) and an  interpretation I on it, truth for a formula Ď (labeled or  relational) is the relation |=M,I deďŹned as follows:  |=M,I x : A  |=M,I xRy  |=M,I xRâ y  and of the following two rules of inference:  (MP) If A and A â B then B  (Nec) If A then âA  iďŹ  iďŹ  iďŹ  |=M,I(x) A  I(x)I(R)I(y)  I(x)I(R)â I(y)  When |=M,I Ď, we say that Ď is true in M according to I.  By extension:  The set of theorems of H(UB) is the smallest set containing  this set of axioms and closed with respect to these rules  46  39  |=M,I Î  Î |=M,I Ď  |=M Ď  |=M Î  Î |= Ď  iďŹ  iďŹ  iďŹ  iďŹ  iďŹ  B. The Rules of N(UB)  |=M,I Ď for all Ď â Î  |=M,I Î implies |=M,I Ď  for every interpretation I, |=M,I Ď  for every interpretation I, |=M,I Î  for every UB model M and  interpretation I, Î |=M,I Ď  R. reďŹ and trans model reďŹexivity and transitivity of each  relation, respectively, whereas comp states that it is possible  to compose two relations, i.e., if xRâ1 y and yRâ2 z, then there  exists a third relation â such that x â z. Finally, we have  two rules capturing two diďŹerent aspects of the seriality of  the relations. ser captures the fact that, given a state x, there  is at least a relation passing through x and a successor along  that relation. sersk says that, given a state x and a Skolem  function r(x, B), there exists a successor of x along that  relation.  Induction Rules: Finally, we have two rules modeling  the induction principle underlying the relation between R  and Râ . Intuitively, indâ corresponds to the axiom (A4) of  H(UB), whereas indâ corresponds to (E4) (cf. the proof of  (E4) in Fig. 2, which makes crucial use of the indâ rule).  The rules of N(UB) are given in Fig. 1. We can classify  them into four categories: (i) rules for classical connectives,  (ii) rules for temporal operators, (iii) relational rules, and (iv)  induction rules.  Rules for Classical Connectives: The rules for the  logical connectives mirror those of other labeled natural  deduction systems for modal logics, e.g., [13], [15]. The rules  âI and âE are the labeled version of the standard [9] natural  deduction rules for implication introduction and elimination.  The rule âĽE is a labeled version of reductio ad absurdum,  where we do not enforce Prawitzâs side condition that A âĽ  and we do not constrain the world in which we derive a  contradiction to be the same as in the assumption.  Rules for Temporal Operators: The rules for the  introduction and the elimination of â, â and â follow the  same structure as the rules for introduction and elimination  of  in labeled systems for modal logics. Let us consider  âI; the idea is that the meaning of x : âA is given by the  metalevel implication x â y =â y : A for an arbitrary path  denoted by the relation  and an arbitrary y â -accessible  from x. The arbitrariness of both  and y is ensured by the  side-conditions of the rule.  Introductions of â and â follow the same principle,  but relax the freshness condition on the label denoting the  relation, thus allowing us to reason on a single speciďŹc path.  Note that in this case a further premise (xRz) is required:  such a premise works as a âwitnessâ, in the sense that it  ensures that the relation R considered is indeed a relation  passing through the state x.  For what concerns the elimination rules, the intuition  behind âE is that if âA holds in a state x and y is  accessible from x (along some path), then it is possible  to conclude that A holds in y. The case of âE and âE  is similar but complicated by the fact that the universal  linear-time operator ( or ) is preceded by an existential  path quantiďŹer (â), which prevents us from inferring the  conclusion for a successor along an arbitrary relation. Our  solution is based on the novel idea of using Skolem functions  as names for particular relations, e.g., r(x, A) denotes a  relation passing at x and such that if âA holds in x, then  A holds at each successor of x along r(x, A).  Relational Rules: Relational rules allow for modeling  properties of the accessibility relations.1 In particular, the rule  base expresses the fact that for each relation R, Râ contains  Given the rules in Fig. 1, the notions of derivation,  conclusion, open and discharged assumption are the standard  ones (see, e.g., [4], pp. 127-129) for natural deduction  systems. We write  Î N(UB) x : A  to say that there exists a derivation of x : A in the system  N(UB) whose open assumptions are all contained in the set  of formulas Î. A derivation of x : A in N(UB) where all the  assumptions are discharged is a proof of x : A in N(UB)  and we then say that x : A is a theorem of N(UB) and write  N(UB) x : A. To denote that Î  is a derivation of x : A whose  set of assumptions may contain the formulas Ď1 , . . . , Ďn , we  write  Ď1 . . . Ďn  Î  x:A  As an example, which will also be useful for the proof  of completeness later on, in Fig. 2 we give derivations for  the labeled versions of the axioms (E2) and (E4), which are  obtained simply by preďŹxing the axioms with the state label  x. For simplicity, in these derivations, we use a rule â§I, a  labeled version of the standard rule for introduction of â§  [10], which is not included in the presentation of the system  but is easily derivable from the rules of Fig. 1.  IV. Soundness and completeness  The system N(UB) is sound and (weakly) complete with  respect to the semantics of Section II, as can be shown  by adapting standard proof techniques for labeled natural  deduction systems.  Theorem 5 (Soundness) For every set Î of labeled and  relational formulas and every labeled formula x : A, it holds  that Î N(UB) x : A â Î |= x : A.  Proof (sketch): The proof proceeds by induction on the  structure of the derivation of x : A. The base case is when  x : A â Î and is trivial. There is one step case for every  1 Note that in these rules we use rwďŹs as auxiliary formulas in order to  derive lwďŹs. Rules treating rwďŹs as full-ďŹedged ďŹrst class formulas, which  can be assumed and derived, could also be deďŹned in the style of [15].  47  40  [x : A. ââĽ]  ..  .  y :âĽ  âĽE  x:A  [x :. A]  ..  .  x:B  âI  x:AâB  [xRâ y]  ..  ..  y : A xRz  âI  x : âA  x : âA  [xRy]  ..  ..  y : A xRz  âI  x : âA  [xR.â x]  ..  .  xRz y : A  reďŹ  y:A  [x â1 z]  [z 2 w] [z : A]  ..  ..  w:A  indâ  xRâ y  x:A  x:AâB x:A  âE  x:B  x r(x, A)â y  âE  y:A  [xRâ y]  ..  ..  xRy z : A  base  z:A  y:A  [x â y]  ..  ..  y:A  âI  x : âA  x : âA xRâ y  âE  y:A  x : âA  x r(x, A) y  âE  y:A  [xR. â z]  ..  .  â  yR z w : A  trans  w:A  xRâ y  xRâ1 y  [x â y]  x:A  [x  y]  ..  ..  z:A  ser  z:A  x r(x, A)â w  w:A  [x r(x, B) y]  ..  ..  z : A ser  sk  z:A  [x . â z]  ..  .  â  yR2 z w : A  comp  w:A  [y r(y, A) z] [y : A]  ..  ..  z:A  indâ  In âI (respectively âI, âI), y is fresh, i.e., it is diďŹerent from x and does not occur in any assumption on which y : A depends other  than the discharged assumption x â y (respectively xRâ y, xRy). Moreover, in âI,  is fresh, i.e., it does not occur in any assumption on  which y : A depends other than the discharged assumption x â y.  In ser, y and  are fresh, i.e., they do not occur in any assumption on which z : A depends other than the discharged assumption x  y; y  is diďŹerent from z.  In sersk , y is fresh, i.e., it is diďŹerent from x and z and does not occur in any assumption on which z : A depends other than the discharged  assumption.  In comp,  is fresh, i.e., it is diďŹerent from R1 and R2 and does not occur in any assumption on which w : A depends other than the  discharged assumption x â z.  In indâ, z, w, 1 and 2 are fresh, i.e., they are diďŹerent from each other and from x, y and R, and do not occur in any assumption on  which w : A depends other than the discharged assumptions of the rule.  In indâ, y, z and  are fresh, i.e., they are diďŹerent from each other and from x and w, and do not occur in any assumption on which z : A  depends other than the discharged assumptions of the rule.  Figure 1.  [x : âA]1 [x r(x, A)â x]3  âE  [x r(x, A) w]2  x:A  reďŹ3  x:A  sersk 2  x:A  The rules of N(UB)  [x : âA]1 [x r(x, A)â z]8  âE  [x r(x, A)â y]7 [y r(x, A)â z]6  z:A  trans8  5  [xr(x, A)y]  z:A  base7  z:A  [x r(x, A) w]4  âI 6  y : âA  x : ââA  sersk 4  x : ââA  â§I  x : A â§ ââA  âI 1  x : âA â (A â§ ââA)  [x : â(A â âA)]1 [x â y]5  âE  y : A â âA  y : âA  2  [x : A]  â  [x r(x, A) w]  4  [y : A]5  z:A  w:A  âE  [y r(y, A) z]5  âE  indâ5  x : âA  sersk 3  x : âA  âI 2  x : A â âA  âI 1  x : â(A â âA) â (A â âA)  Figure 2.  Derivations of the labeled versions of (E2) and (E4)  48  41  [x r(x, A) v]3  âI 4  [x r(x, A) w]4  âI 5  Theorem 6 (Weak completeness) For every UB formula A  and x â LS , it holds that |= x : A â N(UB) x : A.  rule; we show here two representative cases as the other ones  follow in a similar way.  Consider the case when the last rule applied is âI:  Proof (sketch): We prove the thesis by showing that  N(UB) is complete with respect to the axiomatization H(UB),  which is known to be sound and complete for the logic  UB [1]. In other words, we need to prove that: (i) (the  labeled versions) of all of the axioms of H(UB) are provable  in N(UB) and (ii) N(UB) is closed under the (labeled  equivalent of the) rules of inference of H(UB). Showing  (ii) is straightforward and we omit it here. As for (i), see the  derivations that we have given for the labeled versions of two  of the axioms in Fig. 2; the other axioms follow similarly.  [xRâ y]  Î  y : A xRz  âI  x : âA  where Î  is a proof of y : A from hypotheses in Î2 = Î1 âŞ  {xRâ y} for some set Î1 of formulas, with y fresh. By the  induction hypothesis, for each model M and interpretation  I, if |=M,I Î2 then |=M,I y : A. We consider an I and a  M = (S, R, V) such that |=M,I Î = Î1 âŞ {xRz}, and show that  |=M,I x : âA. Let I(x) = s and I(R) = Rb . Since |=M,I Î,  we have |=M,I xRz, i.e., sRbâ I(z), b is a branch passing  through s. Now let s be an arbitrary successor of s along  the branch b, i.e., sRbâ s . We can deďŹne an interpretation I  such that I (y) = s and I (Î´) = I(Î´) if Î´  y. Since y is  fresh and I diďŹers from I only in the value assigned to  y, we have |=M,I Î1 . Moreover, |=M,I xRz and this implies  |=M,I Î2 . By the induction hypothesis, |=M,I y : A, which  yields |=M,s A. But since s was arbitrary, we can conclude  |=M,s âA, i.e., |=M,I(x) âA, and thus |=M,I x : âA.  Consider the case in which the last rule applied is indâ:  Î  x:A  [x â y]  â  x r(x, A) w  w:A  V. Normalization  The presence of rules indâ and indâ modeling an induction  principle suggests an analogy with deduction systems for  Peano arithmetic (e.g., [10], [14], [4]). Although it can  be proved that the standard subformula property does not  hold for such systems, it is possible to consider forms of  (even strong) normalization that allow us to obtain a purely  syntactical proof of consistency.  In [6], where a labeled natural deduction system for  the logic BCTLââ , i.e. the until-free version of CTLâ with  a bundled semantics, is presented, the authors deďŹne a  normalization procedure based on the use of candidates  of reducibility, from which, in analogy with systems for  Arithmetic, they infer a proof of the consistency of the  system. We have been working on a full presentation of a  normalization procedure for N(UB), which we expect to be  able to obtain by imposing some restrictions on the system  and by properly adapting the results in [6]. In this paper,  we focus on the treatment of the most interesting cases,  i.e., those involving the introduction of Skolem functions,  which constitute the backbone of the full normalization proof.  Namely, we show how to deďŹne a proper reduction rule  for the case of a detour, i.e., an introduction immediately  followed by an elimination of the same operator, involving  the operator â (the case of â is analogous).  As we discussed in the introduction, âexistentialâ operators  are typically eliminated in an indirect way (see, e.g., the rule  E shown in the introduction or the rule for elimination  of â in natural deduction systems for ďŹrst-order logic [9]):  a âparallelâ derivation is started where further assumptions  providing a witness for the existential (e.g., the formulas  xRy and y : A in E) are available; the conclusion of such  a parallel derivation is then used as a conclusion of the  elimination rule and we go back to the âmainâ derivation.  If we wanted to deďŹne an elimination rule with a similar  structure for â, the universal quantiďŹcation expressed by  the linear-time operator  would require the possibility of  assuming a rule (and not just a formula) in the parallel  derivation, as allowed in the framework of higher-level natural  [y r(y, A) z] [y : A]  Î  z:A  indâ  where Î  is a proof of z : A from hypotheses in Î2 and  Î  is a proof of x : A from hypotheses in Î1 , with Î =  Î1 âŞ{x r(x, A)â w} and Î2 = Î1 âŞ{xâ y, y r(y, A) z, y : A}  for some set Î1 of formulas. By applying the induction  hypothesis on Î  and Î  , we have: Î2 |= z : A and Î1 |= x : A.  We proceed by considering a generic model M = (S, R, V)  and a generic interpretation I on it such that |=M,I Î and  showing that this entails |=M,I w : A. Let I(x) = s. For  each R-successor s of s such that |=M,s A, we can deďŹne  an interpretation I such that I (y) = s and I (z) is an Rsuccessor s of s along a âprivilegedâ branch I (r(y, A))  (that makes A hold in s if A holds in s ). For the other  labels, I behaves as I. By induction hypothesis on Î , we  get |=M,s A and thus |=M,s A. But s is just an arbitrary  R-successor of s such that |=M,s A. By induction, and by  using the fact that in UB models it holds in general that if  s1 Rb s2 and s2 Rb s3 then there exists a Rb such that s1 Rb s3 ,  we can prove that |=M,s âA, i.e., |=M,I x : âA. Since  |=M,I Î, we also have |=M,I xr(x, A)w. By DeďŹnition 3, we  conclude |=M,I w : A.  The proposed system N(UB) consists of only ďŹnitary rules;  consequently, it cannot be strongly complete for the logic  UB, which does not enjoy compactness. We can prove weak  completeness, i.e., that for each valid formula of UB, we can  derive in N(UB) the corresponding labeled formula.  49  42  [x : A ââĽ]  .  .  .  .  y :âĽ, ÎŁ  âĽE N  x : A, ÎŁ  [x : A]  .  ..  .  x : B, ÎŁ  âIN  x : A â B, ÎŁ  [xRâ y]  .  ..  .  y : A, ÎŁ xRz  âIN  x : âA, ÎŁ  x : A â B, ÎŁ1 x : A, ÎŁ2  âE N  x : B, ÎŁ1 âŞ ÎŁ2  [x â1 z]  x : A, ÎŁ1  xRâ y  y : A, ÎŁ1 âŞ ÎŁ2  [z 2 w]  ..  ..  w : A, ÎŁ2  [xRâ x]  ..  .  .  xRz y : A, ÎŁ  reďŹN  y : A, ÎŁ  [xRâ z]  ..  .  .  xRâ y yRâ z w : A, ÎŁ  transN  w : A, ÎŁ  [x â z]  ..  ..  xRâ1 y yRâ2 z w : A, ÎŁ  [z : A]  indâN  x : âA, ÎŁ xRâ y  âE N  y : A, ÎŁ  [xRy]  .  ..  .  y : A, ÎŁ xRz  âIN  x : âA, ÎŁ  x : âA, ÎŁ x r(x, A)â y  âE N  y : A, ÎŁ âŞ {r(x, A), {Ď1 , . . . , Ďn }}  [xRâ y]  ..  ..  xRy z : A, ÎŁ  baseN  z : A, ÎŁ  [x â y]  .  .  .  .  y : A, ÎŁ  âIN  x : âA, ÎŁ  w : A, ÎŁ  compN  [x  y]  .  ..  .  z : A, ÎŁ  serN  z : A, ÎŁ  x : âA, ÎŁ x r(x, A) y  âE N  y : A, ÎŁ âŞ {r(x, A), {Ď1 , . . . , Ďn }}  [x r(x, B) y]  ..  ..  z : A, ÎŁ  serskN  z : A, ÎŁ \ ÎŁD  [x â y] [y r(y, A) z] [y : A]  ..  ..  z : A, ÎŁ2  x : A, ÎŁ1 x r(x, A)â w  indâN  w : A, ÎŁ1 âŞ ÎŁ2 âŞ {r(x, A), {Ď1 , . . . , Ďn }} \ ÎŁD  In all the rules above, an assumption can be discharged only if the formula in the assumption does not occur in the context of the conclusion.  In âIN (respectively âIN , âIN ), y is fresh, i.e., it is diďŹerent from x and does not occur in any assumption on which y : A depends other than the  discharged assumption x â y (respectively xRâ y, xRy). Moreover, in âIN ,  is fresh, i.e., it does not occur in any assumption on which y : A depends  other than the discharged assumption x â y.  In serN , y and  are fresh, i.e., they do not occur in any assumption on which z : A depends other than the discharged assumption x  y; moreover y is  diďŹerent from z.  In âE N (âE N ), Ď1 , . . . , Ďn are the open assumptions on which x : âA, ÎŁ (x : âA, ÎŁ) depends.  In serskN , y is fresh, i.e., it is diďŹerent from x and z and does not occur in any assumption on which z : A depends other than the discharged assumption.  If the conclusion of the rule does not depend on any open assumption where r(x, B) occurs, then ÎŁD represents any set of dependences of the form  r(x, B), Î for Î a set of formulas; ÎŁD is empty otherwise.  In indâN , z, w, 1 and 2 are fresh, i.e., they are diďŹerent from each other and from x, y and R, and do not occur in any assumption on which w : A  depends other than the discharged assumptions of the rule.  In compN ,  is fresh, i.e., it is diďŹerent from R1 and R2 and does not occur in any assumption on which w : A depends other than the discharged assumption  x â z.  In indâN , y, z and  are fresh, i.e., they are diďŹerent from each other and from x and w, and do not occur in any assumption on which z : A depends other  than the discharged assumptions of the rule. Ď1 , . . . , Ďn are the open assumptions on which x : A, ÎŁ1 and z : A depend other than the ones discharged by the  rule itself. If the conclusion of the rule does not depend on any open assumption where r(y, A) occurs, then ÎŁD represents any set of dependences of the  form r(y, A), Î for Î a set of formulas; ÎŁD is empty otherwise.  Figure 3.  The rules of N(UBN )  where Î â2 is obtained from Î 2 by replacing each application  xâ y  of y:A2 by a proper instance of Î 1 .  deduction systems introduced in [12]2 , i.e.  â  x : âA  z:B  y  ]  [ x  y:A  ..  ..  z:B  Instead of adding such higher-level rules, in N(UB) we  rather prefer to instantiateâby means of Skolem functionsâ  the relations over which we quantify universally and deďŹne  a âdirectâ elimination rule for â (and â), because this  instantiation allows us to model the induction step in the  induction rule indâ (which we would not be able to express  if â was eliminated indirectly).  âESH  Inside the derivation of z : B, and only there, we are allowed  to use a further rule that, given a fresh  and for any y such  that x â y, concludes y : A.  A reduction for an âI/âESH detour is the following:  [xRâ1 w]  Î 1  w : A xR1 z  âI  x : âA  z:B  [  This makes our normalization procedure a bit more  involved. In reducing â detours, we want to use the same  idea seen with the rule âESH but, in order to do that,  we need to identify, in our derivation, the subderivation  that corresponds to the parallel derivation of the previous  example. In such a subderivation, we will replace the Skolem  function involved in the elimination rule by the relation used  to introduce â. Further, as in the previous example, in  such a subderivation, we will possibly reuse the derivation  xâ2 y  ]  y:A  Î 2  z:B  âESH    Î â2  z:B  2 Similarly, we might deďŹne an indirect elimination rule for â and â  by using Skolemization and the pattern of general elimination rules [8].  50  43  that introduced â (Î 1 in the example above) in all the  cases where the Skolem function was used in a signiďŹcant  way, i.e., in applications of rules that speciďŹcally require the  presence of a Skolem function. However, such a replacement  is justiďŹed only if all the assumptions of Î 1 are still open  in this subderivation. While this requirement is satisďŹed by  construction in the case of indirect elimination rules, in our  case we need to enforce it by introducing some restrictions  on the applicability of rules.3  This leads us to deďŹne a variant N(UBN ) of the system  N(UB). Some further terminology is required:  â˘  â˘  â˘  Since N(UBN ) only introduces restrictions on the applicability of the rules of N(UB), the soundness of N(UBN ) is a  direct consequence of the soundness of N(UB). Furthermore,  one can show that all the N(UB) derivations of the axioms  of H(UB) shown in Section IV are still legal in N(UBN ),  thus proving that N(UBN ) is also complete (with respect to  formulas with empty contexts).  We say that a derivation Î  is pure if for all R â L+B \  LB , R does not occur in the conclusion nor in any open  assumption of Î . When normalizing, we restrict to consider  pure derivations. Without loss of generality, we can assume  that each pure derivation containing a detour âIN /âE N  has the following form:  r(x, A), {Ď1 , . . . , Ďn }, where r(x, A) â L+B \ LB and  Ďi is an lwďŹ or a rwďŹ for 1 â¤ i â¤ n, is a dependence;  {Ď1 , . . . , Ďn }, where Ďi is a dependence for 1 â¤ i â¤ n, is  a context;  (Ď, ÎŁ), where Ď is a lwďŹ and ÎŁ is a context, is a formula  with context (for simplicity, we will often omit the  parentheses).  Ď1 . . . Ďn [xRâ y]  Î 1  y : A, ÎŁ  xRx  âIN  x : âA, ÎŁ  [x r(x, A)â z]  âE N  z : A, ÎŁ âŞ {r(x, A), {Ď1 , . . . , Ďn }}  Î 2  w : B, ÎŁ  Î 3  In N(UBN ), we reason on formulas with contexts, where  the dependences in such contexts are used to keep track of  which assumptions cannot be discharged along a derivation.  Namely, when eliminating â and â, we add in the context a  dependence between the Skolem function introduced and the  set of assumptions on which the eliminated formula depends.  Such a dependence will be removed from the context when  all the assumptions where the Skolem function occurs have  been discharged.  Inference rules are, of course, modiďŹed to account for  contexts. The full set of rules of the labeled natural deduction  system N(UBN ) is given in Fig. 3.  We use âŞ to denote an operation on the syntax which,  given two contexts ÎŁ1 and ÎŁ2 , corresponding to the sets  of dependences Î1 and Î2 respectively, returns any context  ÎŁ1 âŞ ÎŁ2 which corresponds to the set union of Î1 and Î2 .  Similarly, \ operates on contexts as the set-minus operator  does on the corresponding sets of dependences. The sideconditions of Fig. 1 still apply. Moreover, in all the rules  of N(UBN ), an assumption can be discharged only if the  formula in the assumption does not occur in the context of  the conclusion (and this highlights the main use of contexts).  The rules âE N , âE N and indâN introduce dependences,  while serskN and indâN allow one to eliminate dependences  from a context.  It is not diďŹcult to prove that  where Î 2 is the smallest subderivation having z : A, ÎŁ âŞ  {r(x, A), {Ď1 , . . . , Ďn }} as one of its assumptions and concluding with a formula (w : B, ÎŁ ) such that ÎŁ does not  contain the dependence r(x, A), {Ď1 , . . . , Ďn } (such a Î 2  exists since we deal with pure derivations). The derivation  above can be reduced to the following one:  Ď1 . . . Ďn [xRâ z]  Î 1 [z/y]  z : A, ÎŁ[z/y]  Î â2 [R/r(x, A)]  w : B, ÎŁ  Î 3  where the assumption xRâ z can be discharged by the application that discharges x r(x, A)z in Î 2 (or by its transformation  in Î â2 , see below). The idea is that, since R is the relation that  made it possible to derive x : âA, we can safely replace  any occurrence of r(x, A) by R itself.  However, a blind replacement of each occurrence of  r(x, A) by R in Î 2 does not necessarily give rise to a  well-deďŹned N(UBN ) derivation. In particular, this is not the  case if r(x, A) is used in Î 2 in a signiďŹcant way, i.e., in  an application of serskN , âIN or indâN . In such cases, it is  necessary to further modify the structure of Î 2 by means of  an iterative process whose result we denote by Î â2 . Such a  process consists in: (i) replacing each application of serskN  that uses r(x, A) as follows:  Theorem 7 N(UBN ) and N(UB) are equivalent.  The truth relation for formulas with contexts can be simply  deďŹned as:  |=M,I (x : A, ÎŁ) iďŹ  |=M,I(x) A  [x r(x, A)x ]  Î  v : C, ÎŁ  serskN  v : C, ÎŁ \ ÎŁD  3 This  is similar to what is done in those systems for ďŹrst-order logic  in which a rule of existential instantiation is used instead of existential  elimination (see, e.g., [7]).  51  44    xRx  Î  â [R/r(x, A), x /x ]  v : C, ÎŁ [R/r(x, A)]  (ii) replacing each application of âE N that uses r(x, A)  by an instance of Î 1 as follows:  Î  x : âA, ÎŁ  xr(x, A)â v  âE N  v : A, ÎŁ âŞ ÎŁ    the use of Skolemization allows us to design proper rules even  in the case when the nesting of operators with an existential  and a universal nature (like â) makes it impossible to deďŹne  a standard natural deduction rule.  The treatment of the operator until is notoriously complex  from a proof-theoretical point of view (see [5] for a detailed  discussion). In this paper, in order to simplify the presentation  of our approach, we decided to focus on the until-free  fragment of CTL. In this section, we just give an insight of  how the idea of Skolemization can be used also to express  introduction and elimination rules for the temporal operators  containing until.  Let us consider the operator âU (the operator âU can  be treated similarly). First, we recall the semantics of the  operator:  xRâ v  Î 1 [v/x]  v : A, ÎŁ  (iii) replacing each application of indâN that uses r(x, A)  by an instance of Î 1 as in (ii). Note that the contexts in the  conclusions are in some cases diďŹerent in the derivations on  the left and on the right. However, we can show that such  diďŹerences are not relevant, in the sense that dependences  that are present on the left but not on the right cannot contain  signiďŹcant restrictions for the derivation on the right; on the  contrary, dependences on the right but not on the left can  always be eliminated afterwards in Î â2 .  With regard to (ii) and (iii), the fact that Î 2 is the smallest  subderivation concluding with a formula (w : B, ÎŁ ) such that  ÎŁ does not contain r(x, A), {Ď1 , . . . , Ďn } ensures that all  the assumptions Ď1 , . . . , Ďn on which the conclusion of Î 1  possibly depends are not discharged in Î 2 . Thus Î 1 can be  safely reused inside Î â2 , i.e., all the assumptions Ď1 , . . . , Ďn  that were discharged by a rule application in Î 3 in the original  derivation can be also discharged in any copy of Î 1 , in the  reduced derivation.  An example of a reduction of a derivation containing an  âIN /âE N detour is shown in Fig. 4. In the derivation  above, the âE N application concluding with z : A, ÎŁ1 opens  a subderivation with a dependence for the Skolem function  r(x, A). Such a subderivation terminates with the application  of serskN , which discharges all the assumptions containing  r(x, A) and eliminates the corresponding dependences from  the context. The reduction replaces R for r(x, A) all along  the subderivation. The example also shows how the structure  of the subderivation needs to be modiďŹed when it contains  rules that use the Skolem function in a signiďŹcant way. In  particular, as an instance of case (ii) of the description above,  the âE N application concluding with z : A, ÎŁ2 in the original  derivation is replaced by a copy of the derivation concluding  y : A (z : A after the substitution); while, as an instance of  case (i) above, the application of serskN is removed in the  reduced derivation and the assumption that was discharged  by serskN is replaced by the assumption xRx .  The contraction rule deďŹned here for the case âIN /âE N  can be seen as a key reduction step in the deďŹnition of a  complete normalization procedure, to be developed along the  lines of the one presented in [6]. A full treatment is left for  future work.  |=M,s â(AU B) iďŹ there exist an s-branch b and a t â b such that  |=M,t B and for all v, sRbâ vRb t implies |=M,v A.  As we did in the cases of âE and âE, we can introduce  Skolem functions of the form r(x, AU B) to denote a relation  passing through x and such that AU B holds over the path  represented by that relation. Moreover, given a state x and  a path b starting from x and such that AU B holds on b, we  can use a similar mechanism to give a name to a state along  b where B actually holds and such that A was always true  before. Such a name will be a function of three arguments:  the state x, the relation R corresponding to b and the formula  AU B; we will denote it w(x, R, AU B).  Rules for the elimination of âU will have the form:  x : â(AU B)  âUE1  w(x, r(x, AU B), AU B) : B  x : â(AU B)  x r(x, AU B)â y  y r(x, AU B)â w(x, r(x, AU B), AU B)  âUE2  y:A  âUE1 creates a state, denoted w(x, r(x, AU B), AU B), where  B holds. âUE2 expresses the fact that in each state y, placed  between x and w(x, r(x, AU B), AU B) along r(x, AU B), A must  hold.  The corresponding introduction rule will have the form:  [xRâ z]  xRâ y  y:B  x : â(AU B)  [zRâ y]  .  .  .  .  z:A  âU I  where z is required to be fresh.  The rules above show that the use of Skolem functions  gives us also enough expressivity to capture the semantics  of temporal operators based on U. This paves the way to an  extension of the system N(UB) able to cover full CTL. A  complete treatment is left for future work.  VI. Towards CTL  The framework based on the use of path labels and  Skolemization, described in the previous sections for the  logic UB, can be adapted to cover the whole class of Peircean  branching-time logics. In particular, the use of path labels  allows us to reason on path quantiďŹers in a modular way and  VII. Conclusions  DiďŹerent labeled natural deduction approaches for Peircean  branching-time logics have been proposed, e.g., in [2], [11].  52  45  [x : âA â§ âA]1  â§E N  x : âA  y:A  [xRâ y]5  âE N  [xRx ]2  x : âA  âIN5  z : A, ÎŁ1  [x : âA â§ âA]1  â§E N  x : âA  z:A  [x : âA â§ âA]1  â§E N  x : âA  [x r(x, A)â z]4  âE N  âE N  z : A, ÎŁ2  â§IN  z : A â§ A, ÎŁ  x : â(A â§ A), ÎŁ  serskN 3  x : â(A â§ A)  serN 2  x : â(A â§ A)  âIN1  x : (âA â§ âA) â â(A â§ A)  [x r(x, A)â z]4  [xRâ z]4  [x r(x, A) x ]3  âIN4  [x : âA â§ âA]1  â§E N  x : âA  [xRâ z]4  âE N  âE N  z:A  â§IN  z: Aâ§A  [xRx ]2  âIN4  x : â(A â§ A)  serN 2  x : â(A â§ A)  âIN1  x : (âA â§ âA) â â(A â§ A)  where ÎŁ1 = {r(x, A), {x : âA â§ âA, xRx }}, ÎŁ2 = {r(x, A), {x : âA â§ âA}} and ÎŁ = ÎŁ1 âŞ ÎŁ2 .  Figure 4.  An example of a contraction of a âI/âE detour: the derivation above reduces to the one below  Both focus on the logic CTL, although [11] presents a  set of operators diďŹerent from the standard one. In [11],  normalization is proved for the subsystem obtained by  removing rules for induction, while in [2] there is no  treatment of normalization.  In our approach, the use of Skolemized accessibility  relations has allowed us to give a sound and complete labeled  deduction system for the Peircean logic UB, and set up a  proof of how derivations in our system may reduce to a  normal form using an appropriate management of so-called  proof contexts. Moreover, this approach is open to extensions:  we have discussed the extension required to capture full CTL  and, consequently, the whole class of Peircean branching  temporal logics. All these issues will be discussed in detail  in future work.  [5] A. Masini, L. ViganoĚ, and M. Volpe. Back from the future.  JANCL, 20(3):241â277, 2010.  [6] A. Masini, L. ViganoĚ, and M. Volpe. Labelled natural  deduction for a bundled branching temporal logic. J. Log.  Comput., 21(6):1093â1163, 2011.  [7] G. Mints. Existential instantiation and strong normalization.  In LFCS, LNCS 1234, pp. 258â265. Springer, 1997.  [8] S. Negri and J. von Plato. Structural proof theory. Cambridge  University Press, 2001.  [9] D. Prawitz. Natural Deduction: a Proof-Theoretical Study.  Almquist and Wiskell, 1965.  [10] D. Prawitz. Ideas and results in proof theory. In Second  Scandinavian Logic Symposium, pp. 235â307. North-Holland,  1971.  Acknowledgments  [11] C. J. RenterÄąĚa and E. H. Haeusler. A natural deduction system  for CTL. Bulletin of the Section of Logic, 31:231â240, 2002.  All three authors acknowledge support from the EU  FP7 Marie Curie PIRSES-GA-2012-318986 project GeTFun:  Generalizing Truth-Functionality; Carlos Caleiro also acknowledges support from FCT and EU FEDER via the project  PEst-OE/EEI/LA0008/2013 of Instituto de TelecomunicacĚ§oĚes.  [12] P. Schroeder-Heister. A natural extension of natural deduction.  J. Symb. Log., 49(4):1284â1300, 1984.  [13] A. K. Simpson. The Proof Theory and Semantics of Intuitionistic Modal Logic. PhD thesis, School of Informatics,  University of Edinburgh, 1994.  References  [1] M. Ben-Ari, A. Pnueli, and Z. Manna. The temporal logic of  branching time. Acta Inf., 20:207â226, 1983.  [14] A. S. Troelstra. Metamathematical investigation of intuitionistic arithmetic and analysis. LNM 344. Springer, 1973.  [2] A. Bolotov, O. Grigoriev, and V. Shangin. Natural deduction  calculus for computation tree logic. In John Vincent AtanasoďŹ  Symposium, pp. 175â183. IEEE Computer Society, 2006.  [15] L. ViganoĚ. Labelled Non-Classical Logics. Kluwer, 2000.  [3] D. M. Gabbay. Labelled Deductive Systems. Clarendon, 1996.  [4] J.-Y. Girard. Proof Theory and Logical Complexity, volume 1.  Bibliopolis, 1987.  53  46 