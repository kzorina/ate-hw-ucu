Undecidability and temporal logic:  some landmarks from Turing to the present  Valentin Goranko  Technical University of Denmark  TIMEâ2012  Leicester, September 12-14, 2012  TIMEâ2012  Valentin Goranko  Outline  â˘ Introduction: a brief retrospective.  â˘ Turingâs undecidability of the Halting Problem (HP) from  temporal logics perspective.  â˘ Undecidability of interval temporal logics by reduction from  the HP  â˘ Undecidability by reduction from tiling problems  â˘ Undecidability of temporalized logics  â˘ Undecidability of quantitative temporal logics  â˘ Outlook and concluding remarks  TIMEâ2012  Valentin Goranko  The focus of this talk  â˘ Undecidability of the satisfiability/validity problem;  (almost) no model checking;  â˘ Only propositional temporal (and modal) logics;  (almost) no first-order logics;  â˘ Details of some interesting cases and an overview of the rest.  No claim of completeness!  TIMEâ2012  Valentin Goranko  Introduction: a brief retrospective  â˘ 1936: Turing proves the undecidability of the Halting problem.  â˘ 1936: Church proves the undecidability of first-order logic.  â˘ 1957-1967: Prior introduces formal temporal logic.  â˘ 1962: BuĚchi: decidability of the MSO of one successors  1969: Rabin: decidability of the MSO of two successors  â˘ 1974: Burstall proposes the use of temporal logics in CS.  1977: Pnueli introduces LTL and proposes the use of temporal  logics to specification and verification of reactive systems.  â˘ Since early 1970s: many decidability results for propositional  modal and temporal logics, using FMP or BuĚchi/Rabin results.  Modal/temporal logics praised for their ârobust decidabilityâ.  â˘ However, since the mid 1970s a variety of undecidability  results in propositional temporal logics emerges, too.  â˘ In retrospective: Turingâs undecidability of the Halting  TIMEâ2012  problem is the first such undecidability result.  Valentin Goranko  Turingâs undecidability of the Halting problem  from temporal logic perspective  TIMEâ2012  Valentin Goranko  The halting of a Turing machine  as a temporal logic formula  â˘ The configuration graph of a TM as a transition system  Conf (M):  â˘ States: configurations of the TM  â˘ Transitions: determined by the TM transition relation  â˘ Labels for initial and terminal states  â˘ Temporal logic for Turing machines:  â˘ Atomic propositions init for the initial states and term for  terminal states, plus temporal operators incl. X and F .  â˘ Expressing the halting property (for deterministic TM) :  init â F term  TIMEâ2012  Valentin Goranko  The Halting problem as a model checking problem  The Halting problem as a local model checking problem:  â˘ The halting of a Turing machine M on any given input is  equivalent to the truth of F term at the corresponding  initial state in Conf (M).  â˘ Thus, the undecidability of the Halting problem translates into  an undecidable local model checking problem in the class of  transition systems of type Conf (M).  â˘ Applying this to the universal Turing machine U yields an  undecidable local model checking problem on Conf (U) alone.  The Halting problem as a global model checking problem:  â˘ The halting of M on every given input is equivalent to the  validity of init â F term in Conf (M).  â˘ The undecidability of the Halting problem implies that the  TIMEâ2012  problem whether a given TM always halts is undecidable.  Valentin Goranko  The Halting problem as a validity problem  â˘ Any Turing machine M can be described by a temporal logic  formula ÎŚ(M) in a sufficiently expressive temporal language.  â˘ The Halting problem for M on a blank tape is equivalent to  the validity of  (ÎŚ(M) â§ init-blank) â F term  TIMEâ2012  Valentin Goranko  Early undecidability results in propositional temporal logics  The first known to me undecidability result for a propositional  temporal logic:  Steve Thomason  Reduction of Second-Order Logic to Modal Logic  Mathematical Logic Quarterly, vol 21, 1975, pp. 107-114  Reduction of the frame validity based logical consequence the  MSO theory of a binary relation to a propositional tense logic T15  with a set of Priorâs tense operators Hi , Gi , Pi , Fi over each of 15  temporal orderings 1 , . . . , 15 , satisfying special interrelations.  Further, the logical consequence in T15 is reduced to logical  consequence in plain modal logic.  NB: the reduction adds a special formula Î´ to the premises, so it  does not reduce validity to validity.  TIMEâ2012  Valentin Goranko  Early undecidability results in propositional temporal logics  contâd  Stephen Isard  A Finitely Axiomatizable Undecidable Extension of K.  Theoria 43 (3), 1977, pp. 195-202.  This is seemingly the first undecidability result in modal logic,  using reduction from the Halting problem (of Minsky machines).  Valentin Shehtman  Undecidable Propositional Calculi.  Problems of Cybernetics. Non-classical logics and their applications, vol.  75, 1982, p.74-116 (in Russian)  These results refer to specially constructed, mostly artificial, logics.  The first undecidability results on ânaturalâ, purely temporal logics?  TIMEâ2012  The answer seems to lead to interval logics.  Valentin Goranko  Undecidability of interval temporal logics  TIMEâ2012  Valentin Goranko  Moszkowskiâs Propositional Interval Temporal Logic (PITL)  Joseph Halpern, Zohar Manna, and Ben Moszkowski  A Hardware Semantics Based on Temporal Intervals.  Tech Report STAN-CS-83-963, Stanford University, 1983.  Ben Moszkowski  Reasoning about Digital Circuits.  PhD Thesis, Stanford University, 1983.  PITL-formulae:  Ď ::= p | ÂŹĎ | Ď â§ Ď |  Ď | Ď; Ď.  Models of PITL: based on (finite) discrete linear orderings.  Formulae are evaluated on discrete intervals:  finite sequences of states Ď = s0 , s1 , . . . , sn , with n âĽ 0.  TIMEâ2012  Valentin Goranko  PITL with locality: semantics and decidability  â˘ Atomic propositions evaluated at states.  â˘ Locality principle: the value of an atomic proposition over an  interval is its value at the initial state of that interval.  â˘ Semantics of ânextâ operator  s0 , s1 , . . . , sn |=  Ď, where n > 0, iff s1 , . . . , sn |= Ď  â˘ Semantics of âchopâ operator ;  s0 , s1 , . . . , sn |= Ď; Ď iff there is i where 0 â¤ i â¤ n,  such that s0 , s1 , . . . , si |= Ď and si+1 , . . . , sn |= Ď.  Theorem[Halpern and Moszkowski, 1983]: The satisfiability  problem for PITL with locality is decidable, though [Kozenâ92]  with nonelementary complexity.  TIMEâ2012  Valentin Goranko  PITL: undecidability  Theorem[Halpern and Moszkowski, 1983]: The satisfiability  problem for PITL without locality is undecidable.  Proof idea: follows early 1980âs work by Chandra, Halpern, Meyer  and Parikh on process logics.  Uses undecidability of emptiness of the intersection of the  languages of two context-free grammars (in Greibach normal form).  Given two context-free grammars G 1 and G 2, one can construct a  PITL formula that is satisfiable iff the intersection of the languages  generated by G 1 and G 2 is nonempty.  Proof details in:  TIMEâ2012  Ben Moszkowski  A Hierarchical Completeness Proof for Propositional Interval Temporal  Logic with Finite Time.  Journal of Applied Non-Classical Logics, Special issue on Interval  Temporal Logics and Duration Calculi, vol. 14(12), 2004, pp 55â104 Valentin Goranko  Undecidability of duration calculi  Duration calculus: extension of the PITL framework with the  notion of a state and state duration.  Zhou Chaochen, C. A. R. Hoare and A.R. Ravn  A Calculus of Durations  Information Processing Letters, 40(5):269-276, 1991  Even very simple fragments of DC are undecidable:  Michael R. Hansen and Zhou Chaochen  Duration Calculus: Logical Foundations  Formal Aspects of Computing, vol. 9 (1997), pp.283 330  Proof technique: reduction from the halting problem for 2-counter  Minsky machines.  TIMEâ2012  Valentin Goranko  Allenâs interval relations  J. F. Allen  Maintaining knowledge about temporal intervals.  Communications of the ACM, volume 26(11), pages 832-843, 1983.  TIMEâ2012  later  hLi hLi  after/meets  hAi hAi  overlaps  hOi hOi  ends/finishes  hEi hEi  during  hDi hDi  begins/starts  hBi hBi  Valentin Goranko  Halpern-Shohamâs interval logic  J. Halpern and Y. Shoham  A propositional modal logic of time intervals.  Proc. of LICSâ1986, pp. 279-292.  J. Halpern and Y. Shoham  A propositional modal logic of time intervals.  Journal of the ACM, vol. 38(4), 1991, pp 935-962.  HS: a multimodal logic with modal operators associated with  Allenâs interval relations.  In the case of non-strict semantics when point intervals are allowed,  it suffices to choose as primitive the modalities hBi, hE i, hBi, hE i  corresponding to the relations begins, ends, and their inverses:  Ď ::= p | ÂŹĎ | Ď â§ Ď | hBiĎ | hE iĎ | hBiĎ | hE iĎ.  TIMEâ2012  In the case of strict semantics without point intervals, the right  and left neighbourhood modalities hAi and hAi must be added. Valentin Goranko  Undecidability in interval logics:  the bad news  Hereafter we assume the non-strict semantics, but all results apply  to the strict semantics, too.  Theorem[Halpern and Shohamâ91]  The validity in HS over any class of ordered structures containing  at least one with an infinitely ascending sequence is r.e.-hard.  Thus, in particular, HS is undecidable over the classes of all  (non-strict) models, all linear models, all discrete linear models, all  dense linear models, N, Z, Q, R, etc.  Proof idea: reduction from the non-halting problem for Turing  machines to testing satisfiability in HS.  TIMEâ2012  Valentin Goranko  Undecidability in interval logics:  can be worse...  Theorem[Halpern and Shoham] The validity in HS over any  class of Dedekind complete ordered structures containing at least  one with an infinitely ascending sequence is Î 11 -hard.  In particular, the validity in HS over any of the orderings of the  natural numbers, integers, or reals is not recursively axiomatizable.  Proof: by reduction to satisfiability in HS of the recurrence problem  for non-deterministic TM, asking for existence of a computation of  a given NTM entering the start state infinitely often.  TIMEâ2012  Valentin Goranko  ... and even worse  Undecidability occurs even without existence of infinitely ascending  sequences. A class of ordered structures has unboundedly  ascending sequences if for every n there is a structure in the class  with an ascending sequence of length at least n.  Theorem[Halpern and Shoham] The validity problem in HS  interpreted over any class of Dedekind complete ordered structures  having unboundedly ascending sequences is co-r.e. hard.  In particular, satisfiability of HS formulae in the finite is r.e. hard.  Proof idea: reduction from the halting problem for Turing  machines to testing satisfiability in HS.  TIMEâ2012  Valentin Goranko  Some details of Halpern-Shohamâs reduction  setting the stage  Fix a Turing machine M = h{0, 1}, Q, q0 , qf , Î´i.  Atomic propositions: L = {0, 1, â, #, (q, 0), (q, 1), (q, B) : q â Q},  Truth in all future intervals: [F ]Ď := [A]Ď â§ [L]Ď.  A special propositional constant Ď, true at all point intervals.  Truth at the beginning/end of the current interval:  [[BP]]Ď := [B](Ď â Ď); [[EP]]Ď := [E ](Ď â Ď).  Every cell on the tape represented by an interval satisfying  cell(p) := [[BP]]# â§ [[EP]]# â§ [D]p â§ hDip.  TIMEâ2012  Valentin Goranko  Some details of Halpern-Shohamâs reduction  IDs and configurations  ID: a sequence of cells, represented by an interval satisfying  _  ID := hBicell(â)â§hE icell(â)â§hDi  cell(l)â§ÂŹhDicell(â)  lâL,l6=#  Starting configurations:  startID := IDâ§hDi(cell((q0 , 0))â¨cell((q0 , 1))â¨cell((q0 , b))).  Final configuration:  finalID := IDâ§hDi(cell((qf , 0))â¨cell((qf , 1))â¨cell((qf , b))).  TIMEâ2012  Valentin Goranko  Some details of Halpern-Shohamâs reduction  encoding computations  Computations of M are encoded as sequences of configurations:  âID1 â âID2 â âID3 â â . . .  To ensure matching the transition relation Î´, a special atomic  proposition corr is used, saying that an interval start and ends  with cells that are corresponding in two consecutive IDs.  Describing corr is the most ingenious part of the reduction.  In the long run, the formula computation is defined, which is true  of an interval iff it encodes a legitimate computation of M.  Now, non-halting is expressed by  NoHalt := computation â§ [F ]ÂŹ finalID.  Hence, the reduction from non-halting of M to SAT(NoHalt).  TIMEâ2012  For the satisfiability of NoHalt, any interval structure with an  infinite ascending chain suffices.  Valentin Goranko  Reduction from the halting problem  Note, that halting cannot be expressed by  computation â§ F finalID.  because there may be non-standard models, e.g. on dense orders.  Such non-standard models can be eliminated on Dedekind  complete orders by using the formula  NoTelescope := ÂŹhBi[E ]hDicell.  Eventually, the halting problem for M is reduced to satisfiability of  Halt := computation â§ standard â§ hBistartID â§ hE ifinalID,  where standard is a formula ensuring that any interval starting  and ending with IDs can be subdivided into a finite number of IDs.  TIMEâ2012  On Dedekind complete structures one can also express the property  Valentin Goranko  of a computation to visit infinitely often its starting state.  Fragments of Halpern-Shohamâs interval logic  Every subset of the 12 Allenâs relations (excl. the equality) defines  a fragment of HS.  Thus 4096 fragments arise; of them over 1000 expressively distinct.  ([D. Della Monica, A. Montanari, VG., G. Sciavicco, IJCAIâ 2011]:  in strict semantics there are 1347 expressively distinct fragments.)  We denote fragments by listing the letters representing the  occurring modalities, e.g. BE , OAA, etc.  TIMEâ2012  Valentin Goranko  Sharpening the undecidability: early results  An inspection of the formulae in the constriction shows that any of  the fragments ABE and ABE suffices for these reductions.  By refining Halpern and Shohamâs reduction, Lodaya proved in  Kamal Lodaya  Sharpening the Undecidability of Interval Temporal Logic.  ASIAN 2000, volume 1961 of LNCS, pages 290-298. Springer, 2000.  the following:  Theorem The BE -fragment of HS is undecidable over the classes  of dense linear interval structures, and consequently, over all linear  interval structures.  Corollary The interval logic with âChopâ alone is undecidable  over the classes of all (dense) linear interval structures.  TIMEâ2012  Valentin Goranko  Undecidability of temporal logics via tiling  TIMEâ2012  Valentin Goranko  The Integer Grid Tiling Problem (IGTP)  Tile: a âsquareâ with coloured sides: hcup , cright , cdown , cleft i.  The N Ă N - tiling Problem:  Given a finite set of tile types T = {t1 , . . . , tk } of unlimited supply,  can it be applied to tile the integer plane N Ă N by matching the  respective colors of adjacent tiles?  Theorem[Berger, 1966]  The Integer Grid Tiling Problem is undecidable.  TIMEâ2012  The reason: there exist sets of tiles that can only tile the plane  aperiodically.  Valentin Goranko  Aperiodic tiling: example  TIMEâ2012  Valentin Goranko  Applications of tiling problems  to logical undecidability/complexity  David Harel  Recurring Dominoes: Making the Highly Undecidable Highly  Understandable  Ann. Disc. Math. 24 (1985), 51-72.  Reduction from the IGTP can be used to prove plain  undecidability, i.e. non-recursiveness, but recursive enumerability.  Tiling can also be used to prove ÎŁ11 -hardness, by reduction from  the recurrent Tiling problem, asking for existence of tiling in which  a given tile occurs infinitely often in the first row.  There are many decidable tiling problems. Polynomial reduction to  them can be used to prove complexity results.  TIMEâ2012  Valentin Goranko  Generic proof of undecidability via tiling  Proving undecidability via reduction from the IGTP of a logic L:  1. Construct a formula GRID in L setting the grid.  2. Construct formulae in L describing the tiles in a given tile set.  3. Construct a formula in L describing correct tiling.  4. Translate any tiling problem to satisfiability of a formula of L.  TIMEâ2012  Valentin Goranko  Early undecidability via tiling results in temporal logic  Sample results in [Harelâ85]: satisfiability in each of the following is  ÎŁ11 -hard by reduction from the recurrent Tiling problem:  â˘ Quantified LTL(X,F),  â˘ 2-dimensional LTL(X,F),  â˘ the temporal spatial logic combining LTL(X,F) with K4.  Edith Spaan  Complexity of modal logics  Ph. D. Thesis. University of Amsterdam, 1993  Proves undecidability and ÎŁ11 -hardness via tiling of the satisfiability  of various modal logics; in particular, logics obtained from  decidable ones by extending with universal modality.  TIMEâ2012  Valentin Goranko  An easy proof of undecidability via tiling  Consider the two-dimensional temporal logic X 2 with ânextâ  operators for each of the 4 directions hâi, hâi, hâi, hâi, as well  as a global modality, interpreted over the integer grid.  Then there is a straightforward encoding of IGTP, following  Mark Reynolds  Two-dimensional temporal logic  Proc. of Logic Colloquium â96, Springer-Verlag, 1998, pp. 219-236.  1. The formula GRID is not necessary, only needed to indicate  the origin, by ÂŹhâi> â§ ÂŹhâi>.  2. Every tile Ď is treated as an atomic proposition.  3. The formula describing correct tiling is:  [U]  â _  Ď âT  TIMEâ2012  Ďâ§  ^  Ď 6=Ď 0  ÂŹ(Ď â§Ď 0 ) â§  ^  up(Ď )6=down(Ď 0 )  ÂŹ(Ď â§hâiĎ 0 ) â§  ^  ÂŤ  ÂŹ(Ď â§hâiĎ 0 )  right(Ď )6=left(Ď 0 )  4. The tiling problem readily translates into satisfiability of the  Valentin Goranko  conjunction of the above in N Ă N.  A difficult proof of undecidability via tiling  of the Compass Logic  Compass Logic [Venemaâ90]: a two-dimensional modal logic  interpreted on products of two linear orders, with modal operators  for each coordinate direction. NB: no ânext timeâ operators. Yet:  Theorem[Marx and Reynoldsâ1997] The satisfiability in the  compass logic is undecidable.  Maarten Marx and Mark Reynolds  Undecidability of the compass logic  Journal of Logic and Computation, 9(6), 1997, pp. 897-914.  Proof by elaborated encoding of the tiling problem.  NB: high undecidability on N Ă N was proved earlier by Spaan, by  reduction from the recurrence problem for NTM, in:  TIMEâ2012  Edith Spaan  Nexttime is not necessary  Proc of TARKâ1990, 241-256  Valentin Goranko  Undecidability of hybrid logic with binders via tiling  TIMEâ2012  Valentin Goranko  Digression: hybrid logics  Hybrid modal/temporal logics bring useful features of first-order  logic into modal logic, thus boosting the expressiveness of ML  without affecting its good computational properties.  Historical origins: Prior and Bull, in tense logic.  Explicitly developed since the early 1980âs.  TIMEâ2012  Valentin Goranko  Main hybrid logic features  â˘ Nominals: referring to single worlds in the model.  Intuition: time stamps, âclock variablesâ. Formally:  (W , R, V ), u  i iff V (i) = u  â˘ Universal/global modality: referring to all worlds in the model:  M, u  [U]Ď iff M, w  Ď for every w â M.  â˘ Satisfaction operators: refer to the truth at a named world:  (W , R, V ), u  @i Ď iff (W , R, V ), V (i)  Ď.  â˘ State variables: like nominals, but with no fixed interpretation.  Assigned values by a separate variable assignment and used  for reference to earlier stored possible worlds.  â˘ Reference pointers/binders: refer to the current world.  âs Ď means: âĎ is true if the current world is assigned to sâ.  TIMEâ2012  Formally: M, g , u âs Ď iff M, g [s â u], u  Ď, where  g [s â u] is the assignment g , modified by assigning u to g (s).  Valentin Goranko  Examples on the expressiveness with binders  â˘ The difference modality is definable in H([U], â):  [D]Ď = âs [U](ÂŹs â Ď).  â˘ Nominals can be modelled H([U], â):  NOM(Ď) = hUi(Ď â§ [D]ÂŹĎ)  â˘ Until and Since are definable in the tense hybrid logic Ht (â):  pUq =âs (Fq â§ (H(Ps â p))),  and likewise for Since.  â˘ Until is definable even in H(@, â):  pUq =âs 3 ât (q â§ @s 2(3t â p)).  TIMEâ2012  Valentin Goranko  Undecidability of H([U], â) via tiling  Theorem[G.,1994] The satisfiability in H([U], â) is undecidable,  by reduction from the Integer Grid Tiling Problem.  Valentin Goranko  Temporal Logic with Reference Pointers,  Proc. of ICTLâ94, Springer, LNAI 827, 1994, pp. 133-148.  Later, strengthened [Areces, Blackburn, and Marx, 1999] to  undecidability of H(@, â).  The encoding is not straightforward, but is quite intuitive:  the formula GRID(p, q) says that every point of the model has  exactly two successors: at one of them the value of p changes and  the value of q remains the same (the move âto the rightâ),  while at the other (the move âupwardsâ) the opposite happens.  Moreover, the routes âright;upâ and âup;rightâ converge.  TIMEâ2012  Valentin Goranko  Setting the Grid in H([U], â)  Ď1  =  [U]((p â§ q â F (p â§ ÂŹq) â§ F (ÂŹp â§ q) â§ G ((p â§ ÂŹq) â¨ (ÂŹp â§ q))) â§  (p â§ ÂŹq â F (p â§ q) â§ F (ÂŹp â§ ÂŹq) â§ G ((p â§ q) â¨ (ÂŹp â§ ÂŹq))) â§  (ÂŹp â§ q â F (ÂŹp â§ ÂŹq) â§ F (p â§ q) â§ G ((ÂŹp â§ ÂŹq) â¨ (p â§ q))) â§  (ÂŹp â§ ÂŹq â F (ÂŹp â§ q) â§ F (p â§ ÂŹq) â§ G ((ÂŹp â§ q) â¨ (p â§ ÂŹq)))),  Ď2  =  [U] âs ((p â§ q â [U](Fs â G (p â§ q â s))) â§  (p â§ ÂŹq â [U](Fs â G (p â§ ÂŹq â s))) â§  (ÂŹp â§ q â [U](Fs â G (ÂŹp â§ q â s))) â§  (ÂŹp â§ ÂŹq â [U](Fs â G (ÂŹp â§ ÂŹq â s)))),  Ď3  =  [U] âs ((p â§ q â [U]((ÂŹp â§ ÂŹq â§ FFs) â GG (p â§ q â s))) â§  (p â§ ÂŹq â [U]((ÂŹp â§ q â§ FFs) â GG (p â§ ÂŹq â s))) â§  (ÂŹp â§ q â [U]((p â§ ÂŹq â§ FFs) â GG (ÂŹp â§ q â s))) â§  (ÂŹp â§ ÂŹq â [U]((p â§ q â§ FFs) â GG (ÂŹp â§ ÂŹq â s)))).  GRID(p, q) = p â§ q â§ Ď1 â§ Ď2 â§ Ď3  TIMEâ2012  Valentin Goranko  Describing the tiles in PL  Consider a tiling problem with a set of tiles T = {t1 , ..., tm } with  colours C = {c1 , ..., ck }.  Every tile has four sides: âupâ, âdownâ, âleftâ and ârightâ, each  coloured in one of the colours from C .  To every colour ci we assign four propositional variables ui (âupâ),  di (âdownâ), li (âleftâ), and ri (ârightâ).  Each tile t with sides âupâ, âdownâ, âleftâ and ârightâ coloured  respectively in ci1 , ci2 , ci3 , and ci4 , we represent by the formula  ^  ^  ^  ^  Î¸t = (ui1 â§  ÂŹuj ) â§ (di2 â§  ÂŹdj ) â§ (li3 â§  ÂŹlj ) â§ (ri4 â§  ÂŹrj ).  j6=i1  TIMEâ2012  j6=i2  j6=i3  j6=i4  Valentin Goranko  Describing the tiling in H([U],G )  Now we define the formulae:  COVERT = [U](  m  _  Î¸i )  i=1  which says that the model is properly tiled, i.e. every point in the  model is covered by exactly one tile.  MATCHUP = [U](  k  ^  (ui â (p â§ q â G (p â§ ÂŹq â di )) â§  i=1  (p â§ ÂŹq â G (p â§ q â di )) â§  (ÂŹp â§ q â G (ÂŹp â§ ÂŹq â di )) â§  (ÂŹp â§ ÂŹq â G (ÂŹp â§ q â di )))),  which says that the colour âupâ of each tile of the cover matches  the colour âdownâ of the one above it;  TIMEâ2012  Likewise, MATCHRIGHT is defined.  Valentin Goranko  Translating the tiling problem in H([U], â)  Finally, we put  ÎŚT := GRID â§ COVERT â§ MATCHUP â§ MATHCHRIGHT  Theorem  ÎŚT is satisfiable if and only if N Ă N can be properly tiled by T .  TIMEâ2012  Valentin Goranko  More undecidability via tiling  The undecidability result uses the relative strength of the language  H([U], â) but no special properties of the models.  A number of similar results were established in the 1990s.  For instance [Spaan, 1996]: âthere is a uni-modal, decidable,  finitely axiomatizable, and canonical logic for which adding the  universal modality causes undecidability and for which adding the  reflexive transitive closure modality causes high undecidability.â  Edith (Spaan) Hemaspaandra  The Price of Universality,  Notre Dame J. Formal Logic Volume 37, Number 2 (1996), 174-203.  See also Spaanâs PhD thesis, as well as many more undecidable  polymodal logics in:  TIMEâ2012  Marcus Kracht  Highway to the Danger Zone,  Journal of Logic and Computation, vol. 5(1996), pp. 93-109.  Valentin Goranko  Undecidability of interval temporal logics  by reduction from the Octant Tiling Problem  TIMEâ2012  Valentin Goranko  The Octant Tiling Problem  The 2nd octant of Z Ă Z:  O = {(i, j) : i, j â N â§ 0 â¤ i â¤ j}  A natural interpretation of intervals on N into O.  The Octant Tiling Problem: can a given finite set of tile types  T = {t1 , . . . , tk } tile O while respecting the color constraints?  Theorem The Octant Tiling Problem is undecidable.  TIMEâ2012  Proof: by reduction from the tiling problem for N Ă N, using  KoĚnigâs Lemma.  Valentin Goranko  Undecidability of interval logics via tiling:  generic construction  Given a finite set of tiles, we consider a signature containing, inter  alia, special propositional letters u, tile, Id, t1 , . . . , tk , cbb, cbe,  ceb, corr, and possibly others. The letters ti represent the tiles.  The tiling framework is set by forcing the existence of a (usually  unique) infinite chain of unit-intervals (u-intervals) on the linear  order, which covers an initial segment of the interval model.  Unit intervals are used to place tiles and delimiting symbols.  Then, ID-intervals are introduced to represent the layers of tiles.  TIMEâ2012  Valentin Goranko  Undecidability of the interval logics via tiling:  generic construction contâd  TIMEâ2012  Valentin Goranko  Undecidability of the interval logics via tiling:  generic construction contâd  Each ID-interval must have the right number of tiles, and they  must match horizontally: the Right-Neightbour relation.  The most challenging part usually is to ensure that the consecutive  ID-intervals match vertically: the Above-Neightbour relation.  For that, we use several auxiliary propositional letters to refine and  implement the idea of corr: cbb for matching the beginning point  of a tile to the beginning point of the corresponding tile above;  cbe, for matching beginning point with ending point above, and  ceb for matching ending point with a beginning point above.  TIMEâ2012  Valentin Goranko  Undecidability of the interval logics via tiling:  generic construction completed  Eventually, we encode the given Octant tiling problem by  specifying the matching conditions between adjacent tiles.  The specific part of the construction is to use the given fragment  of HS to set the chain of unit intervals and to express all necessary  properties of IDs, the propositional letters for correspondence  intervals, and the tile matching conditions.  For instance, using the After modality A the matching conditions  can be expressed as follows, where [F ]p := [A]p â§ [A][A]p:  _  [F ]((tile â§ hAitile) â  (ti â§ hAitj )),  right(ti )=left(tj )  [F ](hAitile â  TIMEâ2012  _  up(ti )=down(tj )  (hAiti â§ hAi(cbb â§ hAitj )))  Valentin Goranko  A sample result using the Octant Tiling problem:  undecidability of the logic O over (discrete) linear orderings  Semantics of the Overlap operator O:  M, [a, b] |= hOiĎ iff  there exist c, d such that a < c < b < d and M, [c, d]  a  b  c  TIMEâ2012  Ď.  d  Valentin Goranko  Encoding the Octant  â t  u u  k  TIMEâ2012  â t  u u  k  k  â t  u u  t  u  k  k  k  t  u  k  â t  u u  t  u  k  k  k  t  u  k  t  u  k  â  u  t  u  k  k  k  Valentin Goranko  Encoding the Octant  u- and k-intervals of length 2  u-intervals â  beginu -intervals â  a  b  c  a  d  e  b  c  d  e  f  f  beginu -intervals cannot overlap beginu -intervals starting inside the  same u-interval  TIMEâ2012  Valentin Goranko  Encoding the Above-Neighbour Relation  b t15 t25 t35 t45 t55  up relb â ÂŹhOiup relb  f t14 t24 t34 t44  up relf â ÂŹhOiup relf  b t13 t23 t33  f t12 t22  b t11  TIMEâ2012  b {z  z }|  }|f  â t1  uâ tu1  â t2 t2  uâ tu1 tu2  {z  b  }|  {z  â t3 t3 t3  uâ tu3 tu2 tu1  }|f  {  â t4 t4 t4 t4  uâ tu1 tu2 tu3 tu4  â  uâ  Valentin Goranko  Undecidability of the logic O over discrete linear orderings  In the long run, for every finite set of tiles T we build a formula  ĎT â O such that  ĎT is satisfiable in a discrete linear ordering  iff  T can tile the 2nd octant.  Theorem[Bresolin, Della Monica, G., Montanari, Sciavicco, 2009]  The satisfiability problem for the logic O is undecidable over any  class of discrete linear orderings that contains at least one linear  ordering with an infinite ascending sequence.  Likewise for O, on classes having infinite descending sequences.  TIMEâ2012  Valentin Goranko  More recent results on undecidability of interval logics  Using variations of the Octant Tiling Problem encoding:  Theorem The satisfiability problem for each of the HS fragments  O, O, AD, AD, AD, AD, BE, BE, BE, BE, is undecidable in any  class of linear orders that contains at least one linear order with  length greater than n, for each n > 0.  D. Bresolin, D. Della Monica, V. Goranko, A. Montanari, G. Sciavicco  The dark side of Interval Temporal Logic: sharpening the undecidability  border  Proc. of TIMEâ2011  O and O were the first uni-modal fragments of HS proved  undecidable over the class of discrete orderings.  A recent last blow by Marcinkowski and Michaliszyn (LICSâ2011):  undecidability of D and D over discrete linear orderings.  TIMEâ2012  Valentin Goranko  More recent results on undecidability of interval logics  D. Bresolin, D. Della Monica, A. Montanari, P. Sala, G. Sciavicco  Interval Temporal Logics over Finite Linear Orders: the Complete Picture  Proc. of ECAIâ2012  Of the 1347 expressively different fragments of HS, only the following 35 and  their symmetric versions are decidable over the class of finite linear orders:  TIMEâ2012  Valentin Goranko  Undecidability of temporalized logics  TIMEâ2012  Valentin Goranko  Temporalizing logics  Temporalization: combination of temporal and other logics, e.g. :  products, fusions, etc.  Marcelo Finger and Dov Gabbay  Combining Temporal Logic Systems  Notre Dame Journal of Formal Logic 37(2): 204-232 (1996)  Temporalization often leads to undecidability.  Three important case studies:  â˘ Products of modal and temporal logics  â˘ Temporal epistemic logics  â˘ Temporal description logics  TIMEâ2012  Valentin Goranko  Undecidability of products of logics  Dov Gabbay and Valentin Shehtman  Products of Modal Logics, Part I  L. J. of the IGPL, Vol. 6, No. 1, 1998, pp. 73-146  Frank Wolter  The decision problem for combined (modal) logics  Habilitationsschrift, Univ. of Leipzig, 1999  Dov Gabbay, Agi Kurucz, Frank Wolter, and Michael Zakharyaschev.  Many-dimensional modal logics: theory and applications  Elsevier, 2003.  Products of modal logics are massively undecidable. For instance:  â˘ ML(N Ă N) [Spaan, 1993]; K [U] Ă K [U] [Marx, 1999];  K 4.3 Ă K 4.3 [Reynolds and Zakharyaschev 1999];  â˘ Almost all three-dimensional modal/temporal logics.  Related to the undecidability of FO3 .  TIMEâ2012  Valentin Goranko  Temporal-epistemic logics  Combine temporal and multi-agent epistemic logics.  An important earlier work with detailed proof of undecidability by  reduction from the Halting Problem for Turing machines:  Richard Ladner and John Reif:  The Logic of Distributed Protocols  Proc of TARKâ1986: 207-222  Various other developments during the 1980s. Unifying study in:  Joseph Halpern and Moshe Vardi  The complexity of reasoning about knowledge and time I: Lower bounds  Journal of Computer and System Sciences, 38(1), 1989, pp.195237  Joseph Halpern and Moshe Vardi  The complexity of reasoning about knowledge and time: Synchronous  systems  IBM Research Report, 1989  TIMEâ2012  Valentin Goranko  A variety of temporal-epistemic logics  Semantics based on so called interpreted systems: sets of runs in a  transition system with epistemic indistinguishability relations on  the state space for each agents.  A variety of 96 logics, based on six parameters:  â˘ number of agents (one or many),  â˘ the language (with or without common knowledge, linear or  branching time, etc. ),  â˘ recall abilities (no recall, bounded recall, perfect recall),  â˘ learning abilities (learning or no learning),  â˘ synchrony (synchronous or asynchronous),  â˘ unique initial state.  TIMEâ2012  Valentin Goranko  Complexity of the validity in temporal-epistemic logics  Both linear and branching time logics involving more than one  agents become highly undecidable (Î 11 -complete) under some  combined assumptions, e.g., of both unbounded memory and  TIMEâ2012 common knowledge.  Valentin Goranko  Sharpening the undecidability of temporal epistemic logics  Spaan showed that neither Nexttime nor Until are needed for most  of these results, but the knowledge operator K and the temporal  operator G suffice:  Edith Spaan  Nexttime is not necessary  Proc of TARKâ1990, 241-256  TIMEâ2012  Valentin Goranko  Undecidability of temporal description logics  Description logics: very close to modal logics.  Involve concepts (unary predicates) and roles (binary predicates).  TBoxes: finite sets of concept inclusions.  Description logics can be temporalized in various ways:  Alessandro Artale and Enrico Franconi  A survey of temporal extensions of description logics,  Annals of Math. and Artificial Intelligence, vol. 30, 2000, pp.171â210.  Many undecidability consequences from Halpern-Shoham results.  Many more undecidability results for temporal description logics in:  Frank Wolter  The decision problem for combined (modal) logics  Habilitationsschrift, Univ. of Leipzig, 1999  TIMEâ2012  Valentin Goranko  Undecidability of temporal description logics, contâd  More recent undecidability results for quite weak fragments in:  Carsten Lutz, Frank Wolter and Michael Zakharyaschev  Temporal Description Logics: A Survey,  Proc. of TIMEâ2008, pp.3-14  ALC is the basic propositionally closed description logic.  Theorem Concept satisfiability in LTLALC w.r.t. T-Boxes and  with a single rigid (over time) role is ÎŁ11 -hard.  Proof: by reduction from the recurrent tiling problem: given a set  of tile types T , decide whether it can tile N Ă N so that a given  tile t appears infinitely often in the first row.  Also: concept satisfiability in LTLSHIQ with rigid roles and  without TBoxes is undecidable.  Proof: by reduction from Postâs Correspondence Problem.  TIMEâ2012  Valentin Goranko  Undecidability of quantitative temporal logics  TIMEâ2012  Valentin Goranko  Real-time extensions of temporal logics  R. Alur and T. Henzinger  Logics and models of real-time: a survey  Real-Time: Theory in Practice, Proc. REX Workshop 1991, Springer,  1992, vol. 600 of LNCS, pp. 74106.  Real-time extensions of temporal logics:  â˘ time-bounded operators:  G (p â F=10 q)  â˘ freeze quantification: very similar to hybrid binders: binds a  variable x to the current time, e.g. :  Gx. (p â Fy . (q â§ y â¤ x + 3)  â˘ time variables and quantification, e.g. :  âxG (p â§ T = x â F (q â§ T â¤ x + 3)  TIMEâ2012  Timed transition systems and timed automata.  Valentin Goranko  Undecidability of metric temporal logics  Ron Koymans  Specifying real-time properties with metric temporal logic  Real-time Systems 2(4), 255299 (1990)  MTL augments the LTL operators with time bounded operators.  R. Alur and T. Henzinger  Real-time logics: Complexity and expressiveness  Information and Computation, 104(1):3577, 1993.  Punctuality causes undecidability: e.g., on discrete orderings with  addition and on dense orderings with constant increment operation.  Proof: by reduction from repeated reachability in Minsky machines.  A relaxed decidable version: MITL with interval constraints:  G (p â F[2,10] q)  TIMEâ2012  J. Ouaknine and J. Worrell.  Some recent results in Metric Temporal Logic  Proc. of FORMATSâ2008, LNCS 5215.  Valentin Goranko  Undecidability of real-time logics  Timed propositional temporal logic TPTL: like LTL, but  interpreted on time sequences and extended with freeze quantifiers.  R. Alur and T. Henzinger  A really temporal logic  Journal of the ACM 41:181-204, 1994.  Basic version decidable, but various extensions, e.g., time addition  or multiplication by 2, or dense time domain cause Î 11 -hardness.  TIMEâ2012  Valentin Goranko  Summary: what causes undecidability in temporal logics?  Propositional temporal logics are generally decidable, but adding  some syntactic or semantic features can make them explode.  Many important types of temporal logics are generally undecidable,  even under very weak assumptions.  What are the typical causes of undecidability in temporal logics?  â˘ Grid-like models, many-dimensional or temporalized systems,  â˘ Interval-based semantics, where truth of formulae is defined  on time intervals, with no locality assumptions.  â˘ Temporal operators along multiple (at least two) time-lines.  Products of simple temporal logics.  â˘ Time reference mechanisms, such as freeze quantifiers and  hybrid binders.  TIMEâ2012  â˘ Arithmetic features: time addition, exact time constraints, etc.  Valentin Goranko  Conclusion: is there life beyond decidability?  Yes, of course. Classical first-order logic is a witness.  Undecidability is bad, but how bad? And, (how) should we care?  Possible ways out:  â˘ Syntactic restrictions, identifying decidable fragments  (e.g. FO2 , guarded fragments, etc.)  â˘ Suitable parametric restrictions, e.g. on number of  propositional variables, depth of nesting, etc.  Maurice Margenstern  Frontier between decidability and undecidability: a survey  Theoretical Computer Science, vol. 231, no. 2, 2000, pp. 217-251  â˘ Semantic restrictions, âtamingâ the semantics. E.g. : locality.  â˘ Semi-decision procedures, e.g. resolution or tableaux.  TIMEâ2012  â˘ Using heuristics and human-computer interaction, etc.  Valentin Goranko  PostScriptum: Terminator vs Turing  Terminator: research project at Microsoft Research, Cambridge,  focused on the development of automatic methods for proving  program termination and general liveness properties.  http://research.microsoft.com/en-us/um/cambridge/projects/terminator/  See article âTerminator Tackles an Impossible Taskâ  http://research.microsoft.com/en-us/news/features/terminator.aspx  So, can the theoretically undecidable be practically decided?  The future will tell.  Maybe.  TIMEâ2012  The end  Valentin Goranko 