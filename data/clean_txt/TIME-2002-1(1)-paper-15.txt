On Non-local Propositional and Local One-variable Quantified CTL  Sebastian Bauer  Institut fuĚr Informatik,  UniversitaĚt Leipzig,  Augustus-Platz 10â11,  04109 Leipzig, Germany  bauer@informatik.uni-leipzig.de  Frank Wolter  Institut fuĚr Informatik,  UniversitaĚt Leipzig,  Augustus-Platz 10â11,  04109 Leipzig, Germany  wolter@informatik.uni-leipzig.de  Abstract  We prove decidability of ânon-localâ propositional CTL ,  where truth values of atoms may depend on the branch of  evaluation. This result is then used to show decidability  of the âweakâ one-variable fragment of first-order (local)  CTL , in which all temporal operators and path quantifiers  except âtomorrowâ are applicable only to sentences. Various spatio-temporal logics based on combinations of CTL  and RCC-8 can be embedded into this fragment, and so are  decidable.  1 Introduction  This paper continues the investigation of the computational behaviour of first-order branching time temporal logics started in [6]. A ânegativeâ result obtained in [6] is the  undecidability of the one-variable fragment of quantified  computational tree logic CTL (both bundled [1, 10] and  âunbundledâ versions, and even with sole temporal operator âsome time in the futureâ). On the other hand, it was  shown that by restricting applications of first-order quantifiers to state (i.e., path-independent) formulas, and applications of temporal operators and path quantifiers to formulas  with at most one free variable, decidable fragments can be  obtained.  Here we prove decidability of another kind of fragment  of first-order CTL , the so-called weak one-variable fragment, in which quantifiers are not restricted to state formu-  Ian Hodkinson  Department of Computing,  Imperial College,  180 Queenâs Gate,  London SW7 2BZ, U.K.  imh@doc.ic.ac.uk  Michael Zakharyaschev  Department of Computer Science,  Kingâs College,  Strand,  London WC2R 2LS, U.K.  mz@dcs.kcl.ac.uk  las, but only the next-time operator may be applied to open  formulas, while all other temporal operators and path quantifiers are applicable only to sentences. The main technical  instrument is the method of quasimodels [4]. We first show  decidability of the non-local version of propositional CTL ,  where truth values of atoms may depend on the branch of  evaluation.1 We then show that this logic can express the  existence of a certain quasimodel associated with a given  formula of the weak one-variable fragment. Since this existence is equivalent to the satisfiability of the formula, the  decidability of the weak fragment follows. This decidability result is not only of interest per se, but also because it  can be used to obtain decidability results for certain spatiotemporal logics based on CTL and the region connection  calculus RCC-8 (see the survey papers [5, 9]). All omitted  details of proofs can be found in the full draft version of the  paper at http://www.dcs.kcl.ac.uk/staff/mz.  2 Decidability of non-local PCTL  The propositional language PCTL [3, 7] extends propositional logic with temporal connectives U; S (âuntil,â  âsinceâ) and a path quantifier E (âthere exists a branch (or  history)â). The dual path quantifier A (âfor all branches  (or histories)â) is defined as an abbreviation: AĎ = E Ď.  Other standard abbreviations we need are: 3F Ď = U Ď,  2F Ď = 3F Ď, 3PĎ = S Ď, Ď = U Ď, P Ď = S Ď  (âsome time in the future,â âalways in the future,â âsome time  : :  >  ?  ::  >  ?  1 This contrasts with the behaviour of process logic, the local version of  which is decidable, while the non-local one is undecidable [2].  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEâ02)  1530-1311/02 $17.00 ÂŠ 2002 IEEE  in the past,â âat the next momentâ and âat the previous momentâ). We write P for the underlying set of propositional  atoms.  PCTL is interpreted in (bundled and unbundled) models  based on Ď-trees. A tree is a strict partial order T = hT ; <i  such that for all w 2 T , the set fv 2 T : v < wg is linearly  ordered by <. When we write T for a tree, it will be implicit  that T = hT ; <i. For t 2 T , let ht (t ) = jfu 2 T : u < t gj. A  full branch of F is a maximal linearly-ordered subset of T .  In this paper we are only concerned with Ď-trees. An Ď-tree  is a rooted tree whose full branches, ordered by <, are all  order-isomorphic to the natural numbers hS  N ; <i . A bundle  on T is a set H of full branches of T with H = T .  In this paper we deal with the ânon-localâ variant of  PCTL in which truth values of atoms can depend on the  branch of evaluation. Thus, a bundled model has the form  M = T; H ; h , where T is an Ď-tree, H is a bundle on T,  and h : P ! â(f(Î˛; t ) : t 2 Î˛ 2 H g). M is a full tree model  if H is the set of all full branches of T. The semantics of  PCTL is now defined as follows, where t 2 Î˛ 2 H :  Proof. Let M = T; H ; h be a tree model. We may view  M as a two-sorted first-order structure, the two sorts being  T and H . Taking a countable elementary substructure of  this yields a bundled tree model N = T0 ; H0 ; h0 whose  tree T0 and bundle H0 are countable. Here,  h0 ( p) = h( p) \ f(Î˛; t ) : t 2 Î˛ 2 H0 g  for any atom p. It is easy to translate PCTL -formulas to  two-sorted first-order formulas with the same meaning. It  follows that for any Î˛ 2 H0 , t 2 Î˛, and any formula Ď, we  have (M; Î˛; t ) j= Ď iff (N; Î˛; t ) j= Ď. This completes the  proof for the bundled case.  Suppose  D now thatEH contains all full branches of T and  let N = T0 ; H 0 ; h0 be the full tree model based on N,  where H 0  H0 is the set of all full branches of T0 , and  h0 ( p) = h( p) \ f(t ; Î˛) : t 2 Î˛ 2 H 0 g, for an atom p. We  claim that for all PCTL -formulas Ď, all full branches Îł of  T0 and all t 2 Îł, we have  (M; Îł; t ) j= Ď   for an atom p, (M; Î˛; t ) j= p iff (Î˛; t ) 2 h( p);   the booleans are defined as usual;    (M; Î˛; t ) j=    (M; Î˛; t ) j= Ď S Ď    (M; Î˛; t ) j=  Ď U Ď iff there is u > t such that u 2 Î˛,  Ď, and (M; Î˛; v) j= Ď for all v 2 (t ; u),  where (t ; u) = fv 2 T : t < v < ug;  (M; Î˛; u) j=  iff there is u < t with (M; Î˛; u) j= Ď  and (M; Î˛; v) j= Ď for all v 2 (u; t );  t 2 Îł.  EĎ iff (M; Îł; t ) j= Ď for some Îł 2 H  with  R EMARK 1. By requiring that (Î˛; t ) 2 h( p) if and only if  (Î˛0 ; t ) 2 h( p) for all p, t, Î˛, Î˛0 with t 2 Î˛ \ Î˛0 , we obtain  the traditional local semantics in which the truth values of  atoms do not depend on the branch of evaluation. For an  atom p, this independence is expressible (at the root of an  Ď-tree) in the non-local semantics by  Îť( p) = (E p ! A p) ^ A2F (E p ! A p):  Thus, a formula Ď is satisfiable in the local semantics iff  (Ď _  3F Ď) ^ :3P> ^  ^  Fix a PCTL -formula Ď.  D EFINITION 3. Let sub(Ď) denote the set of subformulas of  Ď and their negations. A type for Ď is a subset Ď of sub(Ď)  such that Ď ^ Ď 2 Ď iff Ď 2 Ď and Ď 2 Ď, for every Ď ^ Ď in  sub(Ď), and :Ď 2 Ď iff Ď 2  = Ď, for every :Ď 2 sub(Ď). A set  ÎŁ of types is said to be coherent if it is non-empty and for  T  S  Ď 2 sub(Ď), the conditions EĎ 2 ÎŁ, EĎ 2 ÎŁ, and  all ES  Ď 2 ÎŁ are equivalent.  Fix an Ď-tree T = hT ; <i.  D EFINITION 4. Given a non-empty set ÎŁt of types for each  t 2 T , and a full branch Î˛ of T, a run in Î˛ is a map  Îť( p)  L EMMA 2. If a PCTL -formula Ď is satisfiable in a full  (bundled) tree model, then Ď is satisfiable in a full (respectively, bundled) tree model based on a countable Ď-tree.    (N; Îł; t ) j= Ď:  The proof is by induction on Ď. The atomic, boolean, and  temporal cases are trivial. Consider the case EĎ and inductively assume the result for Ď.  If (M; Îł; t ) j= EĎ, pick Î˛ 2 H0 containing t. Clearly,  (M; Î˛; t ) j= EĎ, so (N; Î˛; t ) j= EĎ. Then there is Î˛0 2 H0  with (N; Î˛0 ; t ) j= Ď. Thus, (M; Î˛0 ; t ) j= Ď. Inductively,  (N; Î˛0 ; t ) j= Ď. So (N; Îł; t ) j= EĎ, as required. The converse  implication is easy.  r:Î˛!  p 2ÎŚ  is satisfiable in the non-local semantics, where ÎŚ denotes  the set of atoms occurring in Ď. Hence, local satisfiability is  reducible to non-local satisfiability.  iff  [  ÎŁt  t 2Î˛  such that   r(t ) 2 ÎŁt for each t 2 Î˛,   for all Ď U Ď 2 sub(Ď) and t 2 Î˛, we have Ď U Ď 2 r(t )  iff there is u > t with u 2 Î˛, Ď 2 r(u), and Ď 2 r(v) for  all v 2 (t ; u),  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEâ02)  1530-1311/02 $17.00 ÂŠ 2002 IEEE   for all Ď S Ď 2 sub(Ď) and t 2 Î˛, we have Ď S Ď 2 r(t )  iff there is u < t with Ď 2 r(u) and Ď 2 r(v) for all  v 2 (u; t ).  D EFINITION 5. A family (ÎŁt : t 2 T ) of coherent sets of  types is said to be an unbundled quasimodel for Ď over if  T  1. Ď 2 Ď 2 ÎŁt for some t 2 T and Ď 2 ÎŁt ,  T  2. for all t 2 T , Ď 2 ÎŁt , there is a full branch Î˛ of containing t and there is a run r in Î˛ such that r(t ) = Ď,  T  3. for each full branch Î˛ of , there exists a run in Î˛.  : t 2 T ) is a bundled quasimodel for Ď over  fies conditions 1 and 2.  (ÎŁt  T if it satis-  L EMMA 6. Ď is satisfied in a (bundled) model iff there is a  (bundled) quasimodel for Ď over a countable Ď-tree.  M T  M  =  ; Î˛0 ; t0 ) j= Ď for  ; H ; h be such that (  Proof. Let  some Î˛0 2 H and t0 2 Î˛0 . By Lemma 2, we can assume that  is countable. For Î˛ 2 H , t 2 Î˛ and t 2 T , let  T  M  tp(t ; Î˛) = fĎ 2 sub(Ď) : ( ; Î˛; t ) j= Ďg;  ÎŁt = ftp(t ; Î˛) : t 2 Î˛ 2 H g:  Clearly, tp(t ; Î˛) is a type for Ď and ÎŁt is coherent. For any  Î˛ 2 H , the map rÎ˛ : t 7! tp(t ; Î˛) is then a run in Î˛. We claim  that (ÎŁt : t 2 T ) is a quasimodel for Ď over (a bundled  one if  is bundled, and an unbundled one otherwise). As  ( ; Î˛0 ; t0 ) j= Ď, we have Ď 2 tp(t0 ; Î˛0 ) 2 ÎŁt0 . For each t 2 T  and Ď 2 ÎŁt , we have Ď = tp(t ; Î˛) for some Î˛ 2 H containing  t, so rÎ˛ (t ) = Ď and condition 2 of Definition 5 holds. Finally,  is a full tree model,  for all Î˛ 2 H , rÎ˛ is a run in Î˛, so if  it is clear that condition 3 holds.  Conversely, let (ÎŁt : t 2 T ) be a quasimodel for Ď over  a countable Ď-tree . Let <Ď 2 denote the set of finite sequences of 0s and 1s. For Îˇ 2 <Ď 2, jÎˇj denotes the length  of Îˇ. By replacing with  T  M  M  M  T  T  T  <  Ď  2 =def f(t ; Îˇ) : t 2 T ; Îˇ 2 <Ď 2; ht (t ) = jÎˇjg;  i.e., a countable Ď-tree when ordered by (t ; Îˇ) < (u; Îž) iff  t < u in T and Îˇ is an initial segment (a prefix) of Îž, and  by letting ÎŁ(t ;Îˇ) = ÎŁt for all t ; Îˇ, we can assume that () for  each t 2 T and Ď 2 ÎŁt , there are 2Ď full branches Î˛ of  containing t such that there is a run r in Î˛ with r(t ) = Ď.  Each ÎŁt is finite, so there are countably many pairs (t ; Ď)  with t 2 T , Ď 2 ÎŁt . Enumerate them as (tn ; Ďn ), n < Ď. Inductively, using (), choose a full branch Î˛n 3 tn for each  n < Ď, such that (i) there is a run rÎ˛n in Î˛n with rÎ˛n (tn ) = Ďn ,  and (ii) Î˛n =  6 Î˛m for all m < n. If we have a bundled quasimodel, let H = fÎ˛n : n < Ďg. This is clearly a bundle  on . If we have an unbundled quasimodel, let H be the  set of all full branches of , and further choose for each  T  T  T  Î˛ 2 H n fÎ˛n : n < Ďg a run rÎ˛ in Î˛; this can be done by  condition 3 of Definition 5. So we have defined a run rÎ˛ in  Î˛, for each Î˛ 2 H . Now define a model  =  ; H ; h by  taking h( p) = f(Î˛; t ) : t 2 Î˛ 2 H ; p 2 rÎ˛ (t )g for p 2 P .  M T  C LAIM . For all Î˛ 2 H , all t 2 Î˛, and all Ď 2 sub(Ď), we  have ( ; Î˛; t ) j= Ď iff Ď 2 rÎ˛ (t ).  P ROOF OF CLAIM . The proof is by induction on Ď. For  atomic Ď = p, we have ( ; Î˛; t ) j= p iff (Î˛; t ) 2 h( p), iff  p 2 rÎ˛ (t ) as required. The boolean cases are trivial. For  Ď U Ď 2 sub(Ď), we have ( ; Î˛; t ) j= Ď U Ď iff there is u 2 Î˛  such that u > t, ( ; Î˛; u) j= Ď, and ( ; Î˛; v) j= Ď for all  v 2 (t ; u). Inductively, this holds iff there is u 2 Î˛ with u > t,  Ď 2 rÎ˛ (u), and Ď 2 rÎ˛ (v) for all v 2 (t ; u). Since rÎ˛ is a run  in Î˛, this is iff Ď U Ď 2 rÎ˛ (t ), as required. The case of S is  similar.  Finally, for EĎ 2 sub(Ď), we have ( ; Î˛; t ) j= EĎ iff  ( ; Îł; t ) j= Ď for some Îł 2 H with t 2 Îł. Inductively, this  is iff Ď 2 rÎł (t ) for some Îł 2 H with t 2 Îł. But evidently,  S  ÎŁt = frÎł (t ) : Îł 2 H ; t 2 Îłg, so this is iff Ď 2 ÎŁt . Since ÎŁt  is coherent, this is iff EĎ 2 rÎ˛ (t ), as required. The claim is  proved.  Now let t 2 T be such that Ď 2 Ď for some Ď 2 ÎŁt . We  may choose n < Ď with (t ; Ď) = (tn ; Ďn ). Then t 2 Î˛n 2 H  and rÎ˛n (t ) = Ď, so by the claim, ( ; Î˛n ; t ) j= Ď. Thus, Ď has  a model.  M  M  M  M  M  M  M  M  L EMMA 7. Given a PCTL -formula Ď, it is decidable  whether Ď has an unbundled quasimodel over a countable  Ď-tree. The same holds for bundled quasimodels.  Proof. We will express the existence of a quasimodel in  monadic second-order logic. Given Ď, we can effectively  construct the set C of all coherent sets of types. A quasimodel over an Ď-tree has the form (ÎŁt : t 2 T ) where  ÎŁt 2 C for each t; we will express this by unary relation  variables PÎŁ for each ÎŁ 2 C , the aim being that PÎŁ is true at  t iff ÎŁt = ÎŁ. We then express the stipulations of Definition 5  in terms of the PÎŁ , as follows. Let RĎ (Ď 2 sub(Ď)) be unary  relation variables. For a type Ď for Ď, let  T  ĎĎ (x)  ^  =  Ď2Ď  R Ď (x ) ^  ^  :RĎ (x):  Ď2sub(Ď)nĎ  The formula ĎĎ (x) says that the RĎ (x) define the type Ď at  x. For a unary relation variable B, let Ď be the conjunction  of:    V  ÎŁ2C  8x B(x) ^ PÎŁ (x) !  W    Ď2ÎŁ ĎĎ (x)  ,   8x RĎ1 UĎ2 (x) $9y (B(y) ^ x < y ^ RĎ2 (y) ^ 8z (x <  z < y ! RĎ1 (z))) , for all Ď1 U Ď2 2 sub(Ď),   8x RĎ1 SĎ2 (x) $ 9y (y < x ^ RĎ2 (y) ^ 8z (y < z < x !  RĎ1 (z))) , for all Ď1 S Ď2 2 sub(Ď).  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEâ02)  1530-1311/02 $17.00 ÂŠ 2002 IEEE  So assuming that B defines a full branch, Ď says that the RĎ  define a run in B. Let Î˛(B) be a monadic second-order formula expressing that B is a full branch (a maximal linearlyordered set):  Îť(X )  X Y  Î˛(B)  8xy X x ^ X y ! x y _ x y _ y  8x X x ! Y x  Îť B ^8X Îť X ^ B  X ! X  B  =    ( ( )  =  ( )  ( ( )  =  =  <  <  ( ( )  9  ÎŁ2C  8x _  h  PÎŁ (x)  ÎŁ2C  i  ÎŁ0 (x)  ÎŁ0 2C  ÎŁ=  6 ÎŁ0  h  ^ 8B Î˛ B ! 9 R  ( )  Ď  ^ 9x _  Ď  i  Ď2sub(Ď)  ÎŁ2SC  Ď2 ÎŁ  ÎŁ( )  ÎŁ2C  Ď2ÎŁ  ( )  ( )  PÎŁ (x)  ^  h    8x ^ P x !9B Î˛ B ^ B x ^ 9 R Ď ^ Ď  Ď(  !  i  Ď (x))  :  9  f  g  Here, 9ÎŁ2C PÎŁ denotes PÎŁ1 : : : PÎŁk , for C = ÎŁ1 ; : : : ; ÎŁk ,  and similarly for the other 9s. If we are dealing with bundled models, the conjunct B [Î˛(B)  9Ď2sub(Ď) RĎ Ď] on  the second line should be omitted.  It should be clear that for any Ď-tree , we have = Âľ iff  there is a quasimodel for Ď over (bundled or unbundled,  as appropriate). It follows from decidability of S2S [8] that  it is decidable whether a given monadic second-order sentence is true in some countable Ď-tree. The lemma now  follows.  8  T  !  T  Tj  As a consequence of Lemmas 6 and 7 we finally obtain  T HEOREM 8. It is decidable whether a PCTL -formula has  a full tree model in the non-local semantics. The same holds  for bundled models.  3 Decidability of the weak one-variable fragment of quantified PCTL  Fix an individual variable x and denote by QPCTL1 the  one-variable fragment of first-order PCTL , which can be  defined as the closure of the sets P0 (x); P1 (x); : : : of unary  predicates and p0 ; p1 ; : : : of propositional variables under  is  the operators x, , , E, , U and S. Note that now  regarded as a primitive operator. The weak one-variable  fragment QPCTLw of QPCTL consists of all QPCTL1 formulas in which the temporal operators U and S and the  path-quantifier E are applied to sentences only. Thus,  is the only temporal operator which can be applied to open  formulas.  f  g  9 ^:  f  g  ;:::;  2  I (w)  p0  T  E  ;:::  M  a f g!  in the signature of QPCTL1 âthe state of  at w. As before, is called a full model if H contains all full branches  is a function : x  D. Let  of . An assignment in  w Î˛ H and let Ď be a formula. The truth-relation  ( ; Î˛; w) =a Ď (or (Î˛; w) =a Ď if  is understood, or  ( ; Î˛; w) = Ď[d ], where (x) = d) is defined inductively  by taking:  M  T  2 2  M j  M j      Ď2sub(Ď)  9  I (w)  I (w) = D; P0  ):  ^ ^ :P  M  D  x);  Thus, the following monadic second-order formula Âľ is effectively constructible from Ď:  PÎŁ  T h i  ( ));  ( )  M T  =  ; H ; D; I ,  A QPCTL1 -model is a quadruple  where = T ; < is an Ď-tree, H is a bundle on , D is  a non-empty set, the domain of , and I is a function associating with every time point w T a usual first-order  structure  a  j  M  j Îą iff I w j a Îą, for atomic Îą;  Î˛ w j a 9x Ď iff Î˛ w j b Ď for some assignment b;  (Î˛; w) =a  (  M  ;  ( ) =  ) =  (  ;  ) =  for the temporal operators and path quantifiers, the definition is the same as in the propositional case. Note that we  have returned to the traditional âlocalâ semantics in which  truth values of atoms do not depend on the branch Î˛ of evaluation.  The main result we prove in the remainder of this section  is the following  T HEOREM 9. The satisfiability problem for QPCTLw formulas in both bundled and full models is decidable.  R EMARK 10. (1) We remind the reader that the satisfiability  problem for the full one variable fragment QPCTL1 in both  bundled and full models is undecidable [6].  (2) Actually, using somewhat more sophisticated machinery (in particular, a mosaic technique) one can generalise Theorem 9 to the two variable, monadic, and guarded  can be applied to formufragments of QPCTL in which  las with at most one free variable and the other temporal  operators and path quantifiers only to sentences.  (3) Theorem 9 and its generalisation above still hold if  we extend QPCTLw with individual constants; however,  functional symbols and equality may lead to undecidability, cf. [4].  We will prove this result in two steps. First, we show  that a QPCTLw -formula is satisfiable iff it is satisfiable in  certain quasimodels. Then we will reduce satisfiability in  quasimodels to non-local propositional satisfiability. We  begin the proof of Theorem 9 by recalling that the bundled  case is reducible to the âunbundledâ one [6]. So it is enough  =  ; D; I .  to consider satisfiability in full models  Fix a QPCTLw -sentence Ď. For simplicity we may assume that any subsentence Ď of Ď is replaced by U Ď.  Thus,  is only applied to formulas with free variable x.  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEâ02)  1530-1311/02 $17.00 ÂŠ 2002 IEEE  M hT i  ?  We define sub(Ď) and types for Ď as in Definition 3. For every formula Î¸(x) = Ď(x) 2 sub(Ď) we reserve fresh unary  predicates PÎ¸i (x), and for every Î¸ of the form EĎ, Ď1 U Ď2 ,  or Ď1 S Ď2 in sub(Ď) we reserve fresh propositional variables piÎ¸ , where i = 0; 1; : : : . The PÎ¸i (x) and piÎ¸ are called the  i-surrogates of Î¸(x) and Î¸, respectively. For Ď 2 sub(Ď),  denote by Ďi the result of replacing in Ď all its subformulas of the form Ď, Ď U Ď, Ď S Ď, or EĎ that are not within  the scope of another occurrence of a non-classical operator by their i-surrogates. Thus, Ďi is a purely first-order  (non-temporal) formula. Let Îi = fĎi : Ď 2 Îg for any set  Î  sub(Ď).  The idea behind these definitions is as follows. The formulas Ďi abstract from the temporal component of Ď and can  be evaluated in a first-order structure without taking into account its temporal evolution. Of course, later we have to be  able to reconstruct the truth value of Ď in temporal models  from the truth value of the Ďi . In contrast to the linear time  case, we need a list of abstractions Ď0 ; Ď1 ; : : :, since the temporal evolution depends on branches. So, intuitively, each  i < Ď represents a branch. (Actually, we will see that finitely  many i < Ď are enough, since we have to represent branches  only up to a certain equivalence relation).  sub(Ď)  Let Ď(Ď) = 44  .  j  \\  Si  iff  ik  EĎ 2  [\  Si  iff  ik  Ď2  T  Lest this be confusing, we note that S  [\  Si :  ik  i is the set of formulas occurring in every type in Si .  S  (ii) T is a set of maps Ď : f1; : : : ; nÎ g ! ik Si , called  traces, where nÎ Ď(Ď) is a natural number depending on  Î and such that fĎ(i) : Ď 2 T g : i  nÎ = S .  T  The set of sentences in fĎ(i) : Ď 2 T g will be denoted  by Î(i). For a trace Ď, we set  Ď=  [  i  (Ď(i)) ;  inÎ  T  =  fĎ : Ď 2 T g  :  D EFINITION 12. Let Î = hS ; T i be a state candidate for Ď  and  D  D  = D; P0 ; : : : ; p0 ; : : :  D  a first-order structure in the signature of QPCTL1 . For every  a 2 D we define the trace of a (with respect to Î) as  tr(a) = fĎ 2  We say that  L EMMA 13. A state candidate Î = hS ; T i for Ď is realisable iff the first-order sentence  ÎąÎ =  ^  Ď2T  9x Ď ^ 8x  _  Ď  Ď2T  is satisfiable.  D EFINITION 14. A connection is a quadruple (â; Î; R; N )  consisting of two realisable state candidates â = (S ; T ) and  Î = (U ; V ), a relation R  T  V with domain T and  range V , and a relation N  f1; : : : ; nâ gf1; : : : ; nÎ g with  range f1; : : : ; nÎ g, such that for all (i; j) 2 N, all (Ď; Ď0 ) 2 R,  and all Ď 2 sub(Ď), we have Ď 2 Ď(i) iff Ď 2 Ď0 ( j).  j  D EFINITION 11. A state candidate for Ď is a pair of the  form Î = (S ; T ) in which:  (i) S = fS1 ; : : : ; Sk g, where each Si is a set of types for Ď  such that, for every sentence Ď, we have Ď 2 Ď iff Ď 2 Ď0 ,  for any Ď; Ď0 2 Si , and for every EĎ 2 sub(Ď),  EĎ 2  State candidates represent states w of temporal models.  The intuition behind this definition will be clear from the  proof of the theorem below. Here we only say that, roughly,  the components Si of a state candidate Î = hS ; T i represent  the states of a moment w in different branches, and each  trace Ď 2 T shows the types of one element of the domain  of w in these states (i.e., its possible states in different histories).  It follows immediately from the definition that we have:  [  inÎ  i  (sub(Ď))  :  D j= Ď[a]g  D realises Î if T = ftr(a) : a 2 Dg.  :  A connection describes how (the abstract representation  Î of) a state w is related to (the abstract representation â  of) its immediate predecessor. To this end, the relation R  between the traces in both representations is fixed.  For an Ď-tree = hT ; <i and w 2 T , denote by B(w) the  set of full branches coming through w.  T  T  D EFINITION 15. A quasimodel for Ď over is a map f associating with the root w0 of a pair f (w0 ) = (Îw0 ; gw0 ),  where Îw0 is a realisable state candidate, and with every  non-root point w 2 T a pair f (w) = (Cw ; gw ), where Cw =  (âw ; Îw ; Rw ; Nw ) is a connection, and all gw , for w 2 T , are  functions from B(w) onto f1; : : : ; nÎw g such that the following hold:  T  T  1. if v is the immediate predecessor of w in , then Îv =  âw and Nw = f(gv (Î˛); gw (Î˛)) : Î˛ 2 B(w)g;  2. for all Î˛ 2 B(w), Ď U Ď 2 Îw (gw (Î˛)) iff there exists  u > w with u 2 Î˛, Ď 2 Îu (gu (Î˛)) and Ď 2 Îv (gv (Î˛)),  for all v 2 (w; u) (Î(i) was defined after Definition 11);  3. for all Î˛ 2 B(w), Ď S Ď 2 Îw (gw (Î˛)) iff there exists  u < w with Ď 2 Îu (gu (Î˛)) and Ď 2 Îv (gv (Î˛)) for all  v 2 (u; w).  We say that f satisfies Ď if there exists w 2 T such that  S  Îw = (Sw ; Tw ) and Ď 2 S for some S 2 Sw .  While the connections take care of the truth values of  âlocalâ formulas of the form Ď, quasimodels take care of  the remaining âglobalâ temporal operators.  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEâ02)  1530-1311/02 $17.00 ÂŠ 2002 IEEE  S(Î˛; w) = ftp(Î˛; w; a) : a 2 Dg;  An induction on d shows that the number ](d ) of dw -classes  is at most Îž(Ď)d  2(d +1)jsub(Ď)j (for any w). For d = 0, one  may check that if (Î˛; w) j= Ď iff (Î˛0 ; w) j= Ď for each sentence Ď 2 sub(Ď), then Î˛ 0w Î˛0 . So ](0)  2jsub(Ď)j . Assume the result for d. One may check that if Î˛; Î˛0 2 B(w)  contain a common immediate successor v of w, (Î˛; w) j= Ď  iff (Î˛0 ; w) j= Ď for each sentence Ď 2 sub(Ď), and Î˛ dv Î˛0 ,  then Î˛ wd +1 Î˛0 . Both checks involve an induction on Ď in  (2) above. It follows that ](d + 1)  Îž(Ď)  2jsub(Ď)j  ](d ), and  hence that ](d )  Îž(Ď)d  2(d +1)jsub(Ď)j for all d, as required.  jsub(Ď)j 0  Î˛ then Î˛ w Î˛0 , so that w  Finally observe that if Î˛ w  has at most ](jsub(Ď)j)  Ď(Ď) classes.  MÎ˛w j  Let Î˛w1 ; : : : Î˛wnw be some minimal list of full branches  such that f[Î˛w1 ]w ; : : : ; [Î˛wnw ]w g is the set of all w -equivalence  classes. With each a 2 D we associate a trace  T HEOREM 16. Ď is satisfiable in a QPCTL1 -model iff there  exists a quasimodel satisfying Ď.  Proof. ()) Suppose that Ď is satisfied in some model. We  <ĎĎ, as in the proof of  may replace its tree by + =  <  Ď  Lemma 6; Ď denotes the set of finite sequences of natural  numbers. Every branch of is âduplicatedâ Ď times in +  at each node, and Ď is still satisfied in the resulting model  = h + ; D; I i. Thus ( ; Ď; v) j=a Ď for some v 2 T + ,  Ď 2 B(v) (defined with respect to + ) and some assignment  . If w 2 T + and Î˛ 2 B(w), let  T T T  T  M  T  M T  a  where  tp(Î˛; w; a) = fĎ 2 sub(Ď) : (  T  ;  ;  g  ) = Ď[a]  :  T  Let Sw = fS(Î˛; w) : Î˛ 2 B(w)g. We extract from + a  subtree 0 = hT 0 ; <0 i in which every node has at most  sub(Ď)  immediate successors. To this end, we inÎž(Ď) = 22  ductively define Tn0  T + with this property. Set T00 = fw0 g,  where w0 is the root of + . Given Tn0 , for each w 2 Tn0  with ht (w) = n, and each S 2 Sw , we pick Î˛S 2 B(w) such  <ĎĎ  that S(Î˛S ; w) = S, and (we use the form of + =  0  +  here) Î˛S \ Tn = Î˛S \ Î˛S = ft 2 T : t  wg for  S distinct  S; S0 2 Sw . Let Bw = fÎ˛S : S 2 Sw g, and Tw = Bw . We  can assume thatSĎ 2 Bw0 . Note that jBw j  Îž(Ď). Now  0  set Tn0S  fTw : w 2 Tn0 ; ht (w) = ng. Finally define  +1 = Tn [  0  0  T = n<Ď Tn . Note that Ď  T 0 and v 2 T 0 .  Let 0 = h 0 ; D; I 0 i and 0 be the restrictions of  and  +  to T 0 . One can easily show by induction on the construction of Ď 2 sub(Ď) that ( ; Î˛; w) j=a Ď iff ( 0 ; Î˛; w) j=a Ď,  for all full branches Î˛ in 0 and all w 2 Î˛. (For example,  suppose ( ; Î˛; w) j=a EĎ. Then there is Î˛0 2 B(w) in +  such that ( ; Î˛0 ; w) j=a Ď. Pick a full branch Îł in 0 for  which S(Î˛0 ; w) = S(Îł; w). Since Ď is a sentence, we have  ( ; Îł; w) j=a Ď. It follows by IH that ( 0 ; Îł; w) j=a Ď and  so ( 0 ; Î˛; w) j=a EĎ.)  Thus 0 satisfies Ď and we can work with this model  instead of . Define an equivalence relation w on B(w)  (defined in 0 now), for w 2 T 0 , by taking Î˛ w Î˛0 when  ( 0 ; Î˛; w) j=a Ď iff ( 0 ; Î˛0 ; w) j=a Ď, for every Ď 2 sub(Ď)  and every assignment . The w -equivalence class generated by Î˛ will be denoted by [Î˛]w .  is applied to open formulas, we can show  Since only  that the number of w -equivalence classes is bounded by  Ď(Ď). To show this, for w 2 T 0 , full branches Î˛ and Î˛0 in  B(w), and d < Ď, we put Î˛ dw Î˛0 if for all t 2 T 0 with t  w  and ht (t )  ht (w) + d, we have  T  j  j  T  T T  0  M T  T  M  M  M  T  M  M  M  M  M  T  1. t 2 Î˛ iff t 2 Î˛0 ,  T  M  M  M  T  T  M  a  a  2. if t 2 Î˛, then for all assignments and all Ď 2 sub(Ď)  with at most ht (w) + d ht (t ) occurrences of , we  have (Î˛; t ) j=a Ď iff (Î˛0 ; t ) j=a Ď.  Ďwa : f1; : : : ; nw g !  [  Sw  by taking Ďwa (i) = tp(Î˛wi ; w; a). Denote the resulting set of  traces by Tw . Let Îw = (Sw ; Tw ) for all w 2 T 0 . We are now  in a position to define a quasimodel f over 0 satisfying Ď.  If w is not the root, then set f (w) = ((Îv ; Îw ; Rw ; Nw ); gw ),  where v is the immediate predecessor of w, and for root w0  let f (w0 ) = (Îw0 ; gw0 ), where  T        gw (Î˛) = i iff Î˛ 2 [Î˛wi ]w ,  Rw = f(Ďva ; Ďwa ) : a 2 Dg,  Nw = f(gv (Î˛); gw (Î˛)) : Î˛ 2 B(w)g.  It is not hard to check that f is a quasimodel satisfying Ď.  (() Now suppose that f is a quasimodel for Ď over T =  hT i with root w0 . Let f (w0 ) = (Îw gw ) and f (w) =  (Cw gw ) = ((âw Îw Rw Nw ) gw ) for non-root w 2 T . Let  ;<  0;  ;  ;  ;  ;  0  ;  Îw = (Sw ; Tw ) and nw = nÎw .  A run r in f is a function associating with any w 2 T a  trace r(w) 2 Tw such that (r(v); r(w)) 2 Rw for any non-root  w with immediate predecessor v. Using the condition that  the range and domain of Rw coincide with f1; : : : ; nw g and  f1; : : : ; nvg, respectively, it is not difficult to see that, for any  w and any Ď 2 Tw , there exists a run r with r(w) = Ď. Let R  be the set of all runs.  For every w 2 T we find a first-order structure I (w) with  domain D = R realising Îw = (Sw ; Tw ) and such that for all  i 2 f1; : : : ; nw g, r 2 D, and Ď 2 sub(Ď),  M T  Ď 2 r(w)(i)  iff I (w) j= Ďi [r]:  a  Let  = h ; D; I i and let be any assignment in D. One  can show by induction that for all Ď 2 sub(Ď), all w 2 T ,  and all Î˛ 2 B(w) with gw (Î˛) = i, say, we have  I (w) j=a Ďi  iff  (  M Î˛ w j aĎ  ;  ;  ) =  :  Since Ď 2 r(w)(gw (Ď)) for some w 2 T , Ď 2 B(w) and r 2  R , we finally obtain ( ; Ď; w) j= Ď.  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEâ02)  1530-1311/02 $17.00 ÂŠ 2002 IEEE  M  Now we construct a reduction of QPCTLw to non-local  PCTL by means of encoding quasimodels in non-local  propositional tree models. Suppose again that a QPCTLw sentence Ď is fixed.  With every realisable state candidate Î = (S ; T ) for Ď,  every connection C, every i  Ď(Ď), and every sentence  Ď 2 sub(Ď), which either is a propositional variable or starts  with an existential quantifier 9x, we associate propositional  variables pÎ , pC , pi , and pĎ , respectively. Let ] be a translation from the set of QPCTLw -sentences into the set of  PCTL -formulas which distributes over the booleans, temporal operators and path quantifiers, and Ď] = pĎ , where Ď  is a propositional variable or a sentence of the form 9x Ď.  Clearly, Ď] is a PCTL -formula. Then the following formula Ď? is effectively constructable from Ď:  tended to mean gw (Î˛) = i. This is ensured by the formulas  A  ( i  j );  ! :  (5)  1i< j Ď(Ď)  A2F  ^    ^  Î2R (Ď)  A2F  ( i  ! :  j );  (6)  1i< j Ď(Ď)  pÎ !  i^    1inÎ  pC !  i^  1inÎ  C2C (Ď)  (7)  ;  i  1inÎ  (8)  :  i  1inÎ  Here and below we assume that C = (â; Î; R; N ). Now we  write down a formula which says that N in C is determined  by the functions gw :  A2F    Ď? = Ď] ^ (Ď ^ :3P>) _ 3P(Ď ^ :3P>)  ^ p p  ^ p p  ^ Ep A _ p   ^ Ep A _ p   ^    pC !  C2C (Ď)  ^  E( p j ^  (i; j )2N  ;  ^  A  _  P pi )    (p j ^  P pi )  (9)  :  (i; j )2N  where Ď is the conjunction of the formulas (1)â(11) defined  below.  _  _R  Î2  A2F    A pÎ ^  ^Ap  ^Ap  A pC ^  C2C (Ď)  ! :  pÎ );  0  0  ( C  (1)    ! :  pC )  0  :  (2)  C6=C0  Here R (Ď) and C (Ď) are the sets of realisable state candidates and connections for Ď, respectively. The formulas  in (1) say that the pÎ and pC are âlocalâ (so we can write  w j= pÎ and w j= pC ) and that precisely one pÎ holds at the  root and precisely one pC holds at each non-root point.  Intuitively, w j= pC means that f (w) = (C; g), for some  g. Say that a pair of connections (C1 ; C2 ) is suitable if the  second state candidate of C1 coincides with the first state  candidate of C2 . The set of all suitable pairs of connections  is denoted by Cs (Ď). A pair (Î; C) is suitable if the first  state candidate of C coincides with Î. The set of all suitable pairs of this form is denoted by R s (Ď). The following  formulas say that the pair induced by a point and its immediate predecessor is suitable:  A  _  _R  (Î;C)2  A2F  ( pÎ ^  pC );  (3)  s (Ď)  ( pC1  ^  ^  ^Ď ^  ^ p  R  ^ p  A2  include:  ( Î  Î6=Î  (Ď)  Finally, we have to ensure that the set of sentences true at  (Î˛; w) corresponds to the set of sentences in Îw (gw (Î˛)). Let  Î0w (i) be the set of sentences in sub(Ď) n Îw (i). Then we  ^  pC2 ):  (4)  (C1 ;C2 )2Cs (Ď)  Intuitively, for i such that 1  i  Ď(Ď), (Î˛; w) j= pi is in-  A  ( Î ^ pi ) ! (  Ď  Î2 (Ď);1inÎ  Ď2Î(i)  ( C ^ pi ) ! (  C2S (Ď);1inÎ  Ď2Î(i)  F  ]  ]    Ď] )  Ď2Î0 (i)  ^  ;  (10)  :  (11)  :  ^    Ď] )  :  Ď2Î0 (i)  T HEOREM 17. A QPCTLw -sentence Ď is satisfiable in a  full model iff the PCTL -formula Ď? is satisfiable in a full  non-local model.  Proof. ()) If Ď is satisfiable, then it is satisfied in a quasimodel f for Ď based on an Ď-tree = hT ; <i. Let f (w) =  (Cw ; gw ) = ((âw ; Îw ; Nw ; Rw ); gw ) if w is not the root and  f (w0 ) = (âw0 ; gw0 ) for root w0 of . Define a (propositional) valuation h in  by taking, for all w 2 T and  Î˛ 2 B(w):  T  T    (Î˛; w)    (Î˛; w) 2 h( pC )    (Î˛; w) 2 h( pi )    (Î˛; w)  T  2 h( pÎ ) iff Î = Îw , for every realisable state  candidate Î;  iff C = Cw , for every connection C;  iff gw (Î˛) = i, for all i < Ď(Ď);  2 h( pĎ ) iff Ď 2 Îw (gw (Î˛)), for all sentences Ď  in sub(Ď).  It is not hard to prove that the full model  required.  M T  T  M Th  =  h  ;  i  is as  Conversely, suppose  = h ; hi satisfies Ď? . Then  Ď is true at the root w0 of . Define a quasimodel f by  taking f (w) = (Cw ; gw ) = ((âw ; Îw ; Nw ; Rw ); gw ) if w 6= w0 ,  and f (w0 ) = (Îw0 ; gw0 ), where  (()  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEâ02)  1530-1311/02 $17.00 ÂŠ 2002 IEEE   Îw0 is the unique Î for which w0 j= pÎ (this is independent of the branch of evaluation);   for w 6= w0 , Cw is the unique C such that w j= pC ;   gw (Î˛) = i for the unique i for which (Î˛; w) j= pi .  The reader can check that f is a quasimodel satisfying Ď.  4 Conclusion  The decidability of the weak one-variable fragment of  first-order CTL can be used to obtain decidability results  for certain spatio-temporal logics based on CTL and the  region connection calculus RCC-8 (see the survey papers  [5, 9]). From this viewpoint it has sufficient expressive  power to be useful. However, there is still a gap between the  undecidability of the one-variable fragment of first-order  CTL and the decidability of its weak one-variable fragment. In particular, the following problems are still open.  1. What happens if the path-quantifier  open formulas as well?  E  is applied to  2. Or, what happens if all temporal operators are applied  to open formulas, but E only to sentences?  3. Another open problem is the computational complexity of the logics considered above.  The reduction proofs presented in this paper provide only  non-elementary decision procedures (simply because the  complexity of S2S is non-elementary). We do not believe  that this is optimal.  [2] A. Chandra, J. Halpern, A. Meyer, and R. Parikh. Equations  between regular terms and an application to process logic. In  STOC, pages 384â390, 1981.  [3] E. Emerson and J. Halpern. âsometimesâ and ânot neverâ revisited: on branching versus linear time. Journal of the ACM,  33:151â178, 1986.  [4] I. Hodkinson, F. Wolter, and M. Zakharyaschev. Decidable  fragments of first-order temporal logics. Annals of Pure and  Applied Logic, 106:85â134, 2000.  [5] I. Hodkinson, F. Wolter, and M. Zakharyaschev. Monodic  fragments of first-order temporal logics: 2000â2001 a.d. In  R. Nieuwenhuis and A. Voronkov, editors, Logic for Programming, Artificial Intelligence and Reasoning, volume  2250 of LNAI, pages 1â23. Springer-Verlag, 2001.  [6] I. Hodkinson, F. Wolter, and M. Zakharyaschev. Decidable  and undecidable fragments of first-order branching temporal  logics. In Proc. Logic in Computer Science (LICSâ02). IEEE  Computer Science Press, 2002 (in print). (Draft available at  http://www.dcs.kcl.ac.uk/staff/mz.)  [7] F. Laroussinie and P. Schnoebelen. A hierarchy of temporal logics with past. Volume 775 of LNCS, pages 47â58.  Springer-Verlag, 1994.  [8] M. O. Rabin. Decidability of second order theories and automata on infinite trees. Transactions of the American Mathematical Society, 141:1â35, 1969.  [9] F. Wolter and M. Zakharyaschev. Qualitative spatio-temporal  representation and reasoning: a computational perspective. In  Exploring Artificial Intelligence in the New Millenium. Morgan Kaufmann Publishers, 2002 (in print).  [10] A. Zanardo. A finite axiomatization of the set of strongly  valid ockamist formulas. Journal of Philosophical Logic,  14:447â468, 1985.  Acknowledgements  The work of the second and forth authors was partially  supported by UK EPSRC grant GR/R45369/01 âAnalysis  and mechanisation of decidable first-order temporal logics;â the fourth author was also partially supported by  UK EPSRC grant GR/R42474/01 âComplexity analysis  of reasoning in combined knowledge representation systems.â The work of the third author was partially supported by Deutsche Forschungsgemeinschaft (DFG) grant  Wo583/3-1. We are grateful to Szabolcs MikulaĚs for helpful  discussions and Colin Stirling who attracted our attention to  the non-local version of CTL . Thanks are also due to the  anonymous referees for useful suggestions and comments  on the first version of this paper.  References  [1] J. Burgess. Logic and time. Journal of Symbolic Logic,  44:566â582, 1979.  Proceedings of the Ninth International Symposium on Temporal Representation and Reasoning (TIMEâ02)  1530-1311/02 $17.00 ÂŠ 2002 IEEE 