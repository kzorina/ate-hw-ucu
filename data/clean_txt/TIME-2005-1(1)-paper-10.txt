Quantitative Temporal Logics: PS PACE and below  Carsten Lutz1 , Dirk Walther2 , and Frank Wolter2  Inst. fuĚr Theoretische Informatik, TU Dresden, Germany  lutz@tcs.inf.tu-dresden.de  2  Dept. of Computer Science, University of Liverpool, UK  {D.Walther,frank}@liv.csc.ac.uk  1  Abstract  Often, the addition of metric operators to qualitative  temporal logics leads to an increase of the complexity of  satisfiability by at least one exponential. In this paper, we  exhibit a number of metric extensions of qualitative temporal logics of the real line that do not lead to an increase  in computational complexity. We show that the language  obtained by extending since/until logic of the real line with  the operators âsometime within n time unitsâ, n coded in binary, is PS PACE-complete even without the finite variability assumption. Without qualitative temporal operators the  complexity of this language turns out to depend on whether  binary or unary coding of parameters is assumed: it is still  PS PACE-hard under binary coding but in NP under unary  coding.  1  Introduction  The extension of qualitative temporal logics (TLs) with  metric operators has been studied for almost fifteen years  [5, 4, 8]. Of particular interest are metric extensions of temporal logics of the real line, since the resulting quantitative  TLs are an important tool for the specification and verification of real-time systems [2]. Unfortunately, moving from  qualitative to quantitative logics is often accompanied by  an increase in computational complexity of the satisfiability problem. The most important example witnessing this  effect is the PS PACE-complete since/until logic of the real  line [7], whose extension with a metric operator âsometime  in at least n but not more than m time unitsâ (n and m coded  in binary) becomes E XP S PACE-complete if the case n = m  is not admitted, and even undecidable if it is [1, 3, 5].  It is well known that the complexity of the metric temporal logic obtained by this extension can be reduced to  PS PACE again by further restricting the values of n and m,  e.g., by enforcing that n = 0 [1]. However, in contrast to the  E XP S PACE-completeness and undecidability results above,  this improvement has only been proven under the finite variability assumption (FVA) which states that no propositional  variable changes its truth-value infinitely many times in any  finite interval. While the FVA is a natural condition for various computer science applications, we believe that there  are at least two reasons to consider also the non-FVA case:  first, qualitative temporal logic originated in philosophy and  mathematics to study time itself, rather than the behaviour  of systems with discrete state changes as considered in computer science. If quantitative TL is used for the former purpose, the FVA is less convincing than in computer science  applications. Second, even in computer science reasoning  without the FVA can be fruitfully employed: assume that a  formula Ď of a quantitative TL describes the specification of  a real-time system. Further assume that Ď has been found  to be unsatisfiable under FVA, indicating that the described  specification is not realizable. If an additional satisfiability  check without FVA is made revealing that dropping FVA  regains satisfiability of Ď, then the user obtains additional  information on the source of the unrealizability of her specification: namely that it enforces an infinite number of state  changes in a finite interval.  The purpose of this paper is to investigate metric temporal logics of the real line that are at most PS PACE-complete.  More precisely, we prove three results. Our first result is  that extending since/until logic of the real line with metric  operators âsometime in at most n time unitsâ, n coded in  binary, is PS PACE-complete even without FVA. (Note that  the logic without FVA is more general than with FVA in  the sense that the latter logic can be polynomially reduced  to the former [5].) To show this result, we propose a new  method for polynomially reducing satisfiability in metric  TLs whose numerical parameters are coded in binary to satisfiability in the same logic with numbers coded in unary.  The essence of the reduction is to introduce new propositional variables that serve as the bits of a binary counter  measuring distances. For the metric TL mentioned above,  we obtain a PSpace upper bound since Hirshfeld and Rabinovich have shown that QTL, i.e., the same logic with num-  bers coded in unary, is PS PACE-complete without FVA [5].  In the technical report accompanying this paper, we show  that our proof method can be used for other logics as well.  For instance, metric extensions of (discrete-time) LTL and  the branching time logic CTL are shown to be in PS PACE  and E XP T IME, respectively [6].  Our second result concerns a sharpening of PS PACE  lower bounds for metric temporal logics of the real line. In  the current literature, such logics usually contain qualititative since/until logic as a proper fragment, and thus trivially  inherit PS PACE-hardness [2, 5, 7]. We consider metric TLs  with weaker qualitative operators and show that PS PACEhardness can already be observed in the following three  cases: (i) a future diamond and a future operator âsometime in at most n time unitsâ, n coded in unary; (ii) only the  future operator âsometime in at most n time unitsâ, n coded  in binary (i.e., no qualitative operators at all); (iii) only a  metric version of the until operator for the interval [0, 1].  As a third result, we explore the transition from NP  to PS PACE. In particular, we show that the quantitative  TL with only the metric operator âsometime within n time  unitsâ, n coded in unary, is NP-complete. This result extends the result of [10] that satisfiability of the qualitative  TL with operators âeventually in the futureâ and âeventually  in the pastâ over the real line is decidable in NP. When compared with result (ii) above, it also shows that the complexity of metric TLs without qualitative operators depends on  the coding of numbers. To establish the NP upper bound,  we show that satisfiability of a formula Ď can be decided by  first âguessingâ a system of rational linear inequalities, and  checking whether this system has a solution over the real  (or, equivalently, rational) numbers.  2  Preliminaries  We introduce the metric temporal language QTL of [5],  which is closely related to the language MITL of [1]. Fix  a countably infinite supply p0 , p1 , . . . of propositional variables. A QTL-formula is built according to the syntax rule  Ď := p | ÂŹĎ | Ď â§ Ď | Ď S Ď | Ď U Ď | ĎS I Ď | ĎU I Ď  with p ranging over the propositional variables and I ranging over intervals of the forms (0, n), (0, n], [0, n), and  [0, n], where n > 0 is a natural number. The Boolean operators , â¨, â, and â are defined as abbreviations in the  usual way. Moreover, we introduce additional future modalities as abbreviations: âŚIF Ď =  U I Ď, IF Ď = ÂŹâŚIF ÂŹĎ,  âŚF Ď =  U Ď, and F Ď = ÂŹâŚF ÂŹĎ. Their past counterparts are defined analogously and have a subscript P .  Note that formulas with rational numbers as parameters  of metric operators S I and U I can be translated (in polynomial time) to satisfiability equivalent formulas contain-  ing only the natural numbers by multiplying with the least  common denominator of all (rational) parameters.  Formulas of QTL are interpreted on the real line. A  model M =  , V is a pair consisting of the real numbers  and a valuation V mapping every propositional variable p  to a set V(p) â . The satisfaction relation â|=â is defined  inductively as follows, where we write w + I to denote the  set {w + x | x â I} for each time point w â and interval  I of one of the above forms; w â I is defined analogously.  Ă  Ă  Ă  M, w  M, w  M, w  M, w  |= p  |= ÂŹĎ  |= Ď â§ Ď  |= Ď U Ď  iff  iff  iff  iff  M, w |= Ď S Ď  iff  M, w |= Ď U I Ď  iff  M, w |= Ď S I Ď  iff  w â V(p)  M, w |= Ď  M, w |= Ď and M, w |= Ď  there exists u > w such that  M, u |= Ď and M, v |= Ď  for all v such that w < v < u  there exists u < w such that  M, u |= Ď and M, v |= Ď  for all v such that u < v < w  there exists u â w + I such that  M, u |= Ď and M, v |= Ď  for all v such that w < v < u  there exists u â w â I such that  M, u |= Ď and M, v |= Ď  for all v such that u < v < w  Ă  We will also write w |=V Ď for  , V, w |= Ď. A QTLformula Ď is satisfiable if there exists a model M and a  w â such that M, w |= Ď. It is satisfiable under the finite  variability assumption (FVA) if it is satisfiable in a model  in which no propositional variable changes its truth-value  infinitely many times in any finite interval.  Our presentation of QTL deviates from that of [5], where  (0,1)  (0,1)  only the metric operators âŚF and âŚP are admitted. If  the numerical parameters of the metric operators are coded  in unary, there exists an easy polynomial translation from  Hirshfeld and Rabinovichâs version of QTL to ours and vice  versa. However, in this paper we also consider binary coding of numbers. If we want to emphasize this fact, we shall  write QTLb instead of QTL, and likewise, QTLu will denote  unary coding of numbers.  We close this section with a discussion of the relation  between temporal logics with and without FVA. The satisfiability of a formula Ď of a temporal logic with operators  since and until and with FVA can be polynomially reduced  to satisfiability  in the same logic without FVA; see [5]: Let    (P Î´p â§ Î´p â§ F Î´p ) where  Î´=  Ă  p used in Ď      Î´p = (p U p) â¨ (ÂŹp U ÂŹp)      â§ (p S p) â¨ (ÂŹp S ÂŹp) .  Then it is not hard to verify that Ď is satisfiable with FVA  iff Ď â§ Î´ is without FVA. Note that the length of Ď â§ Î´ is  polynomial in the length of Ď. To the best of our knowledge there is no polynomial reduction of this type for the  language without since or until.  3  QTLb is PS PACE-complete without FVA  The purpose of this section is to prove that QTLb satisfiability without FVA is decidable in PS PACE. Note  that, due to polynomial reducibility of QTLb with FVA to  this logic, the upper complexity bound carries over. This result is already known for QTLu without FVA [5] and QTLu  with FVA [1]. We first show that our result indeed improves  upon the existing ones by proving that QTLb is exponentially more succinct than QT Lu .  Theorem 1. Let Ď be a QTL-formula with numbers coded  [0,n]  in unary that is equivalent to F p. Then Ď has length at  least n.  Proof. Suppose by contradiction that there exists a QTLformula Ď with numbers coded in unary such that Ď is  [0,n]  equivalent to F p, for some n âĽ 1, and the length of  Ď is strictly smaller than n. We may assume that Ď contains  no other propositional letters than p: otherwise, just replace  them with . Then, for n âĽ 1, set Vn (p) := [ân, n]  [0,n]  and Mn := R, Vn . Then Mn , 0 |= F p. Therefore,  Mn , 0 |= Ď. Now, it is straightforward to prove the following by induction: for every subformula Ď of Ď of length â¤ k  and all x âĽ k such that n â x âĽ ân + k:  M, (n â k) |= Ď iff Mn , (n â x) |= Ď.  Since the length of Ď is smaller than n, it follows that, in  Mn , the points 0 and 1 satisfy the same subformulas of Ď.  In particular, Mn , 1 |= Ď. We have derived a contradiction  [0,n]  since Mn , 1 |= F p.  â  We now establish the first result of this paper.  Theorem 2. Satisfiability in QTL with numbers coded in  binary is PS PACE-complete without FVA.  Since (qualitative) since/until logic on the real line is  PS PACE-hard [7], it suffices to prove the upper bound. For  simplicity, we prove the upper bound for the future fragment  of QTL, i.e., we omit past operators. The proofs are easily  extended to the general case. Within the future fragment,  (0,1)  (0,1]  [0,1)  we consider only the metric operators âŚF , âŚF , âŚF ,  [0,n]  and âŚF . This can be done w.l.o.g. due to the following  observations:  First, satisfiability in QTLb can be reduced to satisfiability in QTLb without the metric operators Ď1 U I Ď2 : to  decide satisfiability of a QTLb -formula Ď, introduce a new  propositional variable pĎ2 for every Ď2 which occurs in a  subformula of the form Ď1 U I Ď2 of Ď. Inductively define  a translation on QTLb -formulas such that, for any subformula Ď of Ď, Ďp to denotes the result of replacing all outermost subformulas Ď1 U I Ď2 of Ď by Ď1p U pĎ2 â§ âŚIF pĎ2 . Set  +  F Ď = Ď â§ F Ď. Then Ď is satisfiable iff        Ďp â§ +  (pĎ2 â Ď2p )  F  Ď1 U I Ď2 âsub(Ď)  is satisfiable. Note that the length of the latter formula is  polynomial in the length of Ď. Second, for any interval I  of the form (0, n), (0, n], or [0, n) with n > 1, âŚIF Ď is  [0,nâ1]  equivalent to âŚJF âŚF  Ď, where J is obtained from I by  replacing the upper interval bound n by 1.  In the following, we reduce satisfiability of QTLb formulas to the satisfiability of QTL1 -formula, i.e., QTLformulas in which all upper interval bounds have value 1.  As the coding of numbers is not an issue in the latter logic,  we obtain a PS PACE upper bound from the result of [5] that  QTLu -satisfiability in models without FVA is decidable in  PS PACE.  Let Ď be a QTL-formula meeting the restrictions laid out  above. Let k be the greatest number occurring as a parameter to a metric operator in Ď, nc = log2 (k + 2), and  Ď1 , . . . , Ď the subformulas of Ď that occur as an argument  [0,n]  to a metric operator of the form âŚF with n > 1. We reserve, for 1 â¤ i â¤ , fresh propositional variables xi , yi ,  and cinc â1 , . . . , ci0 that do not occur in Ď. The sequences  cinc â1 , . . . , ci0 of propositional variables will be used to implement binary counters, one for each Ďi . Intuitively, these  counters measure the distance to the ânearestâ future occurrence of the formula Ďi , rounded up to the next largest natural number. A counter value greater than or equal to k + 1  is a special case indicating that the nearest occurrence is too  far away to be of any relevance. The variables xi and yi will  serve as markers with the following meaning: xi holds in a  point iff there is a natural number n such that Ďi holds at distance n, but not in between; similarly, yi holds iff there is a  natural number n such that Ďi does not hold at any distance  up to (and including) n, but Ďi holds at future points that  converge from the right to the future point with distance n.  In the following, we call the structure imposed on the real  line by the markers xi and yi the (one-dimensional) âgridâ.  To implement the counters, we introduce auxiliary formulas. For 1 â¤ i â¤ , let  â˘ (Ci = m) be a formula saying that, at the current  point, the value of the i-th counter is m, for 0 â¤ m <  2nc . There are exponentially many such formulas, but  we will use only polynomially many of them in the reduction.  â˘ (Ci â¤ m) is a formula saying that, at the current point,  the value of the i-th counter does not exceed m, for  0 â¤ m < 2nc .  â˘ Ď := ÂŹ(xi â¨ yi ) U ((xi â¨ yi ) â§ Ď) says that, at the  next grid point, Ď is satisfied.  To deal with effects of convergence, it is convenient to introduce an additional abbreviation. The formula rc(Ď) :=  ÂŹ(ÂŹĎ U ) â§ ÂŹĎ describes convergence of Ď-points from  the right against a point where Ď does not hold. We now  inductively define a translation of QTLb -formulas to QTL1 formulas:  pâ  (ÂŹĎ)â  (Ď1 â§ Ď2 )â  (Ď1 U Ď2 )â  (âŚIF Ď)â  [0,n]  (âŚF Ďi )â  :=  :=  :=  :=  :=  :=  p  ÂŹĎ â  Ď1â â§ Ď2â  Ď1â U Ď2â  âŚIF Ď â      (Ci â¤ n â 1) â¨ (Ci = n) â§ ÂŹyi  Ďi4  (0,1]  := ÂŹ(Ci = 0) â§ âŚF (xi â¨ yi ) â        cit â§ ÂŹcit â§  (ÂŹci â§ ci )    â§  (ci â ci )  =t+1..nc â1  Ďi5  [0,1)  := ÂŹâŚF  =0..tâ1    â¨    (ci â§ ci )  Qualitative since/until logic on the real line is PS PACEcomplete, and thus not computationally simpler than QTLb .  However, several natural fragments are only NP-complete,  an important example being the qualitative TL with temporal operators âeventually in the futureâ and âeventually in the  pastâ [10]. In this section, we explore the transition from  NP to PS PACE for fragments of quantitative logics of the  real line, i.e., for QTL and its fragments. We start with determining several weak, but still PS PACE-hard fragments of  QTL. Observe that two of the fragments are purely quantitative, i.e., they do not admit qualitative temporal operators  at all.  [0,n]     (0,1)  := yi â rc(Ďâi ) â¨ F (ÂŹĎâi â§ ÂŹxi â§ ÂŹyi )    (0,1]  â§ âŚF yi â§ âŚF rc(Ďâi )  t=0..nc â1  From NP to PS PACE  Theorem 4. Satisfiability (with and without FVA) is  PS PACE-hard for the fragments of QTL whose only temporal operators are:  Here, I ranges over intervals (0, 1], (0, 1), and [0, 1). It  remains to enforce the existence of the grid and the behavior  of the counters as described above. This is done with the  following auxiliary formulas, for 1 â¤ i â¤ :      Ďi1 := (Ci = 0) â Ďâi â¨ rc(Ďâi )     (0,1)  Ďi2 := xi â Ďâi â¨ F (ÂŹĎâi â§ ÂŹxi â§ ÂŹyi )    (0,1]  â§ âŚF xi â§ âŚF Ďâi  Ďi3  4    =0..nc â1  (xi â¨ yi ) â (Ci = 2nc â 1)  Intuitively, Ďi1 initializes the counter, Ďi2 and Ďi3 ensure that  the grid points xi and yi behave as described above, Ďi4 increments the counter when travelling to the left, and Ďi5 ensures that, when travelling left, the counter stays in maximal  value after the last occurrence of Ďâi . Let Ďi be the conjunction of Ďi1 to Ďi5 . The following is proved in [6] and finishes  the reduction.  Lemma 3. Ď is satisfiable iff F (Ď1 â§ Âˇ Âˇ Âˇ â§ Ď ) â§ Ďâ is  satisfiable.  (i) âŚF and âŚF  [0,n]  (ii) âŚF  with n > 0 coded in unary;  with n > 0 coded in binary;  (iii) U [0,1] .  Point (i) is proved by reducing satisfiability in LTL (i.e.,  qualitative temporal logic of the natural numbers) with the  only temporal operators  and âŚF (which is PS PACE-hard  [9]) to satisfiability in the logic defined in (i). To do so, the  main task is to represent the discrete natural numbers on the  real line by alternating intervals making a true and intervals making ÂŹa true, with the former representing the time  points of discrete time. This structure is enforced such that  the length of the a-intervals is between 2 and 3 (including  2), the length of the ÂŹa-intervals is between 7 and 8 (including 7), and the length of an a-interval together with the  subsequent ÂŹa interval is between 9 and 10. This is done  by the formula Ď = Ď1 â§ Ď2 â§ Ď3 :  Ď1  Ď2  Ď3  [0,2]  = F a,  [0,3] [0,7]  = F (a â âŚF F ÂŹa),  [0,10] [0,2]  = F (a â âŚF F a).  For the reduction, inductively define a translation (Âˇ)â as  follows:  pâ  (ÂŹĎ)â  (Ď1 â§ Ď2 )â  (Ď)â  (âŚF Ď)â  :=  :=  :=  :=  :=  p  ÂŹĎ â  Ď1â â§ Ď2â    [0,3]  [0,7]  [0,8]  âŚF F ÂŹa â§ âŚF (Ď â â§ a)  âŚF (ÂŹa â§ âŚF (Ď â â§ a))  Additionally, a formula Ď is needed to take care of uniformity, i.e., to make sure that the same propositional variables  hold in all points of an interval that makes a true:       [0,3]  p â§ a â F (a â p)  Ď = F  p used in Ď      [0,3]  â§ ÂŹp â§ a â F (a â ÂŹp) .  Now, Ď is satisfiable over the natural numbers iff Ďâ â§ Ď â§  Ď â§ a is satisfiable over the real numbers with FVA iff it is  satisfiable over the real numbers without FVA.  A similar reduction can be used to prove (ii). Notice that  satisfiability in LTL is already PS PACE-hard if the natural  numbers are replaced by a finite strict linear order (an initial  segment of the natural numbers). Moreover, any formula Ď  which is satisfiable in a finite strict linear order is also satisfiable in a finite strict linear order of length not exceeding  [0,n]  2|Ď| . Based on this observation, using the operator âŚF ,  n > 0 coded in binary, instead of âŚF , we can reduce satisfiability of an LTL-formula Ď in such a finite strict linear  order to satisfiability over the real line (with and without  FVA).  Finally, (iii) can be proved by reducing satisfiability over  the real line in the qualitative fragment of QTL with the  only temporal operator U (which is PS PACE-hard) to satisfiability of formulas with the operator U [0,1] over the interval  (0, 1); details can be found in [6].  We now exhibit a purely quantitative temporal logic of  the real line for which satisfiability is NP-complete: the  fragment of QTL with only the quantitative diamond and  numbers coded in unary, with and without FVA. This logic  may appear rather weak since it does not allow to make  statements about all time points. Still, it is useful for reasoning about the behaviour of systems up to a previously  fixed time point. Note that our NP-completeness result  shows that Points (i) and (ii) of Theorem 4 are optimal in  the following sense: in Point (i) we cannot drop âŚF , and in  Point (ii) we cannot switch to unary coding.  Theorem 5. In the fragment of QTL with temporal operators âŚIF and âŚIP , I of the form (0, n), [0, n), [0, n], or (0, n],  and n > 0 coded in unary, satisfiability is decidable in NP,  both, with and without FVA.  The lower bound is immediate from propositional logic and  thus we only have to prove the upper bound. Since numbers  are coded in unary, we may restrict our attention to temporal  operators whose upper interval bound is 1. In the proof, we  [0,1]  only consider the temporal operator âŚF . An extension to  past operators and open intervals is straightforward.  Let Ď be a formula whose satisfiability is to be decided.  We introduce some convenient abbreviations: mĎ denotes  the nesting depth of operators âŚIF in Ď (henceforth diamond  depth), nĎ = 2|Ď|3 + |Ď|2 , and rĎ = |Ď| Ă nĎ . Denote  by cl(Ď) the closure of the set of subformulas of Ď under  single negation. A type t for Ď is a subset of cl(Ď) such that  (i) ÂŹĎ â t iff Ď â t for each ÂŹĎ â cl(Ď), and (ii) Ď1 â§Ď2 â  t iff Ď1 , Ď2 â t for each Ď1 â§ Ď2 â cl(Ď). For a model   , V and w â , set  Ă  Ă  t(w)  t< (w)  = {Ď â cl(Ď) | w |=V Ď},  = {âŚIF Ď â cl(Ď) | w |=V âŚIF Ď}.  Notice that t(w) is a type for Ď. First, we devise an algorithm for satisfiability without FVA. To begin with, we show  that satisfiability of Ď implies satisfiability of Ď in a âhomogeneousâ model. In particular, in such models the number  of realized types is polynomial in the length of Ď.  Lemma 6. Let Ď be satisfiable without FVA. Then there is a  sequence x0 , . . . , xnĎ in such that 0 = x0 < x1 < Âˇ Âˇ Âˇ <  xnĎ = mĎ , and a valuation V such that  , V, 0 |= Ď  and  Ă  Ă  â˘ |{t(w) | 0 â¤ w â¤ mĎ }| â¤ rĎ ;  â˘ for every n with 0 â¤ n < nĎ and each type t for Ď, the  set {w â | xn < w < xn+1 and w |=V t} is either  empty or dense in the interval (xn , xn+1 ).  Ă  Ă  Proof. Consider a model M =  , V  with M, 0 |= Ď. By  the semantics, we clearly have the following:  Ă  |0â¤w â¤  (â) for any âŚIF Ď â sub(Ď), the set {w â  mĎ and w |=V âŚIF Ď} is a union of intervals of length  at least 1 and at most two intervals of length smaller  than 1.  The two possibly shorter intervals are the one starting at 0  and the one ending at mĎ . Using (â), we can show that there  is a sequence y0 , . . . , yk in for some k â¤ 2|Ď|2 +|Ď| such  that  Ă  â˘ 0 = y0 < Âˇ Âˇ Âˇ < yk = mĎ and  â˘ t< (w) = t< (w ) whenever yi < w < w < yi+1 for  any i < k.  To see this, take a formula âŚIF Ď â sub(Ď). The toggle  points for âŚIF Ď in the interval [0, mĎ ] are those points x  such that either (i) there is a y > x such that the truth value  of âŚIF Ď at x is different from the truth value of âŚIF Ď at all  points z with x < z < y or (ii) there is a y < x such that  the truth value of âŚIF Ď at x is different from the truth value  of âŚIF Ď at all points z with y < z < x. By (â), there are at  most 2 Âˇ mĎ + 1 < 2 Âˇ |Ď| + 1 toggle points for each formula  âŚIF Ď, and thus at most 2|Ď|2 + |Ď| toggle points altogether.  These points form the required sequence y0 , . . . , yk .  We convert this sequence into the desired sequence  x0 , . . . , xnĎ by arranging the elements of the set  {y0 , . . . , yk } âŞ  {yi + j | yi + j < mĎ }  i<k  1â¤j<mĎ  in ascending order according to â<â, possibly introducing (arbitrary) intermediate points to obtain a sequence of  length nĎ + 1.  To obtain a valuation V as required by the lemma, fix a  set Ti of types for each i < nĎ as follows: for each âŚIF Ď â  sub(Ď), choose a w â (xi , xi+1 ) with Ď â t(w) if such a  w exists. Then, Ti is the set of types t(w) of all points w  chosen in this way. Clearly |Ti | â¤ |Ď|. For each i < nĎ ,  take a collection (Xti )tâTi , of subsets of (xi , xi+1 ) which  form a partitioning of (xi , xi+1 ) such that each Xti is dense  in (xi , xi+1 ). Now define a valuation V by setting, for every  propositional variable p,  V(p) := (V (p) âŠ {x0 , . . . , xnĎ }) âŞ  {Xti | p â t}.  i<nĎ ,tâTi  Let ti , i â¤ nĎ , be the type {Ď â sub(Ď) | xi |=V Ď} for  Ď realized in point xi of the original model M. To show  that V is as required, it is sufficient to show that, for each  k â¤ mĎ , each Ď â sub(Ď) with diamond depth bounded  by k, and each w â [0, mĎ â k], we have  w |=V Ď  iff there is an i â¤ nĎ such that  (a) w = xi and Ď â ti , or  (b) w â Xti and Ď â t for some t â Ti .  Proof. Let k, Ď, and w be as above. The proof is by induction on the structure of Ď. The cases for propositional  variables, ÂŹ, and â§ are left to the reader. Consider the case  [0,1]  for âŚF .  [0,1]  âââ: Suppose w |=V âŚF Ď. Then there is a w â  w + [0, 1] such that w |=V Ď by the semantics. Distinguish four cases:  â˘ w = xi for some i â¤ nĎ and w = xj for some j âĽ i.  By (a), the induction hypothesis yields Ď â tj . Then  [0,1]  xj |=V Ď. From xj â xi â¤ 1 follows xi |=V âŚF Ď.  [0,1]  Hence âŚF Ď â ti .  â˘ w = xi for some i â¤ nĎ and w â Xtj for some j with  i â¤ j < nĎ and t â Tj . The induction hypothesis  in (b) yields Ď â t. Then, by definition of Tj , there  is a w â (xj , xj+1 ) such that w |=V Ď. Note that  there is an  with i <  â¤ nĎ such that x = xi + 1.  But then xj+1 â¤ x ; otherwise w â Xtj contradicts  w â w + [0, 1]. Now, from w â w < 1 follows  [0,1]  [0,1]  w |=V âŚF Ď. Hence âŚF Ď â ti .  â˘ w â Xti for some i < nĎ and t â Ti , and w = xj  for some j > i. By (a), the induction hypothesis yields  Ď â tj . Then xj |=V Ď. Now, from xj â w â¤ 1  [0,1]  follows w |=V âŚF Ď. But then, by definition of  the sequence x0 , . . . , xnĎ , it holds that, for all w â  [0,1]  [0,1]  (xi , xi+1 ), w |=V âŚF Ď. Therefore, âŚF Ď â t  [0,1]  for any t â Ti . Hence âŚF Ď â t.  â˘ w â Xti for some i < nĎ and t â Ti , and w â Xtj  for some j with i â¤ j < nĎ and t â Tj . This case is  similar to the previous cases and left to the reader, see  [6].  âââ: Let i â¤ nĎ such that  [0,1]  [0,1]  (a) w = xi and âŚF Ď â ti . Then xi |=V âŚF Ď. There  is a w â xi + [0, 1] such that w |=V Ď. Distinguish  two cases:  â w = xj for some j with i â¤ j â¤ nĎ . Then  Ď â tj . The induction hypothesis in (a) yields  w |=V Ď. From w â xi â¤ 1 follows xi |=V  [0,1]  âŚF Ď.  â w â (xj , xj+1 ) for some j with i â¤ j < nĎ .  By definition of Tj , there is a t â Tj such that  Ď â t. The induction hypothesis in (b) yields  w |=V Ď for any w â Xtj . Since Xtj is dense  in (xj , xj+1 ), there is such a w such that w â¤  [0,1]  w . Then w â xi â¤ 1. Hence, xi |=V âŚF Ď.  [0,1]  (b) w â Xti and âŚF Ď â t for some t â Ti . This case is  similar to the previous one and left to the reader.  â  Lemma 6 suggests the following idea for deciding in nondeterministic polynomial time whether a formula Ď is satisfiable: guess a (polynomially bounded) set of types for  Ď to be realized in a homogeneous model, a sequence  v0 , . . . , vnĎ of variables, and construct a system of linear  inequalities whose solution in determines a sequence of  points x0 , . . . , xnĎ from which we can build a homogeneous model realizing the guessed types. More precisely,  to decide the satisfiability of Ď, we non-deterministically  choose  Ă  â˘ a set T of types for Ď such that |T | â¤ rĎ ;  â˘ a type ti â T such that Ď â t0 , for every i â¤ nĎ ;  â˘ a non-empty set of types Ti â T , for every i < nĎ .  Intuitively, the type ti is to be realized at point xi , and the  types in Ti are those types realized in the interval (xi , xi+1 ).  Then, we take variables v0 , . . . , vnĎ and check whether the  system of inequalities given in Figure 1 has a solution in .  The Inequalities 2 to 9 are only added if i < nĎ . To understand the inequalities (in particular 4 and 5), note that the  point xi described by variable vi is not intended to realize  the whole type ti , but only those elements of ti whose diamond depth is at most mĎ â xi . Similarly, points from  Ă  (1) 0 = v0 < v1 < Âˇ Âˇ Âˇ < vnĎ = mĎ  [0,1]  Ď â ti , j âĽ i, and Ď â tj  [0,1]  Ď â ti , j âĽ i, and Ď â t for some t â Tj  (2) vj â vi > 1  if ÂŹâŚF  (3) vj â vi âĽ 1  if ÂŹâŚF  [0,1]  Ď â ti , but there is no j âĽ i such that Ď â tj or Ď â t for a t â Tj  [0,1]  Ď â t for some t â Ti , there is no j > i such that Ď â tj ,  (4) mĎ â vi < 1 if âŚF  (5) mĎ â vi â¤ 1 if âŚF  and there is no j âĽ i such that Ď â t for some t â Tj  (6) vj â vi â¤ 1  [0,1]  if âŚF  Ď â ti and j âĽ i is minimal such that Ď â tj and,  for every j  with i â¤ j  < j, Ď â t for any t â Tj   (7) vj â vi < 1  [0,1]  if âŚF  Ď â ti and j âĽ i is minimal such that Ď â t for some t â Tj and  there is no j  with i â¤ j  â¤ j such that Ď â tj   (8) vj â vi â¤ 1  [0,1]  if âŚF  Ď â t for some t â Ti , Ď â t for any t â Ti , and j > i is minimal  such that Ď â tj or Ď â t for some t â Tj  [0,1]  (9) vj â vi+1 âĽ 1 if ÂŹâŚF  Ď â t for some t â Ti , and (j âĽ i and Ď â t for some t â Tj ) or  (j > i and Ď â tj )  Figure 1. The system of inequalities.  (xi , xi+1 ) described by a type t â Ti realize only elements  of t whose diamond depth is at most mĎ â xi ; cf. the  structural induction in the proof of Lemma 6.  The algorithm runs in non-deterministic polynomial time  and returns âĎ is satisfiableâ if there is a solution to this system of inequalities, and âĎ is not satisfiableâ otherwise. By  considering the contrapositive, it is easily seen that Ď is unsatisfiable if the algorithm answers ânoâ: if Ď has a model,  then by Lemma 6 it also has a homogeneous model, and this  model suggests a choice of types such that the corresponding system of inequalities is satisfiable. Conversely, if the  algorithm returns âyesâ, we can construct a homogeneous  model:  Lemma 7. If the algorithm returns âĎ is satisfiableâ, then  Ď is satisfiable.  Proof. Suppose there are types ti , i â¤ nĎ , and sets of types  Ti , i < nĎ , such that there is a solution x0 , . . . , xnĎ for  the corresponding system of inequalities. For i < nĎ , take  a partitioning (Xti )tâTi of (xi , xi+1 ) such that each Xti is  dense in (xi , xi+1 ). Now define a valuation V by putting,  for every propositional variable p,      V(p) :=  {Xti | p â t} .  {xi | p â ti } âŞ  iâ¤nĎ  i<nĎ ,tâTi  In [6], the following is proved: for all k â¤ mĎ , all  Ď â sub(Ď) with diamond depth bounded by k, and all  w â [0, mĎ â k], we have  w |=V Ď  iff  there is an i â¤ nĎ such that  (a) w = xi and Ď â ti , or  (b) w â Xti and Ď â t for some t â Ti .  It is an immediate consequence that 0 |=V Ď.  â  We now come to the proof of Theorem 5 with FVA. Again,  the first step is to show that if Ď is satisfiable under FVA,  then it is satisfiable in a homogeneous model (this time with  FVA) in which only polynomially many types are realized:  Lemma 8. Suppose Ď is satisfiable with FVA. Then there  exists a sequence z0 , . . . , zrĎ in such that 0 = z0 < z1 <  Âˇ Âˇ Âˇ < zrĎ = mĎ , and a valuation V such that  , V, 0 |=  Ď and  Ă  Ă  â˘ |{t(w) | 0 â¤ w â¤ mĎ }| â¤ rĎ ;  â˘ for all n with 0 â¤ n < rĎ , all Ď â sub(Ď), and all  zn < w < w < zn+1 , w |=V Ď iff w |=V Ď.  Ă  Proof. Consider a model M =  , V  with FVA satisfying  Ď in 0. First, construct a sequence 0 = y0 < y1 < Âˇ Âˇ Âˇ <  yk = mĎ , k â¤ 2|Ď|2 + |Ď|, as in Lemma 6. Then the  sequence x0 , . . . , xnĎ is obtained by arranging the elements  of the set  {y0 , . . . , yk } âŞ  {yi + j | yi + j < mĎ }  i<k  1â¤j<mĎ  âŞ  {yi â j | yi â j > 0}  iâ¤k  1â¤j<mĎ  in ascending order according to < (where we possibly have  to add new xi to obtain a sequence of length nĎ + 1). Let  Ď = min{xi+1 â xi | 0 â¤ i < nĎ },  and set, for i < nĎ , Ďi =  1  |Ď|i+1  Ă Ď. The sequence  0 = z0 < z1 < Âˇ Âˇ Âˇ < zrĎ = mĎ  is obtained by adding to the sequence x0 , . . . , xnĎ the  points  j  yij = xi +  Ă Ďi ,  |Ď|  for all i < nĎ and j â¤ |Ď|. For i < nĎ , denote by tâi the  type t which is realized in some interval of the form (xi , y).  Note that such an interval exists since we are in a model  with FVA. Also, denote by t+i the type which is realized in  some interval of the form (y, xi+1 ). Now, for i < nĎ , take  for any âŚIF Ď â sub(Ď) such that there exists w â (xi , xi+1 )  with Ď â t(w) such a type t(w) and denote the collection of  selected types plus the types tâi and t+i by Ti . Notice that  |Ti | â¤ |Ď|. Let ti0 , . . . , ti|Ď|â1 be an ordering of the types in  Ti such that ti0 = tâi (if Ti has cardinality < |Ď|, then take  some t from Ti more than once in this ordering.) Define a  valuation V by setting, for every propositional variable p,  V(p) = {xi | i â¤ nĎ , xi |=V p}  {(yij , yij+1 ] | p â tij }  âŞ  i<nĎ ,j<|Ď|  |Ď|  âŞ  i<nĎ  {(yi , xi+1 ) | p â t+i }.  We show that V is as required. To this end, it is sufficient  to show by induction that, for each k â¤ mĎ , every Ď â  [0,1]  sub(Ď) in which the number of nestings of âŚF does not  exceed k, and all w â [0, mĎ â k]:  w |=V Ď â there is an i â¤ nĎ such that  (a) w = xi and xi |=V Ď, or  (b) w â (yi , yi+1 ] and Ď â ti for  some  < |Ď|, or  |Ď|  (c) w â (yi , xi+1 ) and Ď â t+i .  Proof. Let k, Ď, and w be as above. The proof is by induction on the structure of Ď. The cases for propositional  variables, ÂŹ, and â§ are left to the reader. Consider the case  [0,1]  for âŚF .  [0,1]  âââ: Suppose w |=V âŚF Ď. Then there is a w â    w + [0, 1] such that w |=V Ď. Similarly to the previous  proof distinguish four cases. Here only the most intricate  case is considered; the other cases are left to the reader and  can also be found in [6]:  â˘ w â (xi , xi+1 ) for some i < nĎ , and w â (xj , xj+1 )  for some j âĽ i. If w â (yj , yj+1 ] for some  < |Ď|,  then the induction hypothesis in (b) yields Ď â tj .  |Ď|  Otherwise, i.e., if w â (yj , xj+1 ), Ď â t+j by the  induction hypothesis in (c). Since tj , t+j â Tj , it follows by definition of Tj that there is a w â (xj , xj+1 )  such that w |=V Ď. Note that there is an i > i + 1  such that xi = xi+1 + 1. But then xj+1 â¤ xi ; otherwise xj âĽ xi and thus w â w > 1 contradicting  w â w+[0, 1]. Thus there is a v â (xi , xi+1 ) such that  [0,1]  w â v â¤ 1. By the semantics, v |=V âŚF Ď. Then it  follows by definition of the sequence x0 , . . . , xnĎ that  [0,1]  v  |=V âŚF Ď for all v  â (xi , xi+1 ). Therefore,  [0,1]  [0,1]  âŚF Ď â t for any t â Ti . Hence âŚF Ď â ti if  [0,1]  w â (yi , yi+1 ] for some  < |Ď|, and âŚF Ď â t+i if  |Ď|  w â (yi , xi+1 ).  âââ: Here only Case (b) is considered; the cases (a) and  (c) are left to the reader and can also be found in [6]. Let  [0,1]  i â¤ nĎ such that (b) w â (yi , yi+1 ] and âŚF Ď â ti for  some  < |Ď|. By definition of Ti , there is a w â (xi , xi+1 )  [0,1]  such that w |=V âŚF Ď. Then it follows by definition of  [0,1]  x0 , . . . , xnĎ that w |=V âŚF Ď for any w â (xi , xi+1 ).  [0,1]  In particular, w |=V âŚF Ď. Then v |=V Ď for some  v â w + [0, 1] by the semantics. Distinguish three cases:  â˘ v = xj for some j > i. The induction hypothesis in  (a) yields v |=V Ď. Since v â w â¤ 1, it follows by the  [0,1]  semantics that w |=V âŚF Ď.  â˘ v â (xi , xi+1 ). By definition of Ti , there is a t â  Ti such that Ď â t. Distinguish two subcases: First,  suppose that Ď â ti for some  âĽ , or Ď â t+i .  The induction hypothesis in (b) or (c) yields v  |=V      |Ď|  Ď for all v  â (yj , yj +1 ], or all v  â (yi , xi+1 ),    respectively. Then there is such a v such that v  âw <  [0,1]  1. Hence w |=V âŚF Ď.  Second, suppose there is no  âĽ  such that Ď â ti ,  and Ď â  / t+i . Note that this implies  > 0. Since  +i  Ďâ  / t , there is an interval of the form (y, xi+1 ) such  that y  |=V Ď for all y  â (y, xi+1 ). Take such a  [0,1]  y  . Since w |=V âŚF Ď, it follows by definition of  [0,1]  x0 , . . . , xnĎ that y  |=V âŚF Ď. Then there is a v  â  y  + [0, 1] such that v  |=V Ď and v  âĽ xi+1 . By  definition of x0 , . . . , xnĎ , there is an i such that xi =  xi + 1. Consider only the case where v  â (xj , xj+1 )  where j = i ; the other cases are straightforward. Note  that there is no such j > i . For suppose otherwise, it  holds that xi + 1 < xj < xi+1 + 1. By definition  of x0 , . . . , xnĎ , there is a j  such that xj  = xj â 1.  Thus xi < xj  < xi+1 ; a contradiction. Therefore  j = i , i.e., xj = xi + 1. By definition of Tj , there  is an  < |Ď| such that tj â Tj and Ď â tj . Then  the induction hypothesis in (b) yields v  |=V Ď for all      v  â (yj , yj +1 ]. Take such a v  . Since  > 0 and  Ďi  by definition of Ďj , it holds that yi + 1 âĽ  Ďj â¤ |Ď|    xj + Ďj . Then yj +1 â  [0,1]  Hence w |=V âŚF Ď.  yi    < 1 and thus v â w < 1.  â˘ v â (xj , xj+1 ) for some j > i. By definition of  x0 , . . . , xnĎ , there is an i such that xi = xi + 1.  Consider only the case where j = i ; the other cases  are straightforward. Note that there is no such j > i .  For suppose otherwise, it holds that xi + 1 < xj <  xi+1 + 1. By definition of x0 , . . . , xnĎ , there is a j   such that xj  = xj â 1. Thus xi < xj  < xi+1 ; a  contradiction.  Distinguish three subcases:  â  = 0 and w |=V Ď for some w with xi <  w â¤ xj . Then it is easy to see that there is a  v  âĽ w such that v  |=V Ď and v  â w â¤ 1.  [0,1]  Hence w |=V âŚF Ď.  â  = 0 and w |=V Ď for all w with xi < w â¤  [0,1]  xj . Since w |=V âŚF Ď, it follows by definition  [0,1]  of x0 , . . . , xnĎ that w |=V âŚF Ď for all w    with xi < w < w. Take such a w . Then there  is a v  â w + [0, 1] such that v  |=V Ď and  v  > xj . This implies that Ď â tâj = tj0 . Then  the induction hypothesis in (b) yields v  |=V Ď  for all v  â (yj0 , yj1 ]. Clearly, there is such a v   [0,1]  such that w â v  â¤ 1. Hence w |=V âŚF  Ď.  â 1 â¤  < |Ď|. By definition of Tj , there is an  <  |Ď| such that tj â Tj and Ď â tj . The induction  hypothesis in (b) yields v  |=V Ď for all v  â      Ďi  by  (yj , yj +1 ]. Take such a v  . Since Ďj â¤ |Ď|    definition of Ďj , it holds that yi + 1 âĽ xj + Ďj  [0,1]  and thus v  â w < 1. Hence w |=V âŚF Ď.  â  Using Lemma 8, one can now modify the decision procedure for satisfiability without FVA to obtain a decision  procedure running in nondeterministic polynomial time for  satisfiability with FVA. The crucial step is to determine a set  of rational linear inequalities which represent the truth conditions in models of the form described in Lemma 8. We  leave this exercise to the reader.  Acknowledgements.  Work on this paper was supported by the U.K. EPSRC research grants GR/S63182/01,  GR/S61966/01 and GR/S62727/01. The work reported here  was partly carried out while the first author was visiting the  University of Liverpool on a DAAD grant.  References  [1] R. Alur, T. Feder, and T. Henzinger. The benefits of relaxing punctuality. Journal of the ACM, 43:116â146,  1996.  [2] R. Alur and T. Henzinger. Logics and models of real  time: a survey. In Real Time: Theory and Practice,  Lecture Notes in Computer Science, pages 74â106,  Berlin, 1992. Springer.  [3] R. Alur and T. Henzinger. A really temporal logic.  Journal of the ACM, 41:181â204, 1994.  [4] E. Emerson, A. Mok, A. Sistla, and J. Srinivasan.  Quantitative temporal reasoning. Real-Time Systems,  4:331 â 352, 1992.  [5] Y. Hirshfeld and A. Rabinovich. Logics for real time:  Decidability and complexity. Fundamenta Informaticae, 62:1â28, 2004.  [6] C. Lutz, D. Walther, and F. Wolter. Quantitative  temporal logics: PSpace and below. LTCS-Report  05-03, Technical University Dresden, 2005. see  http://lat.inf.tu-dresden.de/research/reports.html.  [7] M. Reynolds. The complexity of the temporal logic  over the reals. manuscript.  [8] P. Schobbens, J. Raskin, and T. Henzinger. Axioms  for real-time logics. Theoretical Computer Science,  274:151â182, 2002.  [9] A. Sistla and E. Clarke. The complexity of propositional linear temporal logics. Journal of the Association for Computing Machinery, 32:733â749, 1985.  [10] F. Wolter. Tense logic without tense operators. Mathematical Logic Quarterly, pages 145â171, 1996. 