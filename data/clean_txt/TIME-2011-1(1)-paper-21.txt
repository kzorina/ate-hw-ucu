2011 Eighteenth International Symposium on Temporal Representation and Reasoning  Consistency of qualitative constraint networks from tree decompositions  Jean-FranĂ§ois Condotta and Dominique DâAlmeida  UniversitĂŠ Lille-Nord de France, Artois CRIL-CNRS, UMR 8188  Rue de lâuniversitĂŠ, SP 16, F62307 Lens  {condotta,dalmeida}@cril.fr  approaches can be used.  AbstractâA common way to decide the consistency problem  of a qualitative constraint network (QCN) is to encode it as a  boolean formula in order to beneďŹt from the efďŹciency of SAT  solvers. In recent works, a decomposition method of QCNs have  been proposed to reduce the amount of boolean formulae. In  this paper, we ďŹrst show that the decompositions used can be  expressed by particular tree decompositions. Furthermore, for  some classes of relations, we prove that the consistency problem  of a QCN can be decided by applying the method of the closure  by weak composition on the clusters of a tree decomposition.  This result allows us to extend the approach recently proposed  to tree decompositions of QCNs.  The ďŹrst, introduced by Nebel [7], consists in a synchronous backtracking algorithm by maintaining a local  consistency. This algorithm exploits certain tractable classes  of relations with multi-valued assignments and the weak  composition closure allowing to obtain a local consistency  close to path-consistency. At each step during search, a  constraint relation is split into sub-relations belonging to  the tractable class. The constraint is iteratively replaced by  each sub-relation. This cutting allows us to decrease the  branching factor during the search. Most of the QCN solvers  exploit this solving method, in particular GQRâ [8] which  is currently the most efďŹcient solver.  Keywords-Temporal qualitative constraints ; Consistency  problem ; Tree decomposition  I. I NTRODUCTION  The second approach [9], [10] consists in encoding the  consistency problem of QCNs as boolean formulae in order  to beneďŹt from the efďŹciency of SAT solvers. However, the  counter-part of this approach is the large amount of the  boolean formulae obtained. Recently, in order to overcome  this drawback for QCNs of the Interval Algebra, Li et  al. [11] proposed a method of decomposition allowing to  discard some constraints of the QCN. This method splits  recursively the QCN considered in two equivalent subQCNs. Each constraint of the initial QCN which is absent  from one of the two QCNs is considered as useless to decide  the consistency, and is not considered in the encoding. The  amount of the boolean formulae is greatly reduced compared  to the full encoding, and the experimental results show an  improvement in term of solving time.  Reasoning about temporal or spatial knowledge is a major  task in many domains of ArtiďŹcial Intelligence, such as  Geographic Information System (GIS), natural language processing, temporal/spatial scheduling, and so on. Qualitative  reasoning is a way to express and process the qualitative  aspect of knowledge about temporal or spatial entities. A  qualitative calculus considers a domain from temporal or  spatial entities and a ďŹnite set of base relations over these  entities. Each base relation symbolizes a relative position  between the entities, and is a factoring for conďŹgurations  given as numeric information. These previous decades, many  qualitative calculi have been studied. The Interval Algebra  [1] represents temporal entities by intervals and considers  thirteen base relations describing each possible relative position between two temporal entities (see Figure 1). Many  qualitative calculi for temporal knowledge are derived from  the Interval Algebra [2], [3], [4]. In spatial reasoning,  the well-known qualitative calculus RCC [5], [6] is quite  possibly the most studied. RCC is based on eight base  relations between entities deďŹned over all regions of a  topological space. In the qualitative calculi frameworks, the  set of temporal or spatial information may be represented  by some speciďŹc constraint networks called qualitative constraint networks (QCNs). In a QCN, each variable stands for  a temporal or spatial entity and each constraint restricts the  possible conďŹgurations between entities by using a set of  base relations. Given a QCN, the main decision problem is  the consistency problem. In the general case, this problem  is NP-complete. To solve it, we can cite two kinds of  1530-1311/11 $26.00 ÂŠ 2011 IEEE  DOI 10.1109/TIME.2011.22  In this paper, we deďŹne particular decompositions called  RecPart decompositions. These speciďŹc decompositions formalize the decompositions of QCNs used by Li et al in  their process of SAT encoding. Then, we show that the  RecPart decompositions can be equivalently deďŹned as tree  decompositions [12], widely studied in the framework of  ďŹnite CSPs. Moreover, we study the consistency problem for  the QCN through the tree decompositions. In particular, we  show that, given a tree decomposition for a QCN deďŹned  over a tractable class of relations, the weak composition  closure applied on each cluster is sufďŹcient to decide the  consistency of the QCN. Finally, by exploiting this result  we propose to decide the consistency of QCNs by using a  tractable class of relations and a tree decomposition in the  framework of boolean formula encodings.  149    with a, b â B, r  s = aâr,bâs {a  b}, with r, s â 2B .  The relation r  s is also deďŹned as the strongest relation in  2B which contains the usual composition r âŚ s = {(x, y) â  DĂ D : âx, y, z â D with x a z, z b y and x c y}. For some  qualitative calculi, r âŚ s and r  s are equivalent.  A class of relations C is a subset of 2B which contains the  relation Î¨, all of the singleton relations of 2B , and which is  closed under converse, intersection and weak composition.  Given r â 2B and a class C, the smallest relation of C which  contains r is denoted by rC and is called the closure of  r in C. In IA, let us consider the relation {p, m} â 2B  between two entities X and Y . X {p, m} Y means that  â1  X precedes or meets Y . The converse relation {p, m} =  â1  â1  {p , m } = {pi, mi} expresses the relation between Y  and X, so Y is preceded or is met by X. Finally, let us  introduce Y {m, s, eq} Z. We have some information about  the relations between X, Y and Y, Z, so we can deduce  information about the relation between X, Z by using the  weak composition. Since {p, m}  {m, s, eq} = {p, m}, we  have X {p, m} Z.  II. P RELIMINARY NOTIONS ON QUALITATIVE CALCULI  A. Qualitative calculi  A qualitative calculus considers a ďŹnite set of relations B,  called base relations, over an inďŹnite domain D representing  the temporal or spatial entities. In our study, we focus on  binary relations (a large part of qualitative calculi considers  this kind of base relations). Each base relation of B represents a certain relative position between spatial or temporal  entities. They are Jointly Exhaustive and Pairwise Disjoint  (JEPD), i.e. each element (x, y) â D Ă D belongs to one  and only one a â B. The set B has some properties [13] :  (1) B is a partition of D Ă D, (2) B contains the identity  relation id and, (3) B is closed by converse, i.e. the converse  of an base relation in B is also in B. As an illustration,  the Interval Algebra (IA), also known as Allenâs calculus  [1], considers intervals of the line to represent the temporal  entities. The domain D is deďŹned by D = {(xâ , x+ ) â  Q Ă Q | xâ < x+ }. The base relations correspond to the  set B = {eq, p, pi, m, mi, o, oi, s, si, d, di, f, f i}. Each of  these base relations symbolizes a relative position between  two temporal intervals, which is illustrated in Figure 1.  A complex relation, also called relation, for a qualitative  calculus is an union of base relations. It is customary to  represent a relation by the set of the base relations which  compose it. Hence, in the sequel we make no distinction  between the set of relations and the set 2B which will represent the set of relations of a qualitative calculus based on the  set of base relations B. In the Interval Algebra, the relation  r = p âŞ mi âŞ eq will be represented by the set {p, mi, eq}.  The usual set-theoretic operations union (âŞ), intersection (âŠ)  B  . For a relation r â 2B ,  and converse (Âˇâ1 ) are deďŹned over 2  â1  the converse is deďŹned as r  = {aâ1 |a â r}. Among  B  the relations of 2 , Î¨ denotes the relation that contains all  the base relations of B. The set 2B is also equipped with  the weak composition operation, denoted by , deďŹned as:  a  b = {c â B : âx, y, z â D with x a z, z b y and x c y},  B. Qualitative Constraint Networks  A Qualitative Constraint Network (QCN) consists of a ďŹnite  set of m variables V = {v1 , . . . , vm } which represent the  spatial or temporal entities, and a map C from V Ă V to 2B  such that C(vi , vi ) â {Id} for each vi â V , with Id the base  relation corresponding to the identity relation over D, and  â1  C(vi , vj ) = C(vj , vi )  for all vi , vj â V . In the rest of  this paper, we will also denote C(vi , vj ) by N [vi , vj ]. The  ďŹgure 2 illustrates a QCN N of the Interval Algebra. In this  ďŹgure, a variable is represented by a node, and a constraint  by an arc labelled with the associated relation. Note that, for  simplicity, there is no arc going from vi to vj when either  there is already an arc going from vj to vi or i = j.  Given a QCN N = (V, C), a partial instantiation of N  on V  â V is a map s from V  to D. A partial solution  on N on V  â V is a partial instantiation on V  such  that (s(vi ), s(vj )) satisďŹes C(vi , vj ) for all vi , vj â V  ,  i.e. there exists a base relation b â C(vi , vj ) such that  (s(vi ), s(vj )) â b for all vi , vj â V  . A solution of N is a  partial solution of N on V . N is consistent if, and only if,  Relation Symbol Converse Illustration  X  precedes  p  pi  Y  X  meets  m  mi  Y  {o, mi, f i}  X  overlaps  o  oi  starts  s  si  v8  Y  X  {p, pi, di}  Y  {eq, p, mi, f i}  X  during  d  di  Y  X  finishes  f  equals  eq  Figure 1.  fi  eq  Y  v10  X  Y  {eq, m, s, si}  v6  {oi, mi}  v9  {oi, m, f i}  {eq, p, f i}  {di, o, m}  Figure 2.  150  {o, oi, mi, f i}  {eq, p, o, f i}  v1  v0  {m, f }  {o, oi, mi, f } {o, mi, f i}  v2  The base relations of the Interval Algebra.  v7  {p, mi, s}  v3  v4  {pi, di, o}  v5  A QCN N = (V, C) of the Interval Algebra.  there exists a solution of N . N is trivially inconsistent when  there exist two variables v, v  â V such that N [v, v  ] = â.  N is globally consistent if, and only if, each partial solution  of N can be extended to a solution of N . The projection  of the QCN N to V  with V  â V , denoted by NV  , is  the QCN (V  , Cproj ) with Cproj the restriction of C to the  set V  . A sub-QCN N  of N is a QCN (V, C  ) such that  C  (vi , vj ) â C(vi , vj ), for all vi , vj â V . Let N 1 and N 2  be two QCNs deďŹned respectively on the sets of variables  V 1 and V 2 , with for each pair of variables v, v  â V 1 âŠ V 2 ,  N 1 [v, v  ] = N 2 [v, v  ]. We denote by N 1 âŞ N 2 the unique  QCN N deďŹned on V 1 âŞ V 2 such that N [v, v  ] = N 1 [v, v  ]  for all v, v  â V 1 , N [v, v  ] = N 2 [v, v  ] for all v, v  â V 2 ,  N [v, v  ] = Î¨ for all v â V 2 \ V 1 and v  â V 1 \ V 2 .  A QCN N = (V, C) is -consistent or closed by weak  composition if, and only if, C(vi , vj ) â C(vi , vk )C(vk , vj )  for all vi , vj , vk â V . The weak composition closure of the  QCN N , denoted by (N ) is the largest (for â) -consistent  sub-QCN of N . This closure may be obtained by iterating  the operation C(vi , vj ) â C(vi , vj )âŠ(C(vi , vk )C(vk , vj ))  for all vi , vj , vk â V until a ďŹxpoint is reached. The worstcase time-complexity of this method is O(m3 ), with m the  number of variables. For some classes of relations, such as  the set of the ORD-Horn relations or the set of the convex  relations [14], [15] of IA, the consistency problem of a  QCN can be decided by enforcing -consistency. Hence,  a -consistent ORD-Horn QCN with no empty constraint  is a consistent QCN. The class of convex relations admits  a stronger property : each -consistent convex QCN non  trivially inconsistent is globally consistent [16]. We conclude  this section with some deďŹnitions about trees. Given a rooted  tree (a connected acyclic graph with a root) T = (X, F ) and  a node Xi â X, we denote by desc(Xi ) (resp. asc(Xi )) the  set of the descendant nodes (resp. the ancestor nodes) of  Xi (note that Xi belongs to desc(Xi ) and asc(Xi )). Given  X  â X a non-empty subset of nodes, lca(X  ) denote the  node of T which is the lowest common ancestor of the nodes  belonging to X  . The set leaves(T ) corresponds the set of  the leaf nodes of T . Finally, given a Xi â X, TXi denotes  the sub-tree of T rooted in Xi .  X0 = {v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10}  X1 = {v0, v1, v2, v3, v4, v5, v6, v7}  X2 = {v0, v6, v8, v9, v10}  X3 = {v0, v1, v2, v3, v6, v7} X4 = {v1, v4, v5}  X7 = {v0, v1, v2, v6, v7}  X5 = {v0, v6, v8, v9} X6 = {v8, v9, v10}  X8 = {v2, v3}  Figure 3(a). A RecPart T = (X, F ) decomposition of N .  X0 = {v0, v6}  X1 = {v1}  X2 = {v8, v9}  X3 = {v2}  X4 = {v1, v4, v5}  X7 = {v0 , v1, v2, v6, v7}  X5 = {v0, v6, v8, v9}  X6 = {v8, v9, v10}  X8 = {v2, v3}  Figure 3(b). A tree decomposition of N corresponding to T .  within the framework of the discrete CSPs we deďŹne a tree  decomposition of a QCN as a decomposition of its constraint  graph:  DeďŹnition 1: Let N = (V, C) be a QCN and G(N ) =  (V, E) be its constraint graph. A tree decomposition of N  is a tree T = (X = {X0 , . . . , Xn }, F ) with n a positive  integer, where X is a family of subsets of variables of V  (Xi â V ), such that :    (1) {Xi â X} = V ;  (2) â(v, v  ) â E, there exists Xi â X with v, v  â Xi ;  (3) for all Xi , Xj , Xk â X, if Xj is on the unique path  between Xi and Xk then Xi âŠ Xk â Xj .  Given a tree decomposition T = (X = {X0 , . . . , Xn }, F )  of a QCN, the treewidth of T is equal to max{|Xi | â 1 :  Xi â X}. Furthermore, every set of variables Xi is called  a cluster. In Figure 3(b), a tree decomposition of the QCN  N of Figure 2 is represented.  III. D ECOMPOSITIONS OF QCNS  A. Tree decompositions  B. The RecPart decompositions  The relation Î¨ consists of all the possible base relations of  B and is satisďŹed by any pair of elements of the domain  D. A constraint between two variables of a QCN deďŹned  by the relation Î¨ speciďŹes that locally there is no constraint  concerning the relative position of both entities represented.  So, in a natural way, we deďŹne the graph of constraints of a  QCN N = (V, C), by the undirected graph G(N ) = (V, E)  with (v, v  ) â E if, and only if, N [v, v  ] = Î¨ and v = v  .  In the sequel we suppose that given a QCN N , G(N ) is  connected. In the contrary case, N may be trivially split  in two independent QCNs without common variables. As  Recently, Li et al [11] proposed a method allowing to  translate QCNs of the Interval Algebra into boolean satisďŹability problem (SAT instances). This method recursively  decomposes at each step a QCN N = (V, C) into two QCNs  N 1 and N 2 such that N = N 1 âŞ N 2 . The constraints  deďŹned by the relation Î¨ in the QCN N not belonging to  N 1 and N 2 are characterized as not necessary in the search  of a solution of the initial QCN and thus not translated.  The advantage of such a translation is that the obtained  SAT instance is of smaller size than an instance stemming  from a complete translation. Taking inspiration from this  151  we can assert that N [v, v  ] = Î¨ and that (v, v  ) is not  an edge of G(N ). Moreover, we have previously assumed  that for every QCN N considered, G(N ) is connected.  Consequently, for all v â Xj and v  â Xk , there exists  a path of G(N ) between v and v  . Moreover this path  passes necessarily through two edges (v, v  ) and (v, v  )  with v  â V \ {Xj âŞ Xk } and v  â V \ {Xj âŞ Xk }. As  Xj âŞ Xk = Xi , we have v  â Xi . Let Xl be the nearest  common ancestor of Xi such that v  â Xl . Let Xm and  Xo be the two child nodes of Xl with Xm â asc(Xi ).  We have v  â Xm and v â Xm . Moreover, v  â Xo  since Xo âŞ Xm = Xl . We also know NXl = NXm âŞ NXo .  Consequently, we have N [v, v  ] = Î¨. We know that (v, v  )  is an edge of G(N ). There is a contradiction. We conclude  that Xj âŠ Xk = â.  (2) Let Xi , Xj , Xk â X with Xk = lca({Xi , Xj }).  Assume that Xk = Xi and Xk = Xj . We have necessarily  Xk â leaves(T ). Let us denote by Xl and Xm the two child  nodes of Xk . We have Xi â desc(Xl ) and Xj â desc(Xm )  or, Xi â desc(Xm ) and Xj â desc(Xl ). Hence, from  Proposition 1 (1), we have Xi â Xl and Xj â Xm  or, Xi â Xm and Xj â Xl . Consequently, we have  Xi âŠ Xj â Xm âŠ Xl . We conclude that Xi âŠ Xj â Xk .  (3) Let Xi â X. First, consider the case where  Xi â leaves(X). By deďŹnition, Xi = Xi , hence the  property is satisďŹed. Now, assume that Xi â leaves(X)  and let Xk and Xl be the two child nodes of Xi . We have  Xk âŠ Xl = Xi = â. Let v â Xi , we have v â Xi . From  Proposition 1 (4), there exists Xj â leaves(T ) âŠ desc(Xi )  such that v â Xj . From the property (2) of DeďŹnition 2,    we have Xk âŠ Xl â Xj since (Xk âŠ Xl ) âŠ Xj = â.  method, we deďŹne particular decompositions of QCNs,  called RecPart decompositions (for recursive partitioning),  in the following way:  DeďŹnition 2: Let N be a QCN = (V, C). A RecPart  decomposition of N is a rooted tree T = (X =  {X0 , . . . , Xn }, F ), with n a positive integer, where X is  a family of subsets of V (Xi â V ) and Xr = V with Xr  the root of T . Moreover, each node of T has two or no child  nodes and, given Xi , Xj , Xk â X such that Xj and Xk are  child nodes of Xi , T must satisfy the following properties :  (1) NXi = NXj âŞ NXk , Xj \ Xk = â and Xk \ Xj = â.  (2) For every Xm â desc(Xi ), if Xm âŠ (Xj âŠ Xk ) = â  then (Xj âŠ Xk ) â Xm .  In Figure 3(a) is represented a RecPart decomposition of  the QCN N illustrated in Figure 2. We deďŹne the treewidth  of a RecPart decomposition T = (X, F ) by max{|Xi | â 1 :  Xi â leaves(T )}. Note that from the property (1) of the  previous deďŹnition, Xi = â for every Xi â X. A RecPart  decomposition satisďŹes the following properties :  Proposition 1: Let T = (X = {X0 , . . . , Xn }, F ) be a  RecPart decomposition of a QCN N = (V, C). For each  Xi â X, we have :  (1) For each Xj â X such that i = j, Xi = Xj and  moreover, if Xj â desc(Xi ) then Xj â Xi ;  (2) TXi is aRecPart decomposition of NXi ;  (3) NXi = {NXj : Xj â leaves(TXi )} ;  (4) Xi = {Xj â leaves(TXi )}.  The proofs of these properties are omitted, they can be  directly established from DeďŹnition 2. Note that from the  previous property (1), we have for all Xi , Xj â X, the sets  Xi and Xj which are distinct sets if, and only if, i = j.  Hence, for each Xi â X, the set of variables belonging to Xi  characterises one and only one node of T . Let T = (X, F )  be a RecPart decomposition of a QCN N = (V, C). Given  Xi â X, Xi will denote the set Xi in the case where  Xi â leaves(T ). In the case where Xi â leaves(T ), Xi  is deďŹned by the set Xj âŠ Xk with Xj and Xk the two  child nodes of Xi . Note that Xi â Xi since Xj â Xi and  Xk â Xi . Moreover, we have the following properties :  Proposition 2: Let T = (X = {X0 , . . . , Xn }, F ) be a  RecPart decomposition of a QCN N = (V, C).  (1) For each Xi â X, Xi = â.  (2) Given Xi , Xj , Xk â X with Xk = lca({Xi , Xj }), if  Xk = Xi and Xk = Xj then Xi âŠ Xj â Xk .  (3) For each Xi â X, there exists Xj â leaves(X) such  that Xi â Xj .  Proof.  (1) Consider the case where Xi â leaves(T ) (for the case  where Xi â leaves(T ) the property is trivially satisďŹed  since Xi = Xi and Xi = â). Let Xi , Xj , Xk â X such  that Xi is the parent node of Xj and Xk . Suppose by  contradiction that Xj âŠ Xk = â. From DeďŹnition 2, we have  NXi = NXj âŞ NXk . Hence, for all v â Xj and v  â Xk ,  IV. F ROM RecPart DECOMPOSITIONS TO TREE  DECOMPOSITIONS  In this section, we are going to show that from a RecPart  decomposition T of a QCN we can deďŹne a tree decomposition T  with same treewidth and considering the  same clusters of variables (more exactly the same binary  constraints). Before this, we introduce a new notation : given  v8  {o}  {di} {o, d, s}  {p, o, m}  v9  {f i}  {p}  v10  {f i}  v6  {m}  v7  {o, f i}  {oi}  {o, f i}  {eq, o, f i}  {f }  v1  v0  {o}  {o, m}  v2  {o, mi, f i}  {s}  v3  {oi}  v4  {pi, oi, mi}  {di}  v5  {eq, d, di, o, oi, s, si, f, f i}  Figure 4.  152  N  a ORD-Horn   âconsistent  X  sub-QCN of N .  0 the property is trivially satisďŹed. Now, assume that the  property is satisďŹed for each path with a length l âĽ 0 and  let us show in an inductive way that the property holds  for each path between Xi and Xk of length l + 1. First,  assume that Xi â desc(Xk ) and Xk â desc(Xi ) w.r.t. T .  By examining the deďŹnition 3 we notice that for T a path  between Xi and Xk necessarily passes through Xo with  Xo = lca({Xi , Xk }). From Proposition 2 (2) we have  Xi âŠ Xk â Xo . Consequently, v â Xo . By considering the  two paths Xi , . . . , Xo and Xo , . . . , Xk which have a length  lower or equal to l, and by using the induction hypothesis,  we can assert that the nodes on the path Xi , . . . , Xo and  the nodes on the path Xo , . . . , Xk contain v since Xi , Xo  and Xk contain v. Now, assume that Xi â desc(Xk ) in T  (the case Xk â desc(Xi ) can be handled in a similar way).  The case Xi = Xk is a trivial case, assume that Xi = Xk .  We have Xi â desc(Xo ) with Xo one of the child nodes of  Xk in T . By examining DeďŹnition 3 we remark that for T ,  a path between Xk and Xi passes necessarily through Xm    with Xm = lca(X  k Xo ). From Proposition 3 (2), we know  that Xk â Xm . It results that v â Xm . By considering the  paths Xi , . . . , Xm and Xm , . . . , Xk which have a length  lower or equal to l, and by using the induction hypothesis,  we can assert that the nodes of the path Xi , . . . , Xm and  the nodes of the path Xm , . . . , Xk contain v since Xi , Xm  and Xk contain v.    Xi , Xj â X with Xj child node of Xi , X  i Xj will denote  the set {Xk : Xk â desc(Xj ) and Xi â Xk }. Concerning    X  i Xj , we have the following properties :  Proposition 3: Let T = (X, F ) be a RecPart decomposition of a QCN N = (V, C) and let Xi , Xj â X with    Xj a child node of Xi . We have : (1) X  i Xj = â, (2)      lca(Xi Xj ) â Xi Xj .  Proof.  (1) We know that Xi = â (Proposition 2 (1)), hence  there exists v â Xi . By deďŹnition of Xi , we know  that v â Xj . From Proposition 1 (4), there exists  Xk â leaves(T ) âŠ desc(Xj ) such that v â Xk . From the  property (3) of DeďŹnition 2, we can assert that Xi â Xk .      Hence, Xk â X  i Xj and we can conclude that Xi Xj = â.      (2) Let Xl = lca(Xi Xj ). There exists Xk , Xm â X  i Xj  such that Xl = lca({Xk , Xm }). In the case where Xl = Xk  or Xl = Xm the property is trivially satisďŹed. In the  case where Xl = Xk and Xl = Xm , from Proposition  2 (2) we have Xk âŠ Xm â Xl . As Xi â Xk and  Xi â Xm we can assert that Xi â Xl . Moreover, since  Xl = lca({Xk , Xm }), Xk â desc(Xj ) and Xm â desc(Xj ),    we have Xl â desc(Xj ). We conclude that Xl â X  i Xj .   Now, we deďŹne from a RecPart decomposition T of  a QCN N a tree denoted by T . We will prove in the  sequel that this tree is a tree decomposition of the QCN N  satisfying some particular properties.  DeďŹnition 3: Let N be a QCN and T = (X =  {X0 , . . . , Xn }, F ) a tree decomposition of N . From T and  an element Xi â X, we inductively deďŹne a rooted tree  T Xi = (XXi , FXi ) with root Xi in the following way :  â˘ Base case : Xi â leaves(T ), T Xi = ({Xi }, â).  â˘ Inductive case : Xi â leaves(T ). By considering T , let    Xj and Xk the child nodes of Xi , Xl = lca(X  i Xj )    and Xm = lca(Xi Xk ). XXi and FXi are deďŹned by  XXi = XXj âŞ XXk âŞ {Xi }, FXi = FXj âŞ FXk âŞ  {(Xi , Xl ), (Xi , Xm )}.  T is deďŹned by the rooted tree T Xr with Xr the root of T .  Let us show that the tree T is a tree decomposition of the  QCN N for which T is a RecPart decomposition.  Proposition 4: Let N = (V, C) be a QCN and a RecPart  decomposition T = (X = {X0 , . . . , Xn }, F ). We have T =  (X = {X0 , . . . , Xn }, F ) which is a tree decomposition of  N such that for each Xi â X there exists Xj â leaves(T )  with Xi â Xj .  Proof. Properties (1) and (2) of the deďŹnition 1 arise from  the fact that for each Xi â leaves(X), Xi = Xi and  from Proposition 1. Now, let us prove that the property  (3) of DeďŹnition 1 is satisďŹed by T . Let Xi , Xj , Xk â X  with Xj on the unique path between Xi and Xk w.r.t. T .  We are going to show that if v â Xi and v â Xk then  v â Xj . If the length of the path between Xi and Xk is  The fact that for each Xi â X, there exists Xj â leaves(T )  such that Xi â Xj results from Proposition 2 (3).    V. T REE DECOMPOSITIONS AND CONSISTENCY OF QCNS  In this section we are going to show that to decide the  consistency of a QCN from one of its tree decomposition  we can leave aside some of its constraints. In particular,  we show that for some classes of relations, the closure by  weak composition restricted to constraints of the clusters  stemming from a tree decomposition is complete for the  consistency problem. First of all, we introduce a new local  consistency corresponding to the property of -consistency  restricted to some subsets of variables of a QCN:  DeďŹnition 4: Let N = (V, C) be a QCN and X =  {X0 , . . . , Xn } a family of subsets of V . N is X -consistent  if, and only if, for each Xi â X, the QCN NXi is a  -consistent QCN.  Given a QCN N = (V, C) and X = {X0 , . . . , Xn } a family  of subsets of V , we will denote by X (N ) the larger (for â)    X -consistent sub-QCN of N .  The following result extends the one of Li et al on atomic  networks. It concerns QCNs whose constraints are deďŹned  by relations stemming from a class C for which any QCN  closed by weak composition is globally consistent. As  illustration, we can consider the QCNs deďŹned by relations  belonging to the class of the convex relations of the Interval  Algebra which admits this property.  153  Theorem 1: Let N = (V, C) be a QCN deďŹned on a class  of relations C for which each QCN -consistent is globally  consistent, and let T = (X = {X0 , . . . , Xn }, F ) be a tree  decomposition of N . If N is a non trivially inconsistent and    X -consistent QCN then N is a consistent QCN.  Proof. We suppose without loss of generality that T has a  root. Let Xi â X and TXi = (XXi , FXi ) the sub-tree of  T . Given a partial instantiation s on V  with V  âŠ Xi â Xi  for each Xi â XXi and such that for each Xj â X with  Xj â V  , sXj is a solution of NXj . We are going to prove  the following property : s can   be extended to a partial  instantiation s on V  = V  âŞ {Xi â XXi } such that for  each Xj â X with Xj â V  , sXj is a solution of NXj .  We are going to prove this property in an inductive way on  the size of XXi .  â˘ Base case: |XXi | = 1. We have XXi = {Xi }. Since N  is a X -consistent QCN, we have the QCN NXi which is a  QCN -consistent and hence globally consistent. sV  âŠXi is a  partial solution of NXi which can be extended to a solution  s of NXi . We deďŹne by s the partial instantiation on  V  âŞ Xi in the following way : if v â V  then s (v) = s(v)  else s (v) = s (v). We have sXi which is a solution of  NXi and more generally sXk is a solution of NXk for each  Xk â X and Xk â V  âŞ Xi .  â˘ Inductive step: |XXi | > 1. We assume that the  property holds for each sub-tree TXj = (XXj , FXj ) with  |XXj | < |XXi |. As in the previous case, we extend s to  a partial instantiation s on V  âŞ Xi such that sXk is a  solution of NXk for each Xk â X and Xk â V  âŞ Xi . By  the induction hypothesis, this partial instantiation s can be  extended to the set of variables belonging to the descendant  nodes of Xi . Indeed, consider Xl a child node of Xi .  First, we remark that by denoting by TXl = (XXl , FXl )  the sub-tree of T , we have |XXl | < |XXi |. Moreover, as  T is a tree decomposition, we have for each Xm â XXl ,  Xm âŠ (V  âŞ Xi ) â Xl (from the property (3) of the  deďŹnition 1). Hence, the induction hypothesis can be  applied on TXl = (XXl , FXl ).  By applying the previous property on Xr the root of T ,  we know   that there exists an instantiation s on the set of  variables {Xi : Xi â X} such that sXi is a solution of  the QCN NXi for each Xi â X. First, from   the property (1)  of DeďŹnition 1 we can assert that V = {Xi : Xi â X}.  Hence, s is an instantiation on V . Moreover we can  show that s is a solution of N . Indeed, let v, v  â V , if  N [v, v  ] = Î¨ we have s(v) and s(v  ) which satisfy the  constraint N [v, v  ]. Now, assume that N [v, v  ] = Î¨. From  the property (2) of DeďŹnition 1, there exists Xi â X such  that v â Xi and v  â Xi . We know that s(v) and s(v  )  satisfy NXi [v, v  ]. As NXi [v, v  ] = N [v, v  ] we can assert  that s(v) and s(v  ) satisfy N [v, v  ]. We can conclude that  s is a solution of N    particular class of the ORD-Horn relations of the Interval  Algebra. In [15], Ligozat attributes a dimension (an  integer included between 0 and 2) to each base relations  of the Interval Algebra : the dimension of the base  relations p, pi, o, oi, d, di is 2, this one of the base relations  m, mi, s, si, f, f i is 1, and the dimension of eq is 0.  A partial solution of maximal dimension is a solution  satisfying for every pair of variables a base relation of  maximal dimension with regard to the dimensions of the  base relations belonging to the constraint. For illustration,  consider the QCN N  in Figure 4, a maximal instantiation  s of N  {v0 ,v1 ,v2 ,v6 ,v7 } is represented in Figure 5(b), the  atomic QCN corresponding to this solution is given in  Figure 5(a). For example, the base relation satisďŹed between  s(v0 ) and s(v1 ) is the base relation o of dimension 2, it is  a maximal dimension w.r.t. to the dimensions of the base  relations of the relation N  [v0 , v1 ] = {eq, o, f i}. Given a  QCN N closed by weak composition deďŹned by ORD-Horn  relations, in the general case N is not a globally consistent  QCN. Nevertheless we have a nearest property which is  satisďŹed : each partial solution of maximal dimension  of N can be extended to a maximal solution of N (see  Proposition 6 in [15]). From this property we can establish  the following result :  Theorem 2: Let N = (V, C) be a QCN deďŹned by  relations of the ORD-Horn class of the Interval Algebra and  let T = (X = {X0 , . . . , Xn }, F ) be a tree decomposition  of N . If N is a X -consistent QCN non trivially inconsistent  then N is consistent.  Proof. The proof is similar to the proof of Theorem  1 except that the manipulated partial instantiations are  maximal partial instantiations.    {m}  v6  {oi}  {oi}  v0  {o}  v7  {o}  {o}  {o}  v1  {o}  {o}  v2  Figure  5(a). An  N  {v0 ,v1 ,v2 ,v6 ,v7 }  s(v6)  {oi}  atomic  sub-QCN  of  s(v2)  s(v7)  s(v0)  s(v1)  Figure 5(b). A maximal solution of N  {v0 ,v1 ,v2 ,v6 ,v7 }  We are going to characterize a similar result for the  154  We proved in the previous section that given a QCN N and  a RecPart decomposition T = (X = {X0 , . . . , Xn }, F )  of this QCN we can deďŹne a tree decomposition  T  = (X  = {X0 , . . . , Xn }, F ) = T such that for  each Xi â X  there exists Xj â leaves(T ) such that  Xi â Xj . From this property and the previous theorems  we can establish the following properties :  Corollary 1: Let N = (V, C) be a QCN deďŹned on a  class of relations C and let T = (X = {X0 , . . . , Xn }, F ) a  RecPart decomposition of N .  â˘ If C is such that each -consistent QCN deďŹned on C  is globally consistent and if N is a leaves(T ) -consistent  QCN then N is consistent.  â˘ If C is the ORD-Horn class of the Interval Algebra and  if N is a leaves(T ) -consistent QCN then N is consistent.  100  80  %  60  40  20  (i,j) - PartRec decompositions  (i,j) - Tree decompositions LexBFS  (i,j,k) - PartRec decompositions  (i,j,k) - Tree decompositions LexBFS  0  4  6  8  16  14  12  10  Density of non trivial constraints  18  20  22  Figure 6(c). Percentages of pairs and triples of variables belonging to the  clusters  VI. F ROM QCNS TO BOOLEAN FORMULAE  1  To decide the consistency problem of QCNs, recent  studies [9], [10] propose to exploit the theoretical and  practical framework of the propositional logic, by using SAT  encodings. Given a QCN N = (V, C), a ďŹrst part of these  encodings allows to represent the possible base relations of  C(vi , vj ) for each pair of variables vi , vj â V . A second  part is deďŹned by a set of clauses allowing to the SAT  solver to enforce the property of -consistency during search.  Intuitively, these clauses represent the possible conďŹgurations for each triple of variables vi , vj , vk â V with regard  to the weak composition operation. Hence, a SAT instance  resulting of these encodings will be consistent if, and only  if, there exists a -consistent sub-QCN of N . The encoding  proposed in [9] leads to a sub-QCN deďŹned by singleton  relations whereas the approach proposed in [10] leads to a  convex sub-QCN.  From Theorem 1, we can restrict these encodings to the  constraints belonging to clusters of a tree decomposition  of N . For illustration, we consider two kinds of decompositions : RecPart decompositions obtained by a method  similar as in [11], and tree decompositions obtained from  triangulation of the constraint graphs of the QCNs by using  the lexBFS algorithm [17]. We have focused on QCNs of  the Interval Algebra, randomly generated by following the  model A(n, d, s) [7]. This model involves the generation  of QCNs according to three parameters: n the number of  variables, d the density of constraints not deďŹned by the  relation Î¨ (the average degree of the nodes in the constraint  graph) and s the average number of base relations in each  constraint. The results presented concern QCN instances  from series A(100, d, 6.5) for d varying from 4 to 24 with  a step of 0.25, for each point We generated 100 networks  for each serie.  In Figure 6(c) are given the percentages of pairs and  triples of variables belonging to clusters for each kind of tree  decompositions. Clearly, we can observe that the lexBFSbased tree decompositions discard much more constraints  0.8  Ratio  0.6  0.4  0.2  PartRec decompositions  Tree decompositions LexBFS  0  4  6  8  16  14  12  10  Density of non trivial constraints  18  20  22  Figure 6(d). Ratios of the size of the SAT instances by using tree decompositions to the size of the SAT instances by using the complete encoding.  than the RecPart decompositions. Remark that the less is the  density of non-trivial constraints, the more is the number of  discarded constraints. In Figure 6(d) are given the ratios of  the size of the SAT instances using tree decompositions to  the size of the SAT instances using the complete encoding.  The SAT encodings used are based on the SAT encoding  deďŹned in [10]. Unsurprisingly, the using of the LexBFSbased tree decompositions always performs the using of  RecPart decompositions.  Figure 6 shows the number of solved instances against  CPU time. The results are given for QCN instances with  the parameter d varying from 8 to 12, and Minisat 2.2  [18] was used to solve generated SAT instances. CPU time  is restricted to solving time, and QCN instances are not  preprocessed before encoding into SAT instances. As we  can see, the lexBFS-based tree decompositions allows to  improve the performance for solving SAT instances.  155  [6] J. Renz, âMaximal tractable fragments of the region connection calculus: a complete analysis,â in Proceedings of the 16th  international joint conference on ArtiďŹcal intelligence, ser.  IJCAI, vol. 1, 1999, pp. 448â454.  2000  1800  Number of solved instances  1600  1400  [7] B. Nebel, âSolving hard qualitative temporal reasoning problems: Evaluating the efďŹcienty of using the ORD-Horn class,â  in Proceedings of the 12th European Conference on ArtiďŹcial  Intelligence, ser. ECAI, 1996, pp. 38â42.  1200  1000  800  [8] Z. Gantner, M. Westphal, and S. WĂślďŹ, âGQR - a fast reasoner  for binary qualitative constraint calculi,â in Proceedings of  AAAIâ08 Workshop on Spatial and Temporal Reasoning,  2008.  600  400  LexBFS  RecPart  Raw  200  0  0  Figure 6.  200  400  600  CPU Time (s)  800  1000  [9] D. N. Pham, J. Thornton, and A. Sattar, âModelling and  solving temporal reasoning as propositional satisďŹability,â  ArtiďŹcial Intelligence, vol. 172, pp. 1752â1782, October 2008.  1200  Number of solved instances against CPU time.  [10] J.-F. Condotta and D. DâAlmeida, âQualitative constraints  representation for the time and space in SAT,â in Proceedings  of the 19th IEEE International Conference on Tools with  ArtiďŹcial Intelligence, ser. ICTAI, vol. 1, 2007, pp. 74â77.  VII. C ONCLUSION AND FUTURE WORKS  In this paper, we have introduced and studied the RecPart  decompositions. We proved that these decompositions are  equivalent to particular tree decompositions. Moreover, we  have studied the consistency problem of QCNs with regard  to tree decompositions. We proved that, for some tractable  classes of relations such as ORD-Horn class, we can decide  the consistency problem of a QCN by enforcing the consistency restricted to the constraints belonging to clusters  of a tree decomposition. In order to illustrate these results,  we have compared two kinds of decompositions : RecPart  decompositions and tree decompositions obtained from triangulation of the constraint graphs of QCNs by using the  lexBFS algorithm. A future work is to conduct extensive  experiments in order to compare more tree decompositions  into the framework of SAT encodings of QCNs.  [11] J. J. Li, J. Huang, and J. Renz, âA divide-and-conquer  approach for solving interval algebra networks,â in Proceedings of the 21st international jont conference on ArtiďŹcal  intelligence, ser. IJCAI, 2009, pp. 572â577.  [12] G. Gottlob, Z. MiklĂłs, and T. Schwentick, âGeneralized hypertree decompositions: NP-hardness and tractable variants,â  Journal of the ACM, vol. 56, pp. 30:1â30:32, September 2009.  [13] J. Renz and G. Ligozat, âWeak composition for qualitative  spatial and temporal reasoning,â in Proceedings of the 11th  International Conference on Principles and Practice of Constraint Programming, ser. CP, 2005, pp. 534â548.  R EFERENCES  [14] B. Nebel and H.-J. BĂźrckert, âReasoning about temporal  relations: a maximal tractable subclass of Allenâs interval  algebra,â Journal of the ACM, vol. 42, pp. 43â66, January  1995.  [1] J. F. Allen, âAn interval-based representation of temporal  knowledge,â in Proceedings of the 7th international joint  conference on ArtiďŹcial intelligence, ser. IJCAI, vol. 1, 1981,  pp. 221â226.  [15] G. Ligozat, âA new proof of tractability for ORD-Horn relations,â in Proceedings of the thirteenth national conference on  ArtiďŹcial intelligence, ser. AAAI, vol. 1, 1996, pp. 395â401.  [2] G. Ligozat, âOn generalized interval calculi,â in Proceedings  of the ninth National conference on ArtiďŹcial intelligence, ser.  AAAI, vol. 1, 1991, pp. 234â240.  [16] P. van Beek and R. Cohen, âExact and approximate reasoning  about temporal relations,â Computational Intelligence, vol. 6,  pp. 132â147, July 1990.  [3] R. A. Morris, W. D. Shoaff, and L. Khatib, âPath consistency  in a network of non-convex intervals,â in Proceedings of the  13th international joint conference on ArtiďŹcal intelligence,  ser. IJCAI, vol. 1, 1993, pp. 655â660.  [17] D. J. Rose, R. E. Tarjan, and G. S. Lueker, âAlgorithmic  aspects of vertex elimination on graphs,â SIAM Journal on  Computing, vol. 5, no. 2, pp. 266â283, 1976.  [18] N. EĂŠn and N. SĂśrensson, âAn extensible sat-solver,â in  Proceeding of the 6th International Conference on Theory  and Applications of SatisďŹability Testing, ser. SAT, 2003, pp.  502â518.  [4] A. K. Pujari, G. V. Kumari, and A. Sattar, âINDU: An interval  and duration network,â in Proceedings of the 12th Australian  Joint Conference on ArtiďŹcial Intelligence: Advanced Topics  in ArtiďŹcial Intelligence, ser. AI, 1999, pp. 291â303.  [5] D. A. Randell, Z. Cui, and A. G. Cohn, âA spatial logic  based on regions and connection,â in Proceedings of the  Third International Conference on Principles of Knowledge  Representation and Reasoning, ser. KR, 1992, pp. 165â176.  156 