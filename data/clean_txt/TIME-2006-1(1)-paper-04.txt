Ultimately Periodic Simple Temporal Problems (UPSTPs)  Jean-FrancĚ§ois Condotta 1  GeĚrard Ligozat 2  Mahmoud Saade 1  Stavros Tripakis 3  1  CRIL-CNRS, UniversiteĚ dâArtois, Rue de lâUniversiteĚ, 62307 Lens, France  2  LIMSI-CNRS, UniversiteĚ de Paris-Sud, 91403 Orsay, France  3  VERIMAG, Centre EĚquation, 2, avenue de Vignate, 38610 Gieres, France  {condotta,saade}@cril.univ-artois.fr, ligozat@limsi.fr, tripakis@imag.fr  Abstract  In this paper, we consider quantitative temporal  or spatial constraint networks whose constraints  evolve over time in an ultimately periodic fashion. These constraint networks are an extension  of STPs (Simple Temporal Problems). We study  some properties of these new types of constraint  networks. We also propose a constraint propagation algorithm. We show that this algorithm decides the consistency problem in some particular  cases.  1 Introduction  In many areas of Computer Science, in particular in ArtiďŹcial Intelligence, it is necessary to reason about temporal information. Numerous formalisms for representing and reasoning about time  with constraints have been proposed. The constraint networks considered by these formalisms  differ, on the one hand, in terms of the temporal entities represented by the variables: these entities can be temporal points, temporal intervals,  durations or distances, for example; on the other  hand, they differ in terms of the nature of the constraints they use: these constraints can be qualitative [1, 2, 3], metric/quantitative [4, 5] or both  [6, 7, 8].  Simple temporal problems (STPs) [5] belong to  the class of quantitative constraint networks. They  represent temporal entities by points on the line  and allow to constrain the distances/durations between these points using numeric values speciďŹed  by intervals. It is well known that STPs can be  solved in polynomial time, which is one of the  reasons why these constraint networks are very  used. On many occasions the STPs have been  extended to deďŹne more expressive constraint networks [9, 10, 11].  In this paper, we consider temporal quantitative  constraint networks whose constraints evolve over  time in a ultimately periodic fashion. These constraint networks are extensions of the STPs and  can be used to represent âthe cyclic constraintsâ  deďŹned by Tripakis [12] for example. We call  them ultimately periodic STPs (UPSTPs in short).  These networks, interpreted in a spatial context,  can be seen as temporalized STPs. More precisely,  consider a set of punctual objects on the line whose  spatial locations change over time. At each instant,  an object has a given location. Then a UPSTP  makes it possible to express constraints on the relative locations of the objects over time, such as constraints which have to be satisďŹed at each new occurrence of a particular time (periodic constraints),  as well as constraints involving different instants.  In a temporal context, a recurrent activity or event  can have a ďŹnite or inďŹnite number of occurrences  over time. In some applications these occurrences  may have to satisfy a set of quantitative constraints  on their relative durations. A UPSTP allows to  specify such constraints.  The goal of this paper is to study various properties of these networks. We also propose a speciďŹc  constraint propagation algorithm for UPSTPs. We  show that this algorithm decides the consistency  problem in polynomial time for interesting particular cases.  The remainder of this paper is organized as follows. Section 2 recalls some basic facts about  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEâ06)  1530-1311/06 $20.00 ÂŠ 2006  IEEE  STPs. In Section 3 we introduce the ultimately  periodic simple temporal problems (UPSTPs). In  Section 4 we relate the consistency problem for  UPSTPs to the consistency problem for classical  STPs. Section 5 is devoted to the study of particular UPSTPs, namely closed UPSTPs. A constraint propagation algorithm is proposed in Section 6. Section 7 ends the paper with concluding  remarks.  2 Preliminaries on STPs  We denote the set of intervals on the line of rational numbers by INTQ . These intervals can be  ďŹnite or inďŹnite, and they can include or not their  lower and upper bounds, if any. In particular, this  set contains the empty interval, denoted by â in the  sequel. Given two intervals I and J, âI denotes  the interval opposite to I, i.e. the interval deduced  from I by the symmetry x â âx w.r.t. the origin.  I âŠ J denotes the interval corresponding to the intersection of I and J, I + J is the sum of the intervals I and J, i.e. the interval which is the union of  all translated intervals i+J = {i+x | x â J}, for  i â I. Given an integer number c, c.I is the image  of I under the transform x â c.x. As an illustration, consider the intervals ] â â, 3] and ]1, 5]  (this last interval corresponds to the rational numbers strictly greater than 1 and less than 5). We  have â]ââ, 3] = [â3, +â[, â]1, 5] = [â5, â1[,  ]ââ, 3]âŠ]1, 5] =]1, 3], ]ââ, 3]+]1, 5] =]ââ, 8]  and 2. ]1, 5] =]2, 10]. STPs [5] are binary quantitative constraint networks where the constraints  involve distances between points on the line: Each  constraint is deďŹned by an interval which represents the admissible values for the distance between the two points involved. All constraints of  the STPs considered in this paper will be deďŹned  by intervals belonging to INTQ :  DeďŹnition 1 A STP S is a pair (V, C) where:  Each variable vi represents a point on the rational  line. An interval C(vi , vj ) gives the admissible  values for the distance (vj â vi ) between the two  points represented by vi and vj . A solution of a  STP is formally deďŹned in the following way:  DeďŹnition 2 Let S = (V, C) be a STP.  â˘ An instantiation Ď of S is a map from V to Q  associating to each variable vi of V a rational number Ď(vi ) (also denoted by Ďi ).  â˘ An instantiation Ď of S is a solution iff for all  vi , vj â V , Ďj â Ďi â Cij .  A STP is consistent iff it has a solution. The consistency problem for STPs consists in determining, given a STP, whether it is consistent or not.  This problem is a polynomial problem. A STP  S = (V, C) is a subSTP of S  = (V  , C  ), which  is denoted by S â S  , if V = V  and C(vi , vj ) â  C  (vi , vj ) for all vi , vj â V (S â S  denotes the  case where S â S  and for at least a pair of variables vi , vj â V we have C(vi , vj ) â C  (vi , vj )).  We will say that a STP S = (V, C) is PC-closed  iff for all vi , vj , vk â V , C(vi , vj ) â C(vi , vk ) +  C(vk , vj ). It is well known that a PC-closed STP  which does not contain the empty interval as a  constraint is a consistent STP. It is also globally consistent (each partial solution on a subset  of variables can be extended to a solution). Given  a STP S, there exists a unique equivalent STP  which is PC-closed; we denote it by PC(S). Polynomial methods consisting in iterating the operation of triangulation: Cij â Cij âŠ (Cik + Ckj )  for each triple of variables vi , vj and vk until a  ďŹx-point is reached are used to obtain this equivalent STP. For example, we can use the algorithm  P C1 [13] which only uses one main loop for STPs  and whose complexity is hence 0(|V |3 ) for STPs.  Such a method will be generically called a pathconsistency method in the sequel.  â˘ V is a ďŹnite set of variables {v0 , . . . , vnâ1 },  where n is a positive integer;  3 Ultimately Periodic Simple Temporal Problems  â˘ C is a map from V Ă V to INTQ , associating to each (vi , vj ) â V Ă V an interval  C(vi , vj ) belonging to INTQ (also denoted by  Cij in the sequel) such that C(vi , vi ) â [0, 0]  (actually C(vi , vi ) can be [0, 0] or the empty  interval) and C(vj , vi ) = âC(vi , vj ) for all  vi , vj â V .  In a temporal context, a STP expresses quantitative constraints between a set of activities or events  represented by points. A STP can also be used in  a spatial context to represent constraints on the relative positions of a set of punctual objects on the  line.  Now we deďŹne the main notion of this paper which  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEâ06)  1530-1311/06 $20.00 ÂŠ 2006  IEEE  we call ultimately periodic simple temporal problems or ultimately periodic STPs (UPSTPs in  brief). This new notion, interpreted in a spatial  context, can be seen as a temporalized STP. More  precisely, consider a set of punctual objects on the  line whose spatial locations may change over the  time. At each instant, an object has a given location. With a UPSTP we can express three kinds  of constraints: constraints between the locations  of the objects at one given instant, constraints between the locations of the objects at different instants, constraints between the locations of the objects which have to be satisďŹed at each instant following an initial instant. We assume that time is  modeled by the natural integers. Hence, each integer t âĽ 0 corresponds to an instant in time.  In a temporal context, a recurrent activity or event  can have a ďŹnite or inďŹnite number of occurrences  over time. In some applications these occurrences  may have to satisfy a set of quantitative constraints  on the durations between two of them. A UPSTP  allows to specify such constraints.  Formally, we deďŹne an ultimately periodic STP in  the following way:  DeďŹnition 3 A UPSTP is a structure U  (V, C, tmin , tmax ) where:  =  â˘ V = {v0 , . . . , vnâ1 } is a set of n variables ;  â˘ tmin and tmax are two positive integers such  that tmin â¤ tmax ;  â˘ C is a map from V Ă {0, . . . , tmax } Ă  V Ă {0, . . . , tmax } to INTQ such that  C(vi , ti , vj , tj ) = âC(vj , tj , vi , ti ) and  C(vi , ti , vi , ti ) â [0, 0] for all vi , vj â V and  ti , tj â {0, . . . , tmax }.  The application C expresses explicitly the constraints between the locations of the different occurrences of the variables of V for the instants belonging to {0, . . . , tmax }. The map C also expresses constraints which have to be satisďŹed at  each future instant. Indeed, the constraints given  for the instants {tmin , . . . , tmax } have to be also  satisďŹed on all future periods, i.e. on each interval  {tmin + i, . . . , tmax + i} with i âĽ 0.  Intuitively, in a spatial context, each variable vi â  V represents a point on the rational line whose location evolves over time. The pair (vi , ti ), with  ti â N, represents this location at time ti . The  constraint C(vi , ti , vj , tj ) constrains the distance  between the point vi at time ti and the point vj  at time tj . In a temporal context, the variable vi  no longer represents the punctual spatial component of the object, but instead a recurrent activity  or event. The pair (vi , ti ) â V Ă N represents then  the (ti + 1)th occurrence of the event represented  by vi .  In accordance with the preceding interpretations,  we deďŹne a solution of a UPSTP in the following  way:  DeďŹnition 4 A solution Ď of a UPSTP U =  (V, C, tmin , tmax ) is a map from V Ă N to Q such  that, for all vi , vj â V and ti , tj â N :  1. if ti , tj â¤ tmax then Ď(vj , tj ) â Ď(vi , ti ) â  C(vi , ti , vj , tj ) ;  2. if tmin â¤ ti â¤ tj and tj â ti â¤ tmax â  tmin then for all ti , tj such that tmin â¤  ti â¤ min{tmax , ti } and tmin â¤ tj â¤  min{tmax , tj } and tj â ti = tj â ti we have  Ď(vj , tj ) â Ď(vi , ti ) â C(vi , ti , vj , tj ).  We extend in an obvious way the notions of consistency and equivalence for ordinary constraint networks to the case of UPSTPs. The following examples illustrate the preceding deďŹnitions.  Example 1 In a spatial context, consider three  objects O0 , O1 and O2 , whose spatial locations  are represented by three variables v0 , v1 and v2  which stand for rational numbers. Assume that the  objects change positions over time with the following constraints:  â˘ At time 0, O0 is left of O1 and is left of O2 at  a distance comprised between 3 and 5;  â˘ the location of O2 at time 0 is left of its location at time 1 ;  â˘ at time 1, and for all future instants, O0 is  right of O1 at a maximal distance of 10;  â˘ after time 1, O0 moves left, and O1 moves  right ;  â˘ after time 2, O2 moves left and stays away O1  at a maximal distance of 4.  These constraints can be expressed by the UPSTP  U = (V, C, tmin , tmax ), where V = {v0 , v1 , v2 },  tmin = 1, tmax = 3. The constraints deďŹned by  C are represented in Figure 1. As usual, the following constraints are not given: the constraint  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEâ06)  1530-1311/06 $20.00 ÂŠ 2006  IEEE  between a variable and itself, the universal constraint (] â â, +â[), the opposite constraint of a  constraint which is already given. This UPSTP U  is a consistent UPSTP, a solution is depicted in  Figure 1.  (d = 1 in the case where all bounds are inďŹnite).  Let U  = (V, C  , tmin , tmax ) be the UPSTP deďŹned by C  (vi , ti , vj , tj ) = d.C(vi , ti , vj , tj ) for  all vi , vj â V and ti , tj â {0, . . . , tmax } . Then U  is consistent iff U  is consistent.  Example 2 Consider now two recurrent punctual  events E0 and E1 represented by two variables v0  and v1 which stand for rational numbers. Assume  that the different occurrences of these events are  constrained in the following way:  Proof Let Ď be a solution of U. Let Ď  be a  map from V Ă N to Q deďŹned from Ď  (vi , ti ) =  d(Ď(vi , ti ) â Ď(v0 , 0)) for all vi â V and ti â N.  We can show that Ď  is a solution of U  . Suppose  now that a solution Ď  of U  is given. By deďŹning a map Ď from V Ă N to Q with Ď(vi , ti ) =  (Ď  (vi , ti )âĎ  (v0 , 0))/d for all vi â V and ti â N  we obtain a solution of U.  Because of this fact, we can assume without loss of  generality that all UPSTPs have constraints whose  ďŹnite bounds are integers.  â˘ for all i âĽ 0, the ith occurrence of E1 is  always after the ith occurrence of E0 . At  least one second elapses between these occurrences.  â˘ For all i âĽ 0, at least two seconds elapse  between the (i + 1)th occurrence and the ithe  occurrence of E0 , exactly one second elapses  between those of E1 .  These constraints can be expressed by the UPSTP  U = (V, C, tmin , tmax ), where V = {v0 , v1 },  tmin = 0, tmax = 1. The constraints deďŹned by  C are represented in Figure 2. We leave it to the  reader to check that this UPSTP is not consistent.  4 Implicit constraints versus explicit  constraints  In this section we relate the consistency problems  for UPSTPs â which potentially express an inďŹnite number of constraints â to the consistency  problems for the STPs. In order to do this we take  the following steps :  1. We associate to each UPSTP a STP corresponding to its periodic constraints. This  STP is called the motif of the UPSTP.  Figure 2. The constraints C of the  UPSTP U of Example 2.  To close this section we show that the consistency  problem of any UPSTP can be can be reduced  (in polynomial time) to the consistency problem  of a UPSTP whose constraints have either inďŹnite  bounds, or bounds deďŹned by integers:  Proposition 1 Let U = (V, C, tmin , tmax ) be a  UPSTP, and d be product of the denominators  of the ďŹnite bounds 1 of the intervals deďŹning C  1 We can assume without loss of generality that each value  of a ďŹnite bound of a constraint is deďŹned by a fraction p/q,  where p is an integer and q is a strictly positive integer  2. Based on the use of the motif, we deďŹne  a ďŹnite sequence of STPs âwith increasing  temporal supportâ. Each one of these STPs  makes explicit the constraints of the UPSTP  on a number of initial points in time. We call  them the strengthenings of the UPSTP.  3. Finally, we relate the consistency problem of  the UPSTPs to properties of its strengthenings.  We now proceed to implement these steps in detail.  The ďŹrst ďŹnite networks we consider are the motifs  of the UPSTPs:  DeďŹnition 5 Let U = (V, C, tmin , tmax ) be a  UPSTP. The motif of U, denoted by motif(U),  is the STP Sm = (Vm , Cm ) where Vm =  V Ă {0, . . . , lg} (with lg = tmax â tmin ) and  Cm ((vi , ti ), (vj , tj )) = C(vi , ti + tmin , vj , tj +  tmin ) for all vi , vj â V and for all ti , tj â  {0, . . . , lg}.  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEâ06)  1530-1311/06 $20.00 ÂŠ 2006  IEEE  Figure 1. The UPSTP U corresponding to Example 1 and a solution of U.  Figure 3. The motif of the UPSTP U and its 4-strengthening.  In the sequel lg will denote the difference tmax â  tmin . The motif of the UPSTP U in Figure 1 is  represented in Figure 3.  Using the notion of motif, we are going to deďŹne a STP which, in some way, makes explicit  constraints of a UPSTP which must be satisďŹed  during the (k + 1) ďŹrst instants (where k âĽ  tmax ). For such a k, the STP we deďŹne is called  the k-strengthening of the UPSTP. Before giving a formal deďŹnition, we describe them in an  intuitive way. Consider a picture representing  the constraints of the UPSTP over the instants  {0, . . . , tmax }. Imagine that a picture of the motif is drawn independently on a transparent sheet.  Given an integer number k âĽ tmax , we superpose  the transparent sheet on the original picture, then  we move this motif with a shift of one, then of two,  and so on, until the instant k is reached. Each time,  we add the constraints of the transparent sheet to  the existing ones (taking intersections). Then the  k-strengthening is the STP we get when reaching  instant k. We now give a formal deďŹnition:  DeďŹnition 6 Let U = (V, C, tmin , tmax ) be a  UPSTP and Sm = (V Ă {0, . . . , lg}, Cm ) its motif. Given an integer number k âĽ tmax , the kstrengthening of U, denoted by kâstrenthening(U),  is the STP S k = (V k , C k ) deďŹned recursively 2  by:  â˘ V k = V Ă {0, . . . , k};  â˘ C tmax ((vi , ti ), (vj , tj )) = C(vi , ti , vj , tj ) for  all vi , vj â V and ti , tj â {0, . . . , tmax };  â˘ for k âĽ tmax and for all vi , vj â V and  ti , tj â {0, . . . , k + 1} with ti â¤ tj ,  =  â˘ C k+1 ((vi , ti ), (vj , tj ))  C k ((vi , ti ), (vj , tj )), if ti < (k + 1) â lg and  tj < k + 1,  â˘ C k+1 ((vi , ti ), (vj , tj ))  =  C k ((vi , ti ), (vj , tj )) âŠ Cm ((vi , ti â ((k +  1) â lg)), (vj , tj â ((k + 1) â lg))), if  ti âĽ (k + 1) â lg and tj < k + 1,  â˘ C k+1 ((vi , ti ), (vj , tj )) = Cm ((vi , ti â ((k +  1)âlg)), (vj , tj â((k+1)âlg))), if tj = k+1  and tj â ti â¤ lg,  â˘ C k+1 ((vi , ti ), (vj , tj )) =] â â, +â[, if tj =  k + 1 and tj â ti > lg,  â˘ C k+1 ((vj , tj ), (vi , ti ))  C k+1 ((vi , ti ), (vj , tj )).  2 Firstly, we deďŹne C k  from  Ck  IEEE  â  for k = tmax then, we deďŹne C k+1  for an integer k âĽ tmax .  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEâ06)  1530-1311/06 $20.00 ÂŠ 2006  =  Figure 3 shows the 4-strengthening of the UPSTP  U depicted in Figure 1. In the sequel we also use  the notion of window of a k-strengthening which  is a STP capturing its constraints over (lg+1) consecutive time points:  DeďŹnition 7 Let S k = (V Ă {0, . . . , k}, C k )  the k-strengthening of a UPSTP U  =  (V, C, tmin , tmax ), with k âĽ tmax . The twindow of S k , with tmin â¤ t â¤ k â lg,  denoted by t â window(S), is the STP  St = (Vt , Ct ) where: Vt = V Ă {0, . . . , lg} and  Ct ((vi , ti ), (vj , tj )) = C k ((vi , ti +t), (vj , tj +t)),  for all vi , vj â V and ti , tj â {0, . . . , lg}.  The end of S k corresponds to its last window, i.e.  its (k â lg)-window. Figure 4 depicts the end of  the 4-strengthening of Figure 3.  We give a last deďŹnition before beginning the  study of the interactions between the various consistency properties of the constraint networks previously introduced.  DeďŹnition 8 Let U = (V, C, tmin , tmax ) be a  UPSTP and S k = (V Ă {0, . . . , k}, C k ) its kstrengthening for an integer number k âĽ tmax . A  map Ď from V ĂN to Q is a solution of S k iff the restriction of Ď to V Ă{0, . . . , k} is a solution of S k ,  i.e. iff Ď(vj , tj ) â Ď(vi , ti ) â C k ((vi , ti ), (vj , tj ))  for all vi , vj â V and ti , tj â {0, . . . , k}.  A solution of a UPSTP provides solutions for  its k-strengthenings moreover, a solution of all  k-strengthenings corresponds to a solution of the  UPSTP:  Proposition 2 Let U be an UPSTP and a map Ď  from V Ă N to Q. The map Ď is a solution of the  kâstrenthening(U) for all k âĽ tmax iff Ď is a  solution of U.  Notice that the consistency of each kstrengthening of a UPSTP does not imply,  in the general case, the consistency of the  UPSTP. An counter-example is provided by  the UPSTP represented in Figure 2: despite its  non-consistency, we can deďŹne a solution for each  one of its k-strengthenings. The ďŹnal proposition  of this section can be straightforwardly proved  using the deďŹnitions of a k-strengthening and of  its end:  Proposition 3 Let U be a UPSTP. For all k âĽ  tmax , the STP end(kâstrenthening(U)) is a subnetwork of motif(U).  5 The consistency problem for closed  UPSTPs  In this section we consider particular UPSTPs,  namely, closed UPSTPs. We have shown that the  consistency problem of these constraint networks  can be reduced to the consistency problem of its  tmax -strengthenings and hence is âeasyâ to solve.  In the following section we will introduce a constraint propagation algorithm aiming to transform  any UPSTP into a closed UPSTP.  Before deďŹning the property of closure for a  UPSTP we introduce an operation called the  translation operation. From the motif of a UPSTP,  the translation operation gives a STP whose constraints are the constraints of the motif on which  are superposed the constraints which must be satisďŹed on âthe next periodâ (those that must be satisďŹed at the next instant by shifting by one the  constraints of the motif). This operation is used  by Tripakis [12] in the framework of periodic constraints which can be expressed by a UPSTP U =  (V, C, tmin , tmax ) where tmin = 0 and tmax = 1.  Formally, we deďŹne the translation operation in the  following way:  DeďŹnition 9 Let S = (V  , C) be a STP with  V  = V Ă {0, . . . , max} (where V is a ďŹnite  set {v0 , . . . , vm } and m, max âĽ 0). The translation of S, denoted by translation(S), is the STP  Str = (Vtr , Ctr ) where Vtr = V  , and for all  vi , vj â V and for all ti , tj â {0, . . . , max},  Ctr ((vi , ti ), (vj , tj )) = C((vi , ti ), (vj , tj )) âŠ  C((vi , ti â 1), (vj , tj â 1)) if ti > 0 and tj > 0,  and Ctr ((vi , ti ), (vj , tj )) = C((vi , ti ), (vj , tj ))  else.  The translation of the motif depicted in Figure 3  is represented in Figure 4. We extend the notion  of PC-closure and translation to UPSTPs in the  following way:  DeďŹnition 10 Let U  =  (V, C, tmin , tmax )  a UPSTP.  The PC-closure of U (resp.  the translation of U), denoted by PC(U)  (resp.  translation(U)), is the UPSTP  (V, C  , tmin , tmax ) where C  in the map from  V Ă {0, . . . , tmax } Ă V Ă {0, . . . , tmax } to INTQ  deďŹned by:  â˘ C  (vi , ti , vj , tj ) = C(vi , ti , vj , tj ) for all  vi , vj â V and ti , tj â {0, . . . , tmax } such that  ti < tmin or tj < tmin ,  â  =  Cm  ((vi , ti â  â˘ C  (vi , ti , vj , tj )  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEâ06)  1530-1311/06 $20.00 ÂŠ 2006  IEEE  Figure 4. The end of the 4-strengthening of the UPSTP U and the translation of motif(U).  tmin ), (vj , tj â tmin )) for all vi , vj â V  â  denotes  and ti , tj â {tmin , . . . , tmax }, where Cm  the constraints of the PC-closure (resp. the  translation) of the motif of U.  Using these operations we can now deďŹne the closure property:  DeďŹnition 11 Let U = (V, C, tmin , tmax ) be a  UPSTP. The UPSTP U (resp. the motif motif(U))  is closed iff U = PC(translation(U)) (resp. iff  motif(U) = PC(translation(motif(U))).  Concerning the closure property we have the following properties:  Proposition 4 Let U be a UPSTP. We have : U  is closed iff motif(U) is closed ; U is closed iff  U = translation(U) and U = PC(U) ; motif(U) is  closed iff motif(U) = translation(motif(U)) and  motif(U) = PC(motif(U)).  of end((k + 1)âstrenthening(U)). end((k + 1)â  strenthening(U)) is a subnetwork of the STP  motif(U) which is closed and hence PC-closed.  motif(U) is hence also globally consistent. Hence  we can extend the partial solution to a solution of  motif(U). Since the constraints concerning the instant lg are the same constraints for motif(U) and  for end((k + 1)âstrenthening(R)), this solution is  also a solution of end((k + 1)âstrenthening(U)).  This solution can be used to complete the solution  Ď to obtain a solution of (k + 1)âstrenthening(U).  A corollary of this theorem is the following result:  Corollary 1 The consistency problem for closed  UPSTPs can be solved in polynomial time; more  precisely, it can be solved by applying the pathconsistency method on the tmax -strengthening of  the UPSTP, which can be achieved in O((tmax â  |V |)3 ).  We also have the following result:  Proposition 5 Let U = (V, C, tmin , tmax ) be a  closed UPSTP. Let S k = (V Ă {0, . . . , k}, Ck )  and N k+1 = (V Ă {0, . . . , k + 1}, Ck+1 ) be the  k-strengthening and the (k + 1)-strengthening of  U, respectively, with k âĽ tmax . The restriction of  the map Ck+1 to V Ă {0, . . . , k} Ă V Ă {0, . . . , k}  is the map Ck .  Now, we give a fundamental result about the consistency problem for closed UPSTPs.  Theorem 1 Let U = (V, C, tmin , tmax ) be  a closed UPSTP.  Each solution of k â  strenthening(U), with k âĽ tmax , can be extended  to a solution of (k + 1)âstrenthening(U).  Proof(sketch) Starting from a solution Ď of kâ  strenthening(U) we can extract a partial solution  6 The closure method for the UPSTPs  In the previous section we have shown that the  consistency problem of closed UPSTPs is a polynomial problem. We will make use of this result,  and introduce a constraint propagation algorithm  which tries to transform an arbitrary UPSTP into  an equivalent UPSTP which is closed. This algorithm corresponds to the algorithm Closure (see  Algorithm 1). We will see that this algorithm is  sound, in the sense that if the algorithm Closure  terminates, then the resulting UPSTP is closed  and equivalent to the initial UPSTP. However, this  algorithm is not complete; indeed, we will see that  there are cases where the algorithm Closure cannot  terminate. In spite of this, we will characterize two  particular interesting cases for which the algorithm  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEâ06)  1530-1311/06 $20.00 ÂŠ 2006  IEEE  Algorithm 1 Closure  Compute the closure of UPSTP U  (V, C, tmin , tmax )  1:  Do  2:  U  := U  3:  U := translation(U)  4:  U := PC(U)  5:  While (U = U  )  6:  return U  =  Closure is complete. This algorithm uses the translation operation and the path-consistency method  to compute the closure of a UPSTP. As a ďŹrst  step, we will show that this algorithm is sound.  The following proposition asserts the equivalence  between a UPSTP and its transform under PCclosure and translation and hence allows us to assert that the algorithm Closure computes a UPSTP  which is equivalent to the initial UPSTP:  Proposition 6 The PC-closure of a UPSTP U and  its translation are equivalent to U.  The algorithm Closure does not always terminate.  Indeed, consider the UPSTP represented in Figure 2 and apply the algorithm Closure to it. We  notice that this algorithm does not terminate and  loops indeďŹnitely. The resulting UPSTP after the  ith loop of the algorithm Closure is shown in Figure 5. Actually, the non termination of the algo-  Figure 5. The resulting UPSTP after  the ith loop of the algorithm Closure.  rithm Closure allows us to decide the consistency  problem of the UPSTP, indeed we have the following property:  Proposition 7 The non termination of the algorithm Closure on a UPSTP U implies the non consistency of the UPSTP U.  Proof In the case where the algorithm Closure  loops indeďŹnitely, we can assert that there exists one of the intervals deďŹning a constraint  C(vi , ti , vj , tj ) of U which decreases indeďŹnitely  by intersection. This interval decreases at least by  one (the ďŹnite bounds of the intervals are integer  number) for each intersection. This interval has  necessarily a ďŹnite bound and an inďŹnite bound.  Indeed, in the contrary case C(vi , ti , vj , tj ) will  become the empty interval. Using these observations and from the fact that the algorithm Closure  is sound, we can assert that it is not possible to  deďŹne a map Ď solution of U. Indeed, for any distance Ď(vj , tj ) â Ď(vi , ti ) there exists a loop of  the algorithm from which Ď(vj , tj ) â Ď(vi , ti ) â  C(vi , ti , vj , tj ).  An open question is: in the general case, does exist  a way to detect that the algorithm Closure will indeďŹnitely loop after a particular number of loops?  For particular kinds of constraints we are sure that  this algorithm will terminate after a ďŹnite number  of iterations. For example, we can cite the two following particular cases:  1. the intervals used as constraints have  uniquely ďŹnite bounds ;  2. the intervals used as constraints have inďŹnite  bounds or ďŹnite bounds (open or closed) associated with the value 0.  For the ďŹrst kind of constraints, the number of iterations done by the algorithm Closure is bounded  by m(|V | â (lg + 1))2 where m is the size of the  largest interval. This is a consequence of the fact  that at each loop, at least one constraint decreases  at least one unity. Concerning the second type of  constraints we can notice that the number of iterations is bounded by 3(|V | â (lg + 1))2 as each constraint can decrease at most three times. The second kind of constraints is used to represent qualitative constraints stemming from formalisms such  that the Allenâs Calculus [1] or the point calculus [2]. Hence, the consistency problem for the  UPSTPs with these two kinds of constraints is  polynomial in time.  7 Conclusion  In this paper, we have introduced the notion  of ultimately periodic simple temporal problems  (UPSTPs). This notion allows to express (spatial or temporal) quantitative constraints which, after an initial period, evolve in a periodic way by  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEâ06)  1530-1311/06 $20.00 ÂŠ 2006  IEEE  repeating the same pattern that we called motif.  For this kind of constraint network, we propose a  constraint propagation algorithm for deciding the  problem of consistency. In the general case, this  algorithm is not complete. Despite it, we showed  that for particular interesting cases. We are currently developing an implementation of this algorithm3 . This work also opens new perspectives for  future work. One of them consists in the characterization of new cases where the consistency problem of the UPSTP is polynomial in time. Another  one consists in determining the class of complexity to which the consistency problem for UPSTPs  belongs, and to deďŹne algorithms allowing to solve  it in the general case.  References  [1] Allen, a.J.F. : An interval-based representation of temporal knowledge. In: Proc. of the  Seventh Int. Joint Conf. on ArtiďŹcial Intelligence (IJCAIâ81). (1981) 221â226  [2] Vilain, M., Kautz, H., Beek, P.V. : Constraint  propagation algorithms for temporal reasoning: A revised report. Qualitative Reasoning  about Physical Systems, Morgan Kaufmann,  1990 (1990) 372â381  [3] Navarrete, I., Marin, R.: Qualitative temporal reasoning with points and durations.  In: Proceedings of the 15th Inter. Joint Conf.  on Artif. Intel. (IJCAIâ97), San Francisco  (1997) 1454â1459  Int. Joint Conf. on Art. Intel. (IJCAIâ99).  (1999) 1259â1267  [8] Condotta, J.F. : The augmented interval and  rectangle networks. In: Proceedings of the  Seventh International Conference on Principles of Knowledge (KRâ2000), Brekenbridge, USA. (2000)  [9] Gerevini, A., Cristani, M.: On ďŹnding a solution in temporal constraint satisfaction problems. In: Proc. of the Fifteenth Int. Joint  Conf. on Art. Int. (IJCAIâ97). (1997) 1460â  1465  [10] Morris, P.H., Muscettola, N.: Managing temporal uncertainty through waypoint controllability. In Thomas, D., ed. : Proc. of the 16th  Int. Joint Conf. on Art. Int. (IJCAI-99-Vol2).  (1999) 1253â1258  [11] Broxvall, M.: A method for metric temporal  reasoning. In: Proc. of the Eighteenth Nat.  Conf. on Art. Int. (AAAI02). (2002) 513â  518  [12] Tripakis, S.:  Solving cyclic constraints.  In: Workshop on real-Time Constraints  (RTCâ99), Taipei, Taiwan (1999)  [13] Mackworth, A.K., Freuder, E.C. :  The  Complexity of Some Polynomial Network  Consistency Algorithms for Constraint Satisfaction Problem. ArtiďŹcial Intelligence 25  (1985) 65â74  [4] Koubarakis, M.: Dense time and temporal  constraints with =. In: Proc. of the 3rd Int.  Conf. on Princ. of Knowledge Representation and Reasoning (KRâ92). (1992) 24â35  [5] Dechter, R., Meiri, I., Pearl, J.: Temporal  Constraint Networks. Art. Int. 49 (1991) 61â  95  [6] Meiri, I.: Combining qualitative and quantitative constraints in temporal reasoning. ArtiďŹcial Intelligence 87 (1996) 343â385  [7] Pujari, A.K., Sattar, A.: A new framework  for reasoning about points, intervals and durations. In Thomas, D., ed. : Proc. of the 16th  3 The  current implementation can be found  http://www.cril.univ-artois.fr/âźcondotta/upstp/.  at  Proceedings of the Thirteenth International Symposium on Temporal Representation and Reasoning (TIMEâ06)  1530-1311/06 $20.00 ÂŠ 2006  IEEE 