2011 Eighteenth International Symposium on Temporal Representation and Reasoning  Temporal Access to the Iteration Sequences  A unifying approach to ďŹxed point logics  Alexei Lisitsa  Department of Computer Science  University of Liverpool  Liverpool, UK  Email: A.Lisitsa@liverpool.ac.uk  approximations computed iteratively. We suggest to look on  the iteration process itself and augment the logic with an  access to the iteration stages via temporal formulae. As a result  we get a logic FO+TAI (temporally accessible iteration) which  naturally subsumes many (virtually all deterministic variants  of) inductive logics, including logics with least ďŹxed point,  inďŹationary ďŹxed point, variants of partial ďŹxed points, as well  as logics with anti-monotone and non-monotone inductions.  We present the semantics of FO+TAI for ďŹnite structures  only. The case of inďŹnite structures requires considering transďŹnite iterations and temporal access to the iteration stages  would need a variant of temporal logic over ordinals (e.g. [6]).  This case requires further investigations and will be treated  elsewhere.  We show that over ďŹnite structures FO+TAI is not less  expressive than all mentioned inductive logics and at the same  time has the same expressive power as FO+PFP. Further, we  show that adding the same machinery to the logic of monotone  inductions (FO+LFP) does not increase its expressive power.  Finally, we show that the extension of the modal mu-calculus  with the temporal access leads to the more expressive logic  closed under assume-guarantee speciďŹcations  The paper is organized as follows. In the next section we  introduce classical ďŹxed-point logics and ďŹrst-order temporal  logics. Based on that in the Section III we deďŹne the logic  FO+TAI. In Section IV we demonstrate how to deďŹne in  FO+TAI classical inductive constructs. In Section V it is  shown that FO+TAI subsumes the logic of non-monotone  induction FO+ID. In Section VI we consider expressive power  of FO+TAI and its monotone fragment. In Section VII we  consider the same idea applied to the modal đ-calculus.  Section VIII concludes the paper.  AbstractâThe semantics of ďŹxed point constructions is commonly deďŹned in terms of iteration sequences. For example,  the least ďŹxed point of a monotone operator consists of all  points which eventually appear in the approximations computed  iteratively. We take this temporal reading as the starting point  and develop a systematic approach to temporal deďŹnitions over  iteration sequences. As a result, we propose an extension of  ďŹrst-order predicate logic with an iterative operator, in which  iteration steps may be accessed by temporal logic formulae.  We show that proposed logic FO+TAI subsumes virtually all  known deterministic ďŹxed point extentions of ďŹrst-order logic  as its natural fragments. On the other hand we show that  over ďŹnite structures FO+TAI has the same expressive power  as FO+PFP (FO with partial ďŹxed point operator), but in many  cases providing with more concise deďŹnitions. Finally, we show  that the extension of modal mu-calculus with the temporal access  leads to the more expressive logic closed under assume-guarantee  speciďŹcations operator.  I. I NTRODUCTION  The logics with inductive operators (or, ďŹxed point constructs) play an important role in foundations of computer  science. Logical languages with ďŹxed point constructs serve as  theoretical models of query languages in database theory and,  when considered over linearly ordered ďŹnite structures, can be  used to characterize computational complexity classes within  descriptive complexity theory [24], [14], [15]. The relationships between ďŹxed point logics and complexity have many  interesting aspects â the logics reďŹect faithfully computations  over structures and this led to formulation of a new notion of  relational complexity [4]. On the other hand, tantalizing open  problems in computational complexity can be formulated in  logical terms, for example PTIME = PSPACE if and only  if logics with least ďŹxed point and partial ďŹxed points have  the same expressive power over classes of ďŹnite models [3].  In other direction, modal logic with ďŹxed points, đ-calculus,  is one of the unifying formalisms used in the research on  model checking and veriďŹcation [9]. Not necessarily monotone  inductive deďŹnitions also appear in the research on semantics  of logic programming [11], in formalization of reasoning [8]  and in the revision theory [19].  In this paper we propose a simple mechanism which âinternalizesâ the various variants of the inductive deďŹnitions within  a single logic. Semantics of ďŹxed-point operators is usually  deďŹned by using an iteration and in terms of âwhat the iteration  converges toâ. For example, the least ďŹxed point of a monotone  operator consists of all points which eventually appear in the  1530-1311/11 $26.00 ÂŠ 2011 IEEE  DOI 10.1109/TIME.2011.28  II. P RELIMINARIES  A. Fixed point extensions of ďŹrst-order logic  We start with a short review of inductive deďŹnability, which  will set up a context in which logics with temporally accessible  iteration naturally appear. In this paper we will mainly deal  with deďŹnability over (classes of) ďŹnite structures, so unless  otherwise stated all structures are assumed to be ďŹnite.  Let đ(đ, đĽ  ÂŻ) be a ďŹrst-order formula, where đ is a relation  symbol of some arity đ and đĽ  ÂŻ is a tuple of individual variables  of the length đ (the same as the arity of đ). Consider a  structure âł with the domain đ , interpreting all symbols in  57  â§  đ1 (đĽÂŻ1 ) â đ1 (đ1 , . . . , đđ , đĽÂŻ1 )  ďŁ´  ďŁ´  â¨  ..  đ :=  .  ďŁ´  ďŁ´  âŠ  đđ (đĽÂŻđ ) â đđ (đ1 , . . . , đđ , đĽÂŻđ )  đ  đ except đ and đĽ  ÂŻ. Then one can consider a map ÎŚđ : 2đ â  đđ  2 , i.e mapping đ-ary relations over đ to đ-ary relations  over đ deďŹned by đ(đ, đĽ  ÂŻ) as follows:  is a system of formulae. Consider a structure âł with the  ÂŻ.  domain đ , interpreting all symbols in đđ except đđ and đĽ  đ1  đ  đđ  Then đđ deďŹnes a mapping ÎŚđđ : 2đ Ă . . . 2đ đ â 2đ ,  where all đđ are arities of đđ , as follows: ÎŚđđ (đ1 , . . . , đđ ) =  ÂŻ)}. DeďŹnitions of all mentioned  {ÂŻ  đ âŁ âł âŁ= đđ (đ1 , . . . , đđ , đ  ďŹxed points naturally generalize to the case of simultaneous  iteration  ÎŚđ (đ ) = {ÂŻ  đ âŁ âł âŁ= đ(đ, đ  ÂŻ)}  Various ďŹxed-point constructions may then be deďŹned. If  operator ÎŚđ is monotone then by classical Knaster-Tarski  theorem [23] it has a least ďŹxed-point, that is the least relation  đ, such that đ(ÂŻ  đĽ) â đ(đ, đĽ  ÂŻ) holds. This least ďŹxed-point  đâ can be obtaned as a limit of the following iteration:  â  â  đ0 = â  đđ+1 = ÎŚ(đđ )  đđ0 = â  Over ďŹnite structures this iteration stabilizes on some ďŹnite  step đ âĽ 0: đđ+1 = đđ . A simple syntactical property of  đ(đ, đĽ  ÂŻ) which guarantees monotonicity of ÎŚđ is that this  formula is positive in đ.  The InďŹationary ďŹxed point of a not necessary monotone  operator ÎŚ is deďŹned as the limit of the following iteration:  â  â  đđđ+1 = ÎŚđđ (đ1đ , . . . đđđ ).  The formula [đźđ đˇ đđ : đ]đĄÂŻ is true for a tuple of  terms đĄÂŻ if its interpretation belongs to đ-th component đđâ  of the corresponding simultaneous ďŹxed point. Notice that the  semantics of simultaneous PFP is deďŹned componentwise: for  the iteration above, đđâ = â if đđ diverges and đđâ is the  limit of đđ if it exists.  For all mentioned logics, simultaneous induction can be  eliminated and equivalent formulae with simple induction can  be produced [10], [18].  đ0 = â  đđ+1 = ÎŚ(đđ ) âŞ đđ  The inďŹationary ďŹxed point exists for an arbitrary operator and  over ďŹnite structures the above iteration reaches it at some  ďŹnite step.  The Partial ďŹxed point of an operator ÎŚ deďŹned by an  arbitrary formula đ(đ, đĽ  ÂŻ) is deďŹned as follows. Consider the  iteration:  â  â  B. First-order temporal logic  The language đŻ â of ďŹrst-order temporal logic over the  natural numbers is constructed in the standard way from a  classical (non-temporal) ďŹrst-order language â and a set of  future-time temporal operators ââ˘â (sometime), â â (always),  â â (in the next moment), âđ° â(until).  Formulae in đŻ â are interpreted in ďŹrst-order temporal  structures of the form đ = â¨đˇ, ââŠ , where đˇ is a nonempty set, the domain of đ, and â is a function associating  with every moment of time đ â â an interpretation of  predicate, function and constant symbols of â over đˇ. Firstorder (nontemporal) structures corresponding to each point of  time will be denoted đđ = â¨đˇ, â(đ)âŠ.  Intuitively, the interpretations of đŻ â-formulae are sequences of ďŹrst-order structures, or states of đ, such as  đ0 , đ 1 , . . . , đ đ . . . .  An assignment in đˇ is a function đ from the set âv of  individual variables of â to đˇ. If đ is a predicate symbol then  đ â(đ) (or simply đ đ if â is understood) is the interpretation  of đ in the state đđ .  We require that (individual) variables and constants of đŻ â  are rigid, that is neither assignments nor interpretations of  constants depend on the state in which they are evaluated.  The satisfaction relation đđ âŁ=đ đ (or simply đ âŁ=đ đ, if  đ is understood ) in the structure đ for the assignment đ  is deďŹned inductively in the usual way under the following  semantics of temporal operators:  đ0 = â  đđ+1 = ÎŚ(đđ )  Partial ďŹxed point of ÎŚ is a ďŹxed point (limit) of the iteration  (if it exists) and the empty set otherwise.  Aiming to resolve difďŹculties in the deďŹnition of semantics  of partial ďŹxed point operator over inďŹnite structures in [18]  an alternative general semantics (PFPgen) for such an operator  has been proposed. We will discuss it later in IV-D.  Let IND is one of the above ďŹxed point operators (LFP, IFP,  PFP or PFPgen) then the syntax of logic FO+IND extends  the standard syntax of ďŹrst-order logic with the following  construct. Let đ(đ, đĽ  ÂŻ) be a formula with free individual  variables including đĽ  ÂŻ = đĽ1 , . . . , đĽđ and free predicate variable  đ. For the case IND âĄ LFP we additionally require that  đ(đ, đĽ  ÂŻ) is positive in đ. Then đ := [đźđ đˇđ,ÂŻđĽ đ]đĄÂŻ is also  formula. Free individual variables of đ are free variables  occurring in đ and đĄ other than đĽ  ÂŻ. Semantics of such formula  đ is read then as follows: an interpretation of tuple of terms đĄÂŻ  belongs to the relation which is a ďŹxed point of the operator  ÎŚđ of the corresponding type IND (i.e. least, inďŹationary,  partial, or generalized partial ďŹxed point, for IND âĄ LFP, IFP,  PFP, PFPgen, respectively.)  Usually the above logics are deďŹned in a way allowing also  simultaneous inductive deďŹnitions, i.e the formulae of the form  [đźđ đˇ đđ : đ]đĄÂŻ where  58  đ âŁ=đ đ  đ âŁ=đ â˘đ  đ  đ âŁ=đ  đ âŁ=đ đđ° đ  and  iff  iff  iff  iff  đđ0 = â  đ + 1 âŁ=đ đ  there is đ âĽ đ such that đ âŁ=đ đ  đ âŁ=đ đ for all đ âĽ đ  there is đ âĽ đ such that đ âŁ=đ đ  đ âŁ=đ đ for every đ â¤ đ < đ  đđđ+1 = ÎŚđđ (đ1đ , . . . đđđ )  induces a temporal structure đ = đ0 , . . . , đđ , . . ., where  every đđ is a structure âł extended by interpretation of đđ  by đđđ . Let đ be an đ-ary relation deďŹned by đ(ÂŻ  đ§ ) on đ0  (i.e on đ ). Then for any tuple đ  ÂŻ â đ đ , âł âŁ= [đ(ÂŻ  đ§ )][đź : đ]ÂŻ  đ  iff đ  ÂŻ â đ.  Let đ be a temporal structure and đ(ÂŻ  đĽ) be a temporal  formula with đĽ  ÂŻ only free variables and âŁÂŻ  đĽâŁ = đ. Then đ(ÂŻ  đĽ)  deďŹnes a đ-ary relation đ on đ0 as follows: đ (ÂŻ  đ) â đ0 âŁ=đ  đ(ÂŻ  đĽ) where đ : đĽ  ÂŻ â đ  ÂŻ.  III. L OGIC WITH TEMPORALLY ACCESSIBLE ITERATION  Proposition 1 FO+TAI with simultaneous iteration has the  same expressive power as FO+TAI with singular iteration.  In all variants of inductive logics we have discussed in  the previous section, the semantics of ďŹxed-point construction  can be deďŹned in terms of iteration of operators, associated  with some formulae. In this section we described a logic  which generalizes and subsumes all these logics. The idea is  simple: instead of deďŹning a particular ďŹxed-point construct  we allow arbitrary iterations of operators deďŹned by formulae.  These iterations when evaluated over a structure give rise to  the sequences of relations over that structure. Then we allow  ďŹrst-order temporal logic machinery to access these sequences  of relations (temporal structures) and deďŹne new relations in  terms of these sequences.  The syntax of đš đ + đ đ´đź (ďŹrst-order logic with temporally  accessible iterations) extends the standard syntax of ďŹrstorder logic with the following construct. Let đ(đ, đĽ  ÂŻ) be a  formula with free individual variables đĽ  ÂŻ = đĽ1 , . . . , đĽđ and  free predicate variable đ of arity đ. Let đ(ÂŻ  đ§ ) be a ďŹrst-order  temporal formula (đŻ â-formula) with free individual variables  đ§ )][đźđ,ÂŻđĽ đ]đĄÂŻ is also formula,  đ§ÂŻ = đ§1 , . . . , đ§đ . Then đ := [đ(ÂŻ  where đĄÂŻ is a tuple of terms of the same length as đ§ÂŻ. The free  variables of đ are the free variables occurring in đĄÂŻ and the  free variables of đ and đ other than đ§ÂŻ and đĽ  ÂŻ, respectively.  The semantics of this construct is deďŹned as follows.  Let âł be a structure with the domain đ and interpretations  of all predicate and functional symbols in âł, which will be  denoted by đ đ and đ đ . Let đ be an assignment providing  an interpretation of free variables of đ and đ in đ . Consider  the iteration đ0 = â and đđ+1 = ÎŚđ (đđ ). It gives rise to the  temporal structure đ = đ0 , . . . , đđ , . . ., where every đđ is  a structure âł extended by an interpretation of đ by đđ . In  particular đ0 is âł augmented with the empty interpretation  of đ. Let đ is an đ-ary relation deďŹned by đ(ÂŻ  đ§ ) on đ0 (i.e on  đ§ )][đźđ,ÂŻđĽ đ]ÂŻ  đ iff đ  ÂŻâ  đ ). Then for any tuple đ  ÂŻ â đ đ , âł âŁ= [đ(ÂŻ  đ . As in other ďŹxed point logics, we also allow simultaneous  iteration formulae, i.e. the formulae of the form đ := [đ(ÂŻ  đ§ )][đź :  đ]đĄÂŻ where  â§  ďŁ´  ďŁ´ đ1 (đĽÂŻ1 ) â đ1 (đ1 , . . . , đđ , đĽÂŻ1 )  â¨  ..  đ :=  .  ďŁ´  ďŁ´  âŠ  đđ (đĽÂŻđ ) â đđ (đ1 , . . . , đđ , đĽÂŻđ )  Proof (hint). The proof proceeds by standard argument  based on faithful modelling of simultaneous iteration by  a single iteration of higher-dimensional joint operator. Full  details of such modelling (for LFP, IFP, PFP) can be found in  [10].  IV. FO+TAI VS OTHER FIXED POINT LOGICS  In this section we show that FO+TAI subsumes many ďŹxed  point logics. We start with classical ďŹxed point constructs.  A. Least Fixed Point  Translation of LFP construct in FO+TAI follows literally a  description of the least ďŹxed point as a limit - least ďŹxed point  consists of precisely those tuples which eventually appear in  approximations:  ÂŻ)]đĄÂŻ := [â˘đ(ÂŻ  đ§ )][đźđ,ÂŻđĽ đ(đ, đĽ  ÂŻ)]đĄÂŻ  [đżđš đđ,ÂŻđĽ đ(đ, đĽ  Here we assume of course that đ is positive in đ(đ, đĽ  ÂŻ).  B. InďŹationary Fixed Point  Similarly to the case of LFP we have for InďŹationary Fixed  Point the following deďŹnition:  [đźđš đđ,ÂŻđĽ đ(đ, đĽ  ÂŻ)]đĄÂŻ := [â˘đ(ÂŻ  đ§ )][đźđ,ÂŻđĽ (đ(ÂŻ  đĽ) â¨ đ(đ, đĽ  ÂŻ))]đĄÂŻ  C. Partial Fixed Point  The following deďŹnition  ÂŻ)]đĄÂŻ :=  [đ đš đđ,ÂŻđĽ đ(đ, đĽ  [â˘(đ(ÂŻ  đ§ ) â§ âÂŻ  đŁ (đ(ÂŻ  đŁ) â  ÂŻ)]đĄÂŻ  đ(ÂŻ  đŁ )))][đźđ,ÂŻđĽ đ(đ, đĽ  says that Partial Fixed Point consists of the tuples satisfying  two conditions: 1) a tuple should appear at some stage đ of  iterations, and furthermore 2) approximations at the stages đ  and đ + 1 should be the same.  is a system of formulae. Simultaneous iteration  59  D. General PFP  where đ đ (đ) is the temporal formula  In [18] an alternative semantics for PFP has been deďŹned  under the name general PFP. Unlike the standard PFP general  PFP generalizes easily to inďŹnite structures and having the  same expressive power as standard PFP over ďŹnite structures  provides sometimes with more concise and natural equivalent  formulae. As we mentioned in the Introduction, in this paper  we consider only semantics over ďŹnite structures and for this  case deďŹnition of general PFP is as follows. Let ÎŚ is an  operator deďŹned by an arbitrary formula đ(đ, đĽ  ÂŻ). Consider  the iteration:  â đ0 = â  â đđ+1 = ÎŚ(đđ )  Then general partial ďŹxed point of ÎŚ is deďŹned [18] as  a set of tuples which occur at every stage of the ďŹrst cycle  in the sequence of stages. As noticed in [18], in general,  this deďŹnition is not equivalent to saying that the ďŹxed point  consists of those tuples which occur at all stages starting  from some stage. Non-equivalence of two deďŹnitions can be  established if transďŹnite iteration is allowed. Since we consider  the iteration over ďŹnite structures only, a cycle, that is a  sequence đđ , . . . , đđ with đđ = đđ , will necessarily appear  at some ďŹnite stages đ and đ. Based on that, for the case of  ďŹnite structures we have the following equivalent deďŹnition of  PFPgen in terms of FO+TAI:  â˘(đ(ÂŻ  đ§ ) â§ âÂŻ  đŚ (đ(ÂŻ  đŚ) â  ÂŻ)]đĄÂŻ := [â˘  [đ đš đ đđđđ,ÂŻđĽ đ(đ, đĽ  đ(ÂŻ  đŚ )) â§ (âÂŻ  đŚ (đ(ÂŻ  đŚ) â§  âÂŻ  đŚ (đ(ÂŻ  đŚ) â  ÂŹđ(ÂŻ  đŚ ))â¨  đ(ÂŻ  đŚ ))))  Similarly we have  đ  [đđđ,ÂŻ  ÂŻ)]đĄÂŻ := [đ đ (đ)][đźđ,ÂŻđĽ đ(đ, đĽ  ÂŻ)]đĄÂŻ  đĽ đ(đ, đĽ  where đ đ (đ) is the temporal formula  â˘(đ(ÂŻ  đ§ ) â§ âÂŻ  đŚ (đ(ÂŻ  đŚ) â  đ(ÂŻ  đŚ )) â§ (âÂŻ  đŚ (ÂŹđ(ÂŻ  đŚ) â§  âÂŻ  đŚ (đ(ÂŻ  đŚ) â  đ(ÂŻ  đŚ ))â¨  đ(ÂŻ  đŚ ))))  F. Further variations of FO+TAI deďŹnitions  In the above FO+TAI deďŹnition for LFP it is assumed that  đ(đ, đĽ  ÂŻ) is positive in đ. If we consider the same deďŹnition  [â˘đ(ÂŻ  đ§ )][đźđ,ÂŻđĽ đ(đ, đĽ  ÂŻ)]đĄÂŻ for not necessarily positive (and monotone) đ(đ, đĽ  ÂŻ) than we get a deďŹnition of an operator which  does not have direct analogue in standard ďŹxed-point logics  and may be considered as a variation of PFP, which we denote  by đ đš đ âŞ . It has turned out though that đ đš đ âŞ is easily  deďŹnable by simultaneous PFP, for details see Theorem 1.  If in the deďŹnition of PFPgen we swap temporal operators  we get a deďŹnition of what can be called Recurrent Fixed Point  (RFP)1 :  [đđš đđ,ÂŻđĽ đ(đ, đĽ  ÂŻ)]đĄÂŻ := [  đ(ÂŻ  đ§ )][đźđ,ÂŻđĽ đ(đ, đĽ  ÂŻ)]đĄÂŻ  â˘đ(ÂŻ  đ§ )][đźđ,ÂŻđĽ đ(đ, đĽ  ÂŻ)]đĄÂŻ  Again it is not difďŹcult to demonstrate that đđš đ is deďŹnable in terms of either PFP or PFPgen.  The deďŹnition says that general PFP consists of those tuples  which occur at all ďŹnite stages starting from some stage of  iteration.  V. ID- LOGIC OF NON - MONOTONE INDUCTION  Motivated by well-founded semantics for logic programming in [7] a logic ID of non-monotone deďŹnitions has  been introduced. Similarly to already discussed ďŹxed point  extensions, the syntax of ID-logic (this version2 we call  FO+ID) extends the standard syntax of ďŹrst-order logic with  the following construct. Let đ(đ, đĽ  ÂŻ) be a formula with free  individual variables đĽ  ÂŻ = đĽ1 , . . . , đĽđ and free predicate variable  đĽ) â đ(đ, đĽ  ÂŻ))]đĄÂŻ is also formula.  đ . Then đ := [đźđˇđ,ÂŻđĽ (đ (ÂŻ  Now we explain semantics of this construct in terms of  FO+TAI, showing thereby that FO+ID is also subsumed by  FO+TAI. Since đ(đ, đĽ  ÂŻ) may have both negative and positive  occurrences of đ the iteration of the operator Î¨đ applied to  the empty interpretation of đ will not necessary converge  to a ďŹxed point. In the semantics adopted in FO+ID, the  extension of deďŹned predicate is obtained as a common limit  of iteratively computed lower and upper bounds (if it exists).  Introduce two new auxiliary predicate variables đđ and đđ˘ ,  with the intended meaning to be lower and negated upper  approximations for the deďŹned predicate. Further, denote by  E. Anti-monotone induction  ÂŻ).  Let ÎŚđ be an operator associated with a formula đ(đ, đĽ  It may turn out that this operator is anti-monotone, that is  đ â đ â˛ => ÎŚđ (đ â˛ ) â ÎŚđ (đ ). Syntactical condition which  entails anti-monotonicity is that the predicate variable đ has  only negative occurrences in đ(đ, đĽ  ÂŻ). An interesting analogue  of classical Knaster-Tarski result holds [27], [11]: for antimonotone operator ÎŚ the iteration đ0 = â, đđ+1 = ÎŚ(đđ )  converges to a pair of oscillating points đ and đ that is  đ = ÎŚ(đ ) and đ = ÎŚ(đ). What is more, one of the  oscillating points is a least ďŹxed point đ and another is the  greatest ďŹxed point đ of the monotone operator ÎŚ2 (where  ÎŚ2 (đ) = ÎŚ(ÎŚ(đ))).  One may extend then the ďŹrst-order logic with suitable oscilđ  đ  ÂŻ)]đĄÂŻ and [đđđ,ÂŻ  ÂŻ)]đĄÂŻ  lating points constructs [đđđ,ÂŻ  đĽ đ(đ, đĽ  đĽ đ(đ, đĽ  for đ(đ, đĽ  ÂŻ) negative in đ, with obvious semantics. Because  of the deďŹnability of oscillating points as the ďŹxed points of  ÎŚ2 , ďŹrst order logic extended with these constructs is no more  expressive than FO+LFP and therefore than FO+TAI. What  is interesting here is that FO+TAI allows to deďŹne oscillating  points directly, not referring to LFP construct. For the greater  of two oscillating points we have  1 Notice, than in general, and similarly to PFPgen, neither of PFPâŞ or RFP  deďŹne ďŹxed points of any natural operators. But we follow [18] and retain the  name âďŹxed pointsâ and FP in abbreviations.  2 In [7] the inductive deďŹnitions of ID-logic are presented not by operators,  but by special formulae called deďŹnitions. The difference is purely syntactical  and insigniďŹcant for our discussion here.  đ  ÂŻ)]đĄÂŻ := [đ đ (đ)][đźđ,ÂŻđĽ đ(đ, đĽ  ÂŻ)]đĄÂŻ  [đđđ,ÂŻ  đĽ đ(đ, đĽ  60  đ(đđ ), respectively, by đ(ÂŹđđ˘ ) the result of replacement of  all negative occurrences of đ in đ(đ, đĽ  ÂŻ) with đđ , resp. with  ÂŹđđ˘ . All positive occurrences of đ remains unaffected in both  cases. Consider then the following deďŹnition of the step of  simultaneous iteration:  {  đđ˘ (ÂŻ  đŚ ) â ÂŹ[đżđš đđ,ÂŻđĽ (đ(đđ ))]ÂŻ  đŚ  đ :=  đđ (ÂŻ  đŚ ) â [đżđš đđ,ÂŻđĽ (đ(ÂŹđđ˘ ))]ÂŻ  đŚ  we wish to consider. In general the deďŹnition of đđ depends  (syntactically) on the choice of đ§ÂŻ, and all variables in đ§ÂŻ may  occur free in đđ .  The deďŹnition of đđ is by induction on đ. For atomic đ we  let đđ = đ, so that âł âŁ=đ đđ iff âłâ , 0 âŁ=đ đ as required  by (1). We stipulate that the map đ â đđ commutes with all  ďŹrst-order operations. Let đ, đ be given and assume we have  deďŹned đđ . Then:  â đ  is the result of replacing each subformula đ(đĄÂŻ) in  đ  đđ by the result of freely substituting đĄÂŻ for đĽ  ÂŻ in đâ (or  â  by âÂŻ  đĽ(đĄÂŻ = đĽ  ÂŻ â§ đ )).  â đâ˘đ = [đ đš đ đÂŻ  đ§ : đ] where  â§  â¨ đ´âđ  đâ˛ (ÂŻ  đĽ) â [(đ´ â (đâ )(đâ˛ /đ) â§ (ÂŹđ´ â đ(ÂŻ  đĽ))]  đ :=  âŠ  đ(ÂŻ  đ§ ) â đ(ÂŻ  đ§ ) â¨ (đ´ â§ đđ (đâ˛ /đ))  Since both đ(đđ ) and đ(ÂŹđđ˘ ) are positive in đ the least  ďŹxed point operators in the right hand sides of the deďŹnitions  are well-deďŹned.  Starting with đđ0 = đđ˘0 = â and iterating this deďŹnition one  gets the sequences of lower and negated upper approximations  đđđ and đđ˘đ . If the lower and upper approximations converge  to the same limit, i.e. đđâ = ÂŹđđ˘â then by deďŹnition [7]  this limit is taken as the predicate deďŹned by the above IDconstruct. Summing up, the FO+ID formula đ shown above is  equivalent to the following formula of FO+TAI:  đĽ) â§ âÂŻ  đŚ (đđ (ÂŻ  đŚ ) â ÂŹđđ˘ (ÂŻ  đŚ ))][đź : đ â ]đĄÂŻ  [â˘(đđż (ÂŻ  â  where đ â is obtained of the above đ by translation of the right  hand side parts of S into FO+TAI.  VI. E XPRESSIVE POWER  We have seen in previous sections that FO+TAI is very  expressive logic and subsumes many other ďŹxed-point logics,  including most expressive (among mentioned) FO+PFP (and  FO+PFPgen). The natural question is whether FO+TAI is  more expressive than FO+PFP? In this section we answer  this question negatively and show that for any formula in  FO+TAI one can effectively produce an equivalent (over ďŹnite  structures) FO+PFP formula.  Here, (đâ˛ /đ) denotes replacement of the relation symbol  đ by a new one, đâ˛ , of the same arity. A is 0-ary relation  symbol representing âactiveâ. đ´ is false initially and true  thereafter.  đđđ° đ = [đ đš đ đÂŻ  đ§ : đ] where  â§  đ´âđ  ďŁ´  ďŁ´  â¨ â˛  đĽ) â [(đ´ â (đâ )(đâ˛ /đ) â§ (ÂŹđ´ â đ(ÂŻ  đĽ))]  đ (ÂŻ  đ :=  đľ(ÂŻ  đ§ ) â đľ(ÂŻ  đ§ ) â¨ (đ´ â§ ÂŹđđ (đâ˛ /đ))  ďŁ´  ďŁ´  âŠ  đ§ ))  đ(ÂŻ  đ§ ) â đ(ÂŻ  đ§ ) â¨ (đđ (đâ˛ /đ) â§ ÂŹđľ(ÂŻ  Now we deďŹne ([đ][đźđ,ÂŻđĽ đ](đĄÂŻ))â to be the result of replacing  đ§ ) by âĽ.  every subformula đ(ÂŻ  đŁ )) of đđ (đĄÂŻ/ÂŻ  Correctness of the proposed translation đ â đ â is established by induction along the construction. Correctness of the  base case and induction steps follows by routine check of  deďŹnitions.  Theorem 1 For every formula đ := [đ][đźđ,ÂŻđĽ đ]đĄÂŻ of FO+TAI  there is an equivalent formula đ â of FO + PFP  A. Temporally accessible monotone induction  What happens if we apply temporal logic based access to the  iteration steps of monotone induction? Will the resulting logic  be more expressive than the logic of the monotone induction?  Negative answer is given by the following theorem.  We deďŹne a translation of TAI-formula đ to a PFP-formula  đâ satisfying âł âŁ=đ đ â đâ for all structures âł and  assignments đ to variables.  It is deďŹned by induction on đ construction. If đ is atomic,  we deďŹne đâ = đ, and we stipulate that the operation ââ  commutes with all ďŹrst-order connectives and quantiďŹers. Fix  đ(đ, đĽ  ÂŻ) and suppose đâ is deďŹned. For each temporal formula  đ, we will ďŹrst deďŹne an auxiliary PFP-formula đđ with  property (1) below, which can easily be used to show that the  translation is correct. Given a structure âł with interpretations  for all symbols of đ, including đ, we deďŹne âłâ˛ to be the  đ) iff âł âŁ= đ(đ; đ  ÂŻ)  same as âł except that âłâ˛ âŁ= đ(ÂŻ  for each đ  ÂŻ â đ âŁÂŻđĽâŁ . Let âłâ be the temporal structure  (âł, âłâ˛ , âłâ˛â˛ , . . .). Then for all âł and all assignments đ of  ďŹrst-order variables into (the domain of) âł, we will have  Theorem 2 For every formula đ := [đ][đźđ,ÂŻđĽ đ]đĄÂŻ of FO+TAI  with đ positive in đ there is an equivalent formula (đ )â of  FO + LFP  (1)  Proof. The translation here uses the stage comparison theorem  of Moschovakis [21]. With any monotone map ÎŚđ of arity đ  deďŹned by a positive in đ formula and a structure with ďŹnite  domain đ on can associate a rank function âŁ âŁÎŚ : đ đ â  ââŞ{â} which when applied to any tuple of elements đ  ÂŻ â đđ  yeilds the least number đ such that đ  ÂŻ â ÎŚđ (â) if such đ exists  and â otherwise, i.e. when đ  ÂŻ ââ ÎŚâ  đ (â)  ÂŻ â¤ÎŚ ÂŻđ â đ  ÂŻ, ÂŻđ â  Stage comparison relation â¤ÎŚ deďŹned as đ  ÂŻđ âŁ.  (â)  and  âŁ  đ  ÂŻ  âŁâ¤âŁ  ÎŚâ  đ  First, for simplicity of deďŹnitions, we ďŹx a tuple đ§ÂŻ of distinct  variables containing all variables (free and bound) of all đ  Theorem 3 (stage comparison [21]) For any đżđš đđ operator associated with a ďŹrst-order formula đ(đ, đĽ  ÂŻ) positive in  âł âŁ=đ đđ â âłâ , 0 âŁ=đ đ  61  đ the stage comparison relation â¤đ is deďŹnable in FO+LFP  uniformly over all ďŹnite structures.  central in assumption-guarantee paradigm [20], [22], [2], [12],  [25] for compositional or hierarchical veriďŹcation. Within this  paradigm a component of a system is speciďŹed in terms of  assumptions about its environment and properties it guaranteed  about its behaviour, provided the assumptions hold. Reasoning  about such speciďŹcations uses a kind of circular compositional  rule and [25] provides with a unifying framework in which  assume-guarantee semantics was given for properties expressible as ďŹxed points. In [26] higher-order modal ďŹxed point  logic was proposed which allows to deďŹne assume-guarantee  speciďŹcations for modal ďŹxed points.  We show here that there is an alternative way to ďŹx đcalculus, that is by adding the temporal access to it. It makes an  extended đ-calculus more expressive and closed under assumeguarantee speciďŹcations.  Extend the standard synax of đ-calculus by the following  construct [đ][đź : đ] where đ is a propositional linear time  temporal formula and  â§  đ1 â đ1 (đ1 , . . . , đđ )  ďŁ´  ďŁ´  â¨  ..  đ :=  .  ďŁ´  ďŁ´  âŠ  đđ â đđ (đ1 , . . . , đđ )  The stage comparison relation can be used then to simulate  time in modelling temporal access to the iteration steps within  FO+LFP. As above, the translation is deďŹned by induction  on formula structure. We present here only the translation of  đ§ ) is a temporal formula and đ is in  [đ(ÂŻ  đ§ )][đźđ,ÂŻđĽ đ]đĄÂŻ where đ(ÂŻ  FO+LFP.  For a formula [đ(ÂŻ  đ§ )][đźđ,ÂŻđĽ đ]đĄÂŻ, deďŹne the translation of its  temporal header đ(ÂŻ  đ§ ) in the context of iteration [đźđ,ÂŻđĽ đ], to  a formula in FO+LFP. The translation is indexed by either a  constant đ  (from đ đĄđđđĄ) or a tuple of variables of the same  length as the arity of the predicate used in iteration deďŹnition,  i.e. of đ. Intuitively, [â]đ  and [â]đ˘ÂŻ denote interpretations at the  0th stage of iteration and at the stage âŁÂŻ  đ˘âŁđ , respectively.  â [đ(ÂŻ  đĽ)]đ  := âĽ (for the iteration predicate đ)  â [đ (ÂŻ  đĽ)]đ  := đ (ÂŻ  đĽ) (for any predicate đ other than iteration  predicate).  â [đ(ÂŻ  đĽ)]đ˘ÂŻ := đĽ  ÂŻ â¤đ đ˘  ÂŻ â§ đ(ÂŻ  đĽ) (for the iteration predicate đ )  â [đ (ÂŻ  đĽ)]đ˘ÂŻ := đ (ÂŻ  đĽ) (for any predicate đ other than iteration  predicate)  đ  đ  đ  â [đ â§ đ ] := [đ] â§ [đ ]  đ˘  ÂŻ  đ˘  ÂŻ  đ˘  ÂŻ  â [đ â§ đ ] := [đ] â§ [đ ]  đ  đ  â [ÂŹđ] := ÂŹ[đ]  đ˘  ÂŻ  đ˘  ÂŻ  â [ÂŹđ] := ÂŹ[đ]  đ  đ  â [âđĽđ] := âđĽ[đ]  đ˘  ÂŻ  đ˘  ÂŻ  â [âđĽđ] := âđĽ[đ]  â [  đ ]đ  := âÂŻ  đ˘(đ(ÂŻ  đ˘) â§ [đ ]đ˘ÂŻ )  â˛  â [  đ ]đ˘ÂŻ := âđ˘ÂŻâ˛ (đđđĽđĄđ (ÂŻ  đ˘, đ˘  ÂŻâ˛ ) â§ [đ ]đ˘ÂŻ )  đ  đ˘  ÂŻ  â [â˘đ ] := âÂŻ  đ˘[đżđš đđ,ÂŻđĽ đ]ÂŻ  đ˘ â§ [đ ]  â˛  đ˘  ÂŻ  đ˘â˛ ((ÂŻ  đ˘ â¤đ đ˘  ÂŻâ˛ ) â§ [đ ]đ˘ÂŻ )  â [â˘đ ] := âÂŻ  đ  â [đđ° đ ] := âÂŻ  đ˘([đżđš đđ,ÂŻđĽ đ]ÂŻ  đ˘ â§ [đ ]đ˘ÂŻ ) â§ âÂŻ  đ˘â˛ (ÂŻ  đ˘â˛ <đ đ˘  ÂŻ) â  đ˘  ÂŻâ˛  [đ]  â˛  đ˘  ÂŻ  â [đđ° đ ] := âÂŻ  đ˘â˛ (ÂŻ  đ˘ â¤đ đ˘  ÂŻâ˛ â§ [đ ]đ˘ÂŻ ) â§ âÂŻ  đ˘â˛â˛ (ÂŻ  đ˘ â¤đ đ˘  ÂŻâ˛â˛ <đ  â˛â˛  â˛  đ˘  ÂŻ  đ˘  ÂŻ ) â [đ]  In the deďŹnition of [ đ ]đ˘ÂŻ above, the expression  đ˘, đ˘  ÂŻâ˛ ) denotes a LFP formula deďŹning the relation next  đđđĽđĄđ (ÂŻ  with respect to linear order â¤đ .  Now to get a formula in FO+LFP equivalent to  [đ(ÂŻ  đ§ )][đźđ,ÂŻđĽ đ]đĄÂŻ we take the translation [đ(ÂŻ  đ§ )]đ  in the context  of [đźđ,ÂŻđĽ đ]đĄÂŻ.  Correctness of the proposed translation đ â đ â is established by induction along the construction. Correctness of the  base case and induction steps follows by routine check of  deďŹnitions.  where đ1 , . . . , đđ have only positive occurences in đ1 , . . . , đđ .  For a transition system with a set of states đ the iteration  of the monotone operator đšđ associated with the above đ  gives rise to the sequence đÂŻ 0 = ÂŻâ and t đÂŻ đ+1 = đšđ (đÂŻ đ ).  For every state đ  â đ this sequence induces a propositional  temporal model đ (đ ) by letting đ (đ )đ âŁ= đđ iff đ  â đđđ .  DeďŹne now the semantics of [đ][đź : đ] to be the set of all  points in đ whose associated temporal models satisfy đ , i.e.  {đ  â đ âŁ đ (đ ) âŁ= đ}. We call such a deďŹned extenstion  đ+TAI.  DeďŹnition 1 (assume-guaranteed speciďŹcations [26])  For monotonic functions đ´, đş : 2đ â 2đ , the assumeguarantee property đđ.đ´(đ) âł đđ.đş(đ)  â  2đ  is deďŹned as đ  â  đđ.đ´(đ) âł đđ.đş(đ) iff  âđ âĽ 0.đ  â [đđ.đ´(đ)]đ â đ  â [đđ.đş(đ)]đ+1 .  Proposition 2 For all đ+TAI formulae đ(đ) and đ(đ ) positive in đ and đ , assume-guarantee property đ(đ) âł đ(đ ) is  deďŹnable in đ + đ đ´đź.  Proof. Let đ(đ) âł đ(đ ) âĄ [  đ(đ); đ â đ(đ )].  (đ â  đ )][đ â  Corollary 1 đ+TAI is more expressive than đ-calculus.  VII. M ODAL đ- CALCULUS WITH TEMPORAL ACCESS  VIII. C ONCLUDING REMARKS  Modal đ-calculus [16] is an extenstion of a basic propositional modal logic with the monotone ďŹxed points. It is  an expressive logic subsuming many other propositional temporal logics and it is one of the unifying formalisms used  in the research on model checking and veriďŹcation. As it  was shown in [26] the đ-calculus is not closed under construction of the assume-guarantee speciďŹcations which are  We proposed in this paper the logic with temporally accessible iteration which provides the simple unifying framework for  studying logics with inductive ďŹxed point operators. Obvious  next step is to extend the semantics to the case of inďŹnite  structures. Also of interest are modiďŹcations of FO+TAI with  branching time access to incorporate non-deterministic inductive deďŹnitions [5]. Further analysis of the modal variants,  62  [24] M. Vardi, The complexity of relational query languages. In Proceedings  of the 14th ACM Symposium on the Theory of Computing, 1982, pp  137-146.  [25] M. Viswanathan and R. Viswanathan, Foundations of Circular Compositional Reasoning,. In Proceedings of the International Colloquim on  Automata, Languages and Programming. LNCS 2076, Springer-Verlag,  2001, pp 835-847.  [26] M. Viswanathan and R. Viswanathan, A Higher Order Modal Fixed Point  Logic, in P. Gardner and N. Yoshida (Eds. ): CONCUR 2004, LNCS  3170, pp 512-528, 2004.  [27] S.Yablo. Truth and reďŹection. Journal of Philosophical Logic, 14: 297â  349, 1985.  including the logics with not necessarily monotone inductive  deďŹnitions and comparisons with MIC (modal iteration calculus) and MPC (modal partial iteration calculus) [17] are  required. Finaly notice that FO+TAI and its variants may ďŹnd  applications in formal analysis of revision theory in the spirit  of proposition from [19] to analyse âthe nonmonotonic process  by looking at the behaviour of interpretations under revision  rulesâ.  ACKNOWLEDGMENTS  Author would like to thank anonymous referees for their  helpful suggestions.  R EFERENCES  [1] P. Aczel. An introduction to inductive deďŹnitions. In Handbook on  Mathemtical Logic, J. Barwise, ed., Horth-Holland Publishing Compant,  1977.  [2] M. Abadi, L. Lamport, Composing SpeciďŹcations. ACM Transactions  on Programming Languages and Systems 17 (1995) 507-534.  [3] S.Abiteboul and V. Vianu. Computing with ďŹrst-order logic. J. Compt.  Syst. Sci., 50, 1995, pp 309-335.  [4] S. Abiteboul, M. Vardi, V. Vianu, Fixpoint logics, relational machines,  and computational complexity. Journal of ACM, v.44, January 1997, pp  30-56.  [5] A. Dawar and Y. Gurevich, Fixed-point logics. Bulletin of Symbolic  Logic, 8(1):65-88, 2002.  [6] S. Demri and D. Nowak. Reasoning about transďŹnite sequences. International Journal of Foundations of Computer Science, 18(1), pp 87-112,  2007.  [7] M. Denecker, and E. Ternovska, A Logic of Non-Monotone Inductive  DeďŹnitions, ACM Transactions on Computational Logic, Vol. 9, No. 2,  Article 14, 2008.  [8] M. Denecker, and E. Ternovska, Inductive Situation Calculus, ArtiďŹcial  Intelligence 171 (5-6), pp. 332-360, April, 2007.  [9] E. Allen Emerson, Model Checking and the Mu-calculus. Descriptive  Complexity and Finite Models: 185-214, American Mathematical Society. 1996  [10] H.-D. Ebbinghaus, J. Flum, Finite Model Theory, 2nd Edition, Springer,  1999  [11] M. Fitting, Fixpoint semantics for logic programming â a survey.  Theoretical Computer Science, 278, pp 25â31, 2002.  [12] T.A. Henzinger, S. Qadeer, S.K. Rajamani, S. Tasiran, An assumeguarantee rule for checking simulation. In G. Gopalakrishnan, P. Windley, eds. FMCAD 98: Formal Methods in Computer-aided Design, vol  1522 of LNCS, Springer-Verlag 91998) 421â432  [13] D.M. Gabbay, M.A. Reynolds, M. Finger. Temporal Logic. Mathematical Foundations and Computational Aspects, Volume 2, Oxford Science  Publications, Clarendon Press, 2000.  [14] N. Immerman. Relational queries computable in polynomial time. Informaton and Control, 68, pp 86â104, 1986  [15] N. Immerman. Descriptive Complexity, Springer-Verlag, 1999.  [16] D. Kozen, Results on the propositional đ-calculus. Theoretical Computer  Science, 27, pp 333-354, 1983.  [17] S. Kreutzer, Pure and Applied Fixed-Point Logics, dissertation thesis,  RWTH Aachen, 2002.  [18] S. Kreutzer, Partial Fixed-Point Logic on InďŹnite Structures, Proceedings  of CSL 2002, pp 337-351, 2002.  [19] B. LÂ¨  đwe, Revision Forever! in Conceptual Structures: Inspriration and  Application, LNCS 4068, pp 22-36, 2006.  [20] J. Misra, K.M. Chandy, Proofs of network processes. IEEE Transactions  on Software Engineering SE-7 (1981) 417â226  [21] Y.N. Moschovakis. Elementary Induction on Abstract Structures, North  Holland, 1974.  [22] A. Pnueli, In transition from global to modular temporal reasoning about  programs. In: Logics and Models of Concurrent Systems. Nato ASI  Series. Springer-Verlag (1984) 123-144  [23] A. Tarski, Lattice-theoretical ďŹxpoint theorem and its applications.  PaciďŹc Journal of Mathematics, 5, 285â309, 1955  63 